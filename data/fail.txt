LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 42
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  sorry `«[anonymous]:0:0» = CategoryTheory.inv sorry : Prop\nbut is expected to have type\n  sorry `«[anonymous]:8:4» = CategoryTheory.inv sorry : Prop') - Line 43
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 90
LeanError(message='Lean error:\nsimp made no progress') - Line 92
LeanError(message='Lean error:\ninternal exception #5') - Line 130
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 135
LeanError(message='Lean error:\ndsimp made no progress') - Line 136
LeanError(message='Lean error:\ninternal exception #5') - Line 137
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ U,\n      ∃ (m : ?m.12092 ∈ U),\n        ∃ s, (CategoryTheory.ConcreteCategory.hom (TopCat.Presheaf.germ ?m.12091 U ?m.12092 m)) s = sorry) →\n    ∃ x, x.2 • y = ?m.3264\nR S : CommRingCat\np : PrimeSpectrum ↑R\ninst✝ : Algebra ↑R ↑S\nx✝ : Sort u_1\ntoPushforwardStalkAlgHom : x✝\ny : ?m.12065 R S _fvar.1543 p\n⊢ ∃ x, x.2 • y = ?m.3264") - Line 139
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3649\nScheme : ?m.1587\nIsAffineOpen : ?m.1971\nX : sorry\nY : sorry\nf : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nx✝ : Sort u_1\nSpec : x✝\nR : CommRingCat\nx : ?m.3631 R\n⊢ sorry = sorry") - Line 148
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5833') - Line 154
LeanError(message='Lean error:\ninternal exception #5') - Line 155
LeanError(message='Lean error:\ninternal exception #5') - Line 156
LeanError(message='Lean error:\ninternal exception #5') - Line 157
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝ : Sort u_1\nstalkClosedPointTo : x✝\ng : sorry\n⊢ sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 159
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nR S : CommRingCat\ninst✝ : IsLocalRing ↑S\nφ : R ⟶ S\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry φ") - Line 160
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU✝ : sorry\nV : sorry\nhU✝ : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nU : sorry\nhU : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry (sorry ≪≫ sorry).hom") - Line 161
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf₁ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\nf₂ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\n⊢ f₁ = f₂ ↔ ∃ (_ : f₁.fst = f₂.fst), ↑f₁.snd = CategoryTheory.CategoryStruct.comp sorry ↑f₂.snd") - Line 165
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 166
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 180
LeanError(message='Lean error:\ninternal exception #5') - Line 181
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 182
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nR : Type u\ninst✝ : CommRing R\nx✝ : Sort u_1\nconst : x✝\nf g₁ g₂ : R\nU : ?m.5047 R f g₁ g₂\nhu₁ : ?m.5048 R f g₁ g₂ U\nhu₂ : ?m.5049 R f g₁ g₂ U hu₁\n⊢ sorry * sorry = sorry") - Line 183
LeanError(message='Lean error:\n<input>:1:48: expected end of input') - Line 187
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 188
LeanError(message='Lean error:\ninternal exception #5') - Line 191
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 198
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, ⋯⟩\nargument\n  Submonoid.mem_powers ?m.98675\nhas type\n  ?m.98675 ∈ Submonoid.powers ?m.98675 : Prop\nbut is expected to have type\n  sorry ∈ ?m.183425 i j : Prop') - Line 207
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 208
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = _a\nError: application type mismatch\n  @?m.7636 R inst✝ toOpen\nargument\n  toOpen\nhas type\n  x✝² : Sort u_1\nbut is expected to have type\n  ?m.7633 R : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nR : Type u\ninst✝ : CommRing R\nx✝² : Sort u_1\ntoOpen : x✝²\nx✝¹ : Sort u_2\ntoBasicOpen : x✝¹\nx✝ : Sort u_3\nstructureSheaf : x✝\n⊢ sorry =\n    CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom (algebraMap R (Localization.Away 1)))\n      (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom sorry) sorry)") - Line 211
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 213
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (Localization.AtPrime y.asIdeal) ⟶ ?m.13871 h') - Line 214
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 215
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nR : Type u\ninst✝¹ : CommRing R\nS : Type u\ninst✝ : CommRing S\nx✝ : Sort u_1\nisLocallyFraction : x✝\nf : R →+* S\nU : sorry\nV : sorry\nhUV : sorry ⊆ ⇑(PrimeSpectrum.comap f) ⁻¹' sorry\ns : sorry\nhs : sorry\n⊢ sorry") - Line 216
LeanError(message='Lean error:\ninternal exception #5') - Line 220
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 221
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  TopologicalSpace.IsTopologicalBasis ?s\nwith\n  sorry\nScheme : ?m.49670\nOpenCover : ?m.49683\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰 : sorry\nf : sorry\ng : sorry\nX : sorry\n⊢ sorry") - Line 236
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.50857 = Set.univ\nScheme : ?m.49757\nP : sorry\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰✝ : sorry\nf : sorry\ng : sorry\nX : sorry\n𝒰 : sorry\n⊢ ⋃ i, Set.range ?m.50785 = Set.univ") - Line 237
LeanError(message='Lean error:\nsimp made no progress') - Line 245
LeanError(message='Lean error:\ninternal exception #5') - Line 246
LeanError(message='Lean error:\ninternal exception #5') - Line 247
LeanError(message='Lean error:\ninternal exception #5') - Line 248
LeanError(message='Lean error:\nnot a type\n  sorry') - Line 249
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 251
LeanError(message='Lean error:\nsimp made no progress') - Line 252
LeanError(message='Lean error:\ninternal exception #5') - Line 253
LeanError(message='Lean error:\ninternal exception #5') - Line 254
LeanError(message='Lean error:\ninternal exception #5') - Line 255
LeanError(message='Lean error:\ninternal exception #5') - Line 256
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 257
LeanError(message='Lean error:\nsimp made no progress') - Line 258
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 259
LeanError(message='Lean error:\nsimp made no progress') - Line 260
LeanError(message='Lean error:\ninternal exception #5') - Line 261
LeanError(message='Lean error:\ninternal exception #5') - Line 262
LeanError(message='Lean error:\ninternal exception #5') - Line 263
LeanError(message='Lean error:\ninternal exception #5') - Line 264
LeanError(message='Lean error:\nno goals to be solved') - Line 265
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 266
LeanError(message='Lean error:\ninternal exception #5') - Line 268
LeanError(message='Lean error:\ninternal exception #5') - Line 269
LeanError(message='Lean error:\nsimp made no progress') - Line 270
LeanError(message='Lean error:\ninternal exception #5') - Line 271
LeanError(message='Lean error:\ninternal exception #5') - Line 272
LeanError(message='Lean error:\ninternal exception #5') - Line 273
LeanError(message='Lean error:\ninternal exception #5') - Line 274
LeanError(message='Lean error:\ninternal exception #5') - Line 275
LeanError(message='Lean error:\ninternal exception #5') - Line 276
LeanError(message='Lean error:\ninternal exception #5') - Line 277
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 278
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 279
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 280
LeanError(message='Lean error:\ninternal exception #5') - Line 281
LeanError(message='Lean error:\ninternal exception #5') - Line 282
LeanError(message='Lean error:\ninternal exception #5') - Line 284
LeanError(message='Lean error:\ninternal exception #5') - Line 285
LeanError(message='Lean error:\ninternal exception #5') - Line 287
LeanError(message='Lean error:\ninternal exception #5') - Line 288
LeanError(message='Lean error:\n<input>:2:18: expected end of input') - Line 289
LeanError(message='Lean error:\nsimp made no progress') - Line 291
LeanError(message='Lean error:\nsimp made no progress') - Line 292
LeanError(message='Lean error:\nsimp made no progress') - Line 293
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ndependent elimination failed, failed to solve equation\n  0 = sorry\nat case Eq.refl") - Line 295
LeanError(message='Lean error:\nsimp made no progress') - Line 300
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 309
LeanError(message='Lean error:\ninternal exception #5') - Line 310
LeanError(message='Lean error:\ninternal exception #5') - Line 311
LeanError(message='Lean error:\nno goals to be solved') - Line 312
LeanError(message='Lean error:\nsimp made no progress') - Line 313
LeanError(message='Lean error:\nsimp made no progress') - Line 314
LeanError(message='Lean error:\nno goals to be solved') - Line 315
LeanError(message='Lean error:\nsimp made no progress') - Line 316
LeanError(message='Lean error:\nsimp made no progress') - Line 317
LeanError(message='Lean error:\nsimp made no progress') - Line 318
LeanError(message='Lean error:\ninternal exception #5') - Line 319
LeanError(message='Lean error:\nsimp made no progress') - Line 320
LeanError(message='Lean error:\nsimp made no progress') - Line 321
LeanError(message='Lean error:\nsimp made no progress') - Line 322
LeanError(message='Lean error:\ntype mismatch\n  if hx : x₁ = x₂ then ?pos✝ else ?neg✝\nhas type\n  ?m.1164 : Sort ?u.1163\nbut is expected to have type\n  sorry = sorry : Prop') - Line 323
LeanError(message='Lean error:\ninternal exception #5') - Line 324
LeanError(message='Lean error:\nno goals to be solved') - Line 325
LeanError(message='Lean error:\ninternal exception #5') - Line 326
LeanError(message='Lean error:\ninternal exception #5') - Line 327
LeanError(message='Lean error:\ninternal exception #5') - Line 328
LeanError(message='Lean error:\ninternal exception #5') - Line 329
LeanError(message='Lean error:\ninternal exception #5') - Line 330
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 331
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 332
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 333
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 334
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 335
LeanError(message='Lean error:\nfailed on all goals') - Line 341
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 343
LeanError(message='Lean error:\ntype mismatch, term\n  pow_zero ?m.1480\nafter simplification has type\n  ?m.1480 ^ 0 = 1 : Prop\nbut is expected to have type\n  sorry = 1 : Prop') - Line 344
LeanError(message='Lean error:\ntype mismatch, term\n  pow_one ?m.1855\nafter simplification has type\n  ?m.1855 ^ 1 = ?m.1855 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 345
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Fin 2 → sorry') - Line 346
LeanError(message='Lean error:\ninternal exception #5') - Line 348
LeanError(message='Lean error:\ninternal exception #5') - Line 349
LeanError(message='Lean error:\nsimp made no progress') - Line 350
LeanError(message='Lean error:\ninternal exception #5') - Line 351
LeanError(message='Lean error:\ninternal exception #5') - Line 352
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 358
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 359
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.4345 F XYIdeal\nargument\n  XYIdeal\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.3497 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\nhy₂ : y₂ = sorry\n⊢ sorry = sorry") - Line 361
LeanError(message='Lean error:\n<input>:4:57: unknown tactic') - Line 362
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?I * ↑?J\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝¹ : Sort u_2\nXYIdeal : x✝¹\nx✝ : Sort u_3\nXIdeal : x✝\nx y : F\nh : sorry\n⊢ sorry * sorry * sorry = 1") - Line 363
LeanError(message='Lean error:\ninternal exception #5') - Line 364
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx y : F\nh : sorry\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = 1") - Line 366
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = ClassGroup.mk sorry") - Line 367
LeanError(message="Lean error:\nunknown free variable '_fvar.3466'") - Line 368
LeanError(message='Lean error:\ninternal exception #5') - Line 370
LeanError(message='Lean error:\ninternal exception #5') - Line 371
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 375
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nAffine : ?m.4209\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nx✝ : Sort u_1\ntoClass : x✝\nP : sorry\n⊢ sorry = 0 ↔ P = 0") - Line 376
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.5305 is not an inductive datatype') - Line 377
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x, 1 * x ^ 2 + 1 * x + sorry = 0) → ∃ C, C • E = E'\nF : Type u_1\ninst✝⁶ : Field F\ninst✝⁵ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝⁴ : E.IsElliptic\ninst✝³ : E'.IsElliptic\ninst✝² : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\ninst✝¹ : E.IsCharTwoJNeZeroNF\ninst✝ : E'.IsCharTwoJNeZeroNF\nheq : E.a₆ = E'.a₆\n⊢ ∃ C, C • E = E'") - Line 378
LeanError(message='Lean error:\ninternal exception #5') - Line 379
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁴ : Field F\ninst✝³ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝² : E.IsElliptic\ninst✝¹ : E'.IsElliptic\ninst✝ : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 380
LeanError(message='Lean error:\ninternal exception #5') - Line 381
LeanError(message='Lean error:\ninternal exception #5') - Line 382
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 383
LeanError(message='Lean error:\napplication type mismatch\n  { out := hchar2 }\nargument\n  hchar2\nhas type\n  sorry ≠ sorry : Prop\nbut is expected to have type\n  ?m.8273 ≠ 0 : Prop') - Line 384
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 385
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = 0") - Line 386
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = -27") - Line 387
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -48") - Line 388
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -64") - Line 389
LeanError(message='Lean error:\nsimp made no progress') - Line 390
LeanError(message='Lean error:\nsimp made no progress') - Line 391
LeanError(message='Lean error:\ninternal exception #5') - Line 392
LeanError(message='Lean error:\ninternal exception #5') - Line 393
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'WeierstrassCurve.j'.") - Line 394
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh3 : 3 ≠ 0\n⊢ sorry = sorry") - Line 395
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 396
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 397
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 398
LeanError(message='Lean error:\ntype mismatch\n  if h3 : sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.2503 : Sort ?u.2502\nbut is expected to have type\n  sorry = sorry : Prop') - Line 399
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 400
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 402
LeanError(message='Lean error:\ninternal exception #5') - Line 405
LeanError(message='Lean error:\ninternal exception #5') - Line 406
LeanError(message='Lean error:\ninternal exception #5') - Line 407
LeanError(message='Lean error:\ninternal exception #5') - Line 408
LeanError(message='Lean error:\ninternal exception #5') - Line 409
LeanError(message='Lean error:\ninternal exception #5') - Line 410
LeanError(message='Lean error:\ninternal exception #5') - Line 411
LeanError(message='Lean error:\nsimp made no progress') - Line 416
LeanError(message='Lean error:\nsimp made no progress') - Line 419
LeanError(message='Lean error:\nsimp made no progress') - Line 420
LeanError(message='Lean error:\nsimp made no progress') - Line 421
LeanError(message='Lean error:\ninternal exception #5') - Line 422
LeanError(message='Lean error:\ninternal exception #5') - Line 423
LeanError(message='Lean error:\ninternal exception #5') - Line 424
LeanError(message='Lean error:\ninternal exception #5') - Line 425
LeanError(message='Lean error:\ninternal exception #5') - Line 426
LeanError(message='Lean error:\ninternal exception #5') - Line 427
LeanError(message='Lean error:\ninternal exception #5') - Line 428
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 429
LeanError(message='Lean error:\nsimp made no progress') - Line 435
LeanError(message='Lean error:\nsimp made no progress') - Line 437
LeanError(message='Lean error:\nsimp made no progress') - Line 438
LeanError(message='Lean error:\nsimp made no progress') - Line 439
LeanError(message='Lean error:\nsimp made no progress') - Line 440
LeanError(message='Lean error:\ninternal exception #5') - Line 441
LeanError(message='Lean error:\ninternal exception #5') - Line 442
LeanError(message='Lean error:\ninternal exception #5') - Line 443
LeanError(message='Lean error:\ninternal exception #5') - Line 444
LeanError(message='Lean error:\ninternal exception #5') - Line 445
LeanError(message='Lean error:\ninternal exception #5') - Line 446
LeanError(message='Lean error:\ninternal exception #5') - Line 447
LeanError(message='Lean error:\ninternal exception #5') - Line 448
LeanError(message='Lean error:\nsimp made no progress') - Line 449
LeanError(message='Lean error:\ninternal exception #5') - Line 451
LeanError(message='Lean error:\ninternal exception #5') - Line 452
LeanError(message='Lean error:\ninternal exception #5') - Line 457
LeanError(message='Lean error:\ninternal exception #5') - Line 458
LeanError(message='Lean error:\ninternal exception #5') - Line 459
LeanError(message='Lean error:\ninternal exception #5') - Line 460
LeanError(message='Lean error:\ninternal exception #5') - Line 461
LeanError(message='Lean error:\ninternal exception #5') - Line 462
LeanError(message='Lean error:\ninternal exception #5') - Line 463
LeanError(message='Lean error:\ninternal exception #5') - Line 464
LeanError(message='Lean error:\ninternal exception #5') - Line 465
LeanError(message='Lean error:\ninternal exception #5') - Line 466
LeanError(message='Lean error:\ninternal exception #5') - Line 467
LeanError(message='Lean error:\ninternal exception #5') - Line 468
LeanError(message='Lean error:\ninternal exception #5') - Line 469
LeanError(message='Lean error:\ninternal exception #5') - Line 470
LeanError(message='Lean error:\ninternal exception #5') - Line 473
LeanError(message='Lean error:\ninternal exception #5') - Line 474
LeanError(message='Lean error:\ninternal exception #5') - Line 475
LeanError(message='Lean error:\ninternal exception #5') - Line 476
LeanError(message='Lean error:\ninternal exception #5') - Line 477
LeanError(message='Lean error:\ninternal exception #5') - Line 478
LeanError(message='Lean error:\ninternal exception #5') - Line 479
LeanError(message='Lean error:\ninternal exception #5') - Line 480
LeanError(message='Lean error:\ninternal exception #5') - Line 481
LeanError(message='Lean error:\ninternal exception #5') - Line 482
LeanError(message='Lean error:\ninternal exception #5') - Line 483
LeanError(message='Lean error:\ninternal exception #5') - Line 484
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 485
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁶ : Field F\ninst✝⁵ inst✝⁴ : CharP F 3\ninst✝³ : CharP F 2\nW : WeierstrassCurve F\ninst✝² : W.IsElliptic\ninst✝¹ : W.IsCharTwoJEqZeroNF\ninst✝ : CharP F 2\nha₁ : W.a₁ = 0\n⊢ (W.toCharTwoJEqZeroNF • W).IsCharTwoJEqZeroNF") - Line 486
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁴ : Field F\ninst✝³ inst✝² : CharP F 3\ninst✝¹ inst✝ : CharP F 2\nW : WeierstrassCurve F\nha₁ : W.a₁ ≠ 0\n⊢ (W.toCharTwoJNeZeroNF ha₁ • W).IsCharTwoJNeZeroNF") - Line 487
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 488
LeanError(message='Lean error:\nsimp made no progress') - Line 498
LeanError(message='Lean error:\nsimp made no progress') - Line 499
LeanError(message='Lean error:\nsimp made no progress') - Line 500
LeanError(message='Lean error:\nsimp made no progress') - Line 502
LeanError(message='Lean error:\nsimp made no progress') - Line 503
LeanError(message='Lean error:\nsimp made no progress') - Line 504
LeanError(message='Lean error:\nsimp made no progress') - Line 505
LeanError(message='Lean error:\nsimp made no progress') - Line 506
LeanError(message='Lean error:\ninternal exception #5') - Line 507
LeanError(message='Lean error:\ninternal exception #5') - Line 508
LeanError(message='Lean error:\ninternal exception #5') - Line 509
LeanError(message='Lean error:\nsimp made no progress') - Line 514
LeanError(message='Lean error:\nsimp made no progress') - Line 515
LeanError(message='Lean error:\nsimp made no progress') - Line 516
LeanError(message='Lean error:\ninternal exception #5') - Line 517
LeanError(message='Lean error:\ninternal exception #5') - Line 518
LeanError(message='Lean error:\ninternal exception #5') - Line 519
LeanError(message='Lean error:\ninternal exception #5') - Line 520
LeanError(message='Lean error:\ninternal exception #5') - Line 521
LeanError(message='Lean error:\ninternal exception #5') - Line 522
LeanError(message='Lean error:\ninternal exception #5') - Line 523
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 524
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 525
LeanError(message='Lean error:\ninternal exception #5') - Line 526
LeanError(message='Lean error:\ninternal exception #5') - Line 527
LeanError(message='Lean error:\ninternal exception #5') - Line 528
LeanError(message='Lean error:\ninternal exception #5') - Line 529
LeanError(message='Lean error:\ninternal exception #5') - Line 530
LeanError(message='Lean error:\ninternal exception #5') - Line 531
LeanError(message='Lean error:\ninternal exception #5') - Line 532
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 533
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 534
LeanError(message='Lean error:\nsimp made no progress') - Line 535
LeanError(message='Lean error:\nsimp made no progress') - Line 536
LeanError(message='Lean error:\nsimp made no progress') - Line 537
LeanError(message='Lean error:\nsimp made no progress') - Line 538
LeanError(message='Lean error:\nsimp made no progress') - Line 539
LeanError(message='Lean error:\nsimp made no progress') - Line 540
LeanError(message='Lean error:\nsimp made no progress') - Line 541
LeanError(message='Lean error:\nsimp made no progress') - Line 546
LeanError(message='Lean error:\ninternal exception #5') - Line 547
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 548
LeanError(message='Lean error:\ninternal exception #5') - Line 549
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 550
LeanError(message='Lean error:\ninternal exception #5') - Line 551
LeanError(message='Lean error:\ninternal exception #5') - Line 555
LeanError(message='Lean error:\ninternal exception #5') - Line 556
LeanError(message='Lean error:\ninternal exception #5') - Line 557
LeanError(message='Lean error:\ninternal exception #5') - Line 558
LeanError(message='Lean error:\ninternal exception #5') - Line 559
LeanError(message='Lean error:\ninternal exception #5') - Line 560
LeanError(message='Lean error:\ninternal exception #5') - Line 561
LeanError(message='Lean error:\ninternal exception #5') - Line 562
LeanError(message='Lean error:\ninternal exception #5') - Line 563
LeanError(message='Lean error:\ninternal exception #5') - Line 564
LeanError(message='Lean error:\ninternal exception #5') - Line 565
LeanError(message='Lean error:\ninternal exception #5') - Line 567
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Aˣ') - Line 568
LeanError(message='Lean error:\nsimp made no progress') - Line 569
LeanError(message='Lean error:\ninternal exception #5') - Line 571
LeanError(message='Lean error:\ninternal exception #5') - Line 572
LeanError(message='Lean error:\ninternal exception #5') - Line 573
LeanError(message='Lean error:\ninternal exception #5') - Line 574
LeanError(message='Lean error:\nsimp made no progress') - Line 594
LeanError(message='Lean error:\ninternal exception #5') - Line 595
LeanError(message='Lean error:\ninternal exception #5') - Line 596
LeanError(message='Lean error:\ninternal exception #5') - Line 597
LeanError(message='Lean error:\ninternal exception #5') - Line 598
LeanError(message='Lean error:\ninternal exception #5') - Line 599
LeanError(message='Lean error:\ninternal exception #5') - Line 600
LeanError(message='Lean error:\nsimp made no progress') - Line 602
LeanError(message='Lean error:\ninternal exception #5') - Line 603
LeanError(message='Lean error:\ninternal exception #5') - Line 604
LeanError(message='Lean error:\nsimp made no progress') - Line 605
LeanError(message='Lean error:\ninternal exception #5') - Line 606
LeanError(message='Lean error:\ninternal exception #5') - Line 607
LeanError(message='Lean error:\ninternal exception #5') - Line 608
LeanError(message='Lean error:\ninternal exception #5') - Line 609
LeanError(message='Lean error:\ninternal exception #5') - Line 610
LeanError(message='Lean error:\nsimp made no progress') - Line 611
LeanError(message='Lean error:\nsimp made no progress') - Line 612
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 613
LeanError(message='Lean error:\nsimp made no progress') - Line 614
LeanError(message='Lean error:\nsimp made no progress') - Line 615
LeanError(message='Lean error:\nsimp made no progress') - Line 616
LeanError(message='Lean error:\ninternal exception #5') - Line 617
LeanError(message='Lean error:\ninternal exception #5') - Line 618
LeanError(message='Lean error:\ninternal exception #5') - Line 619
LeanError(message='Lean error:\ninternal exception #5') - Line 620
LeanError(message='Lean error:\ninternal exception #5') - Line 621
LeanError(message='Lean error:\ninternal exception #5') - Line 622
LeanError(message='Lean error:\nsimp made no progress') - Line 623
LeanError(message='Lean error:\nsimp made no progress') - Line 634
LeanError(message='Lean error:\ninternal exception #5') - Line 635
LeanError(message='Lean error:\ninternal exception #5') - Line 636
LeanError(message='Lean error:\ninternal exception #5') - Line 637
LeanError(message='Lean error:\ninternal exception #5') - Line 638
LeanError(message='Lean error:\ninternal exception #5') - Line 639
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 640
LeanError(message='Lean error:\nsimp made no progress') - Line 641
LeanError(message='Lean error:\nsimp made no progress') - Line 642
LeanError(message='Lean error:\nsimp made no progress') - Line 643
LeanError(message='Lean error:\nsimp made no progress') - Line 644
LeanError(message='Lean error:\nsimp made no progress') - Line 645
LeanError(message='Lean error:\nsimp made no progress') - Line 646
LeanError(message='Lean error:\nsimp made no progress') - Line 647
LeanError(message='Lean error:\nsimp made no progress') - Line 648
LeanError(message='Lean error:\nsimp made no progress') - Line 649
LeanError(message='Lean error:\nsimp made no progress') - Line 650
LeanError(message='Lean error:\nsimp made no progress') - Line 651
LeanError(message='Lean error:\nsimp made no progress') - Line 652
LeanError(message='Lean error:\ninternal exception #5') - Line 653
LeanError(message='Lean error:\ninternal exception #5') - Line 654
LeanError(message='Lean error:\ninternal exception #5') - Line 655
LeanError(message='Lean error:\ninternal exception #5') - Line 656
LeanError(message='Lean error:\ninternal exception #5') - Line 657
LeanError(message='Lean error:\ninternal exception #5') - Line 658
LeanError(message='Lean error:\ninternal exception #5') - Line 659
LeanError(message='Lean error:\ninternal exception #5') - Line 660
LeanError(message='Lean error:\ninternal exception #5') - Line 661
LeanError(message='Lean error:\ninternal exception #5') - Line 662
LeanError(message='Lean error:\ninternal exception #5') - Line 663
LeanError(message='Lean error:\ninternal exception #5') - Line 664
LeanError(message='Lean error:\ninternal exception #5') - Line 665
LeanError(message='Lean error:\ninternal exception #5') - Line 666
LeanError(message='Lean error:\ninternal exception #5') - Line 669
LeanError(message='Lean error:\ninternal exception #5') - Line 671
LeanError(message='Lean error:\ninternal exception #5') - Line 672
LeanError(message='Lean error:\ninternal exception #5') - Line 673
LeanError(message='Lean error:\ninternal exception #5') - Line 676
LeanError(message='Lean error:\ninternal exception #5') - Line 678
LeanError(message='Lean error:\ninternal exception #5') - Line 679
LeanError(message='Lean error:\ninternal exception #5') - Line 680
LeanError(message='Lean error:\nfailed to synthesize\n  CommRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 682
LeanError(message='Lean error:\ninternal exception #5') - Line 683
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 685
LeanError(message='Lean error:\ninternal exception #5') - Line 686
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nexpCoeff : x✝\nm : ℕ\n⊢ sorry = sorry ^ 2 * sorry * sorry - sorry * sorry * sorry ^ 2 ∧\n    sorry = (sorry * sorry ^ 3 * if Even m then 16 else 1) - sorry * sorry ^ 3 * if Even m then 1 else 16") - Line 688
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.9164 ≤ ?m.9162 →\n    Polynomial.natDegree ?m.9165 ≤ ?m.9161 → (?m.9164 * ?m.9165).natDegree ≤ ?m.9162 + ?m.9161 : Prop\nbut is expected to have type\n  ?m.10114 → ?m.10115 → sorry ≤ m + n : Prop') - Line 689
LeanError(message='Lean error:\nno goals to be solved') - Line 691
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 692
LeanError(message='Lean error:\nsimp made no progress') - Line 694
LeanError(message='Lean error:\ninternal exception #5') - Line 695
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 697
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 698
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 699
LeanError(message='Lean error:\ninternal exception #5') - Line 702
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 703
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_pow_le_of_le n\nhas type\n  Polynomial.natDegree ?m.11160 ≤ ?m.11158 → (?m.11160 ^ n).natDegree ≤ n * ?m.11158 : Prop\nbut is expected to have type\n  ?m.12126 → sorry ≤ n * m : Prop') - Line 704
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 705
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 706
LeanError(message='Lean error:\ninternal exception #5') - Line 707
LeanError(message='Lean error:\ninternal exception #5') - Line 709
LeanError(message='Lean error:\ninternal exception #5') - Line 710
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 711
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.8608 ≤ ?m.8606 →\n    Polynomial.natDegree ?m.8609 ≤ ?m.8605 → (?m.8608 * ?m.8609).natDegree ≤ ?m.8606 + ?m.8605 : Prop\nbut is expected to have type\n  ?m.9558 → ?m.9559 → sorry ≤ m + n : Prop') - Line 712
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 713
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 714
LeanError(message='Lean error:\ninternal exception #5') - Line 717
LeanError(message='Lean error:\ninternal exception #5') - Line 718
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 720
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.18233 ≈ ?m.18234\nR : Type r\nP Q : Fin 3 → R\nu v : R\nhu : sorry\nhv : sorry\n⊢ ⟦sorry⟧ = ⟦sorry⟧ ↔ sorry") - Line 728
LeanError(message='Lean error:\napplication type mismatch\n  { mp := ?m.1037, mpr := Quotient.exact ∘ congrArg (Quotient.mk ?m.1042) }\nargument\n  Quotient.exact ∘ congrArg (Quotient.mk ?m.1042)\nhas type\n  ?m.1043 = ?m.1176 → ?m.1043 ≈ ?m.1176 : Prop\nbut is expected to have type\n  P = Q → sorry : Prop') - Line 729
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 731
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 732
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 733
LeanError(message='Lean error:\ntype mismatch\n  Units.mk0 ?m.6681 ?m.6789 / Units.mk0 ?m.6816 ?m.6841\nhas type\n  ?m.6679ˣ : outParam (Type ?u.6678)\nbut is expected to have type\n  sorry : Sort u_3') - Line 738
LeanError(message='Lean error:\ninternal exception #5') - Line 742
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4934 ≠ 0 : Prop') - Line 743
LeanError(message='Lean error:\ninternal exception #5') - Line 744
LeanError(message='Lean error:\ninternal exception #5') - Line 745
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 746
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 747
LeanError(message='Lean error:\nsimp made no progress') - Line 748
LeanError(message='Lean error:\nno goals to be solved') - Line 749
LeanError(message='Lean error:\ninternal exception #5') - Line 751
LeanError(message='Lean error:\ninternal exception #5') - Line 752
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4933 ≠ 0 : Prop') - Line 753
LeanError(message='Lean error:\ninternal exception #5') - Line 754
LeanError(message='Lean error:\ninternal exception #5') - Line 755
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4933 ≠ 0 : Prop') - Line 756
LeanError(message='Lean error:\ninternal exception #5') - Line 757
LeanError(message='Lean error:\ninternal exception #5') - Line 758
LeanError(message='Lean error:\ninternal exception #5') - Line 759
LeanError(message='Lean error:\ninternal exception #5') - Line 760
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1634 is not an inductive datatype') - Line 761
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 762
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 763
LeanError(message='Lean error:\nsimp made no progress') - Line 764
LeanError(message='Lean error:\nno goals to be solved') - Line 765
LeanError(message='Lean error:\ninternal exception #5') - Line 767
LeanError(message='Lean error:\nsimp made no progress') - Line 772
LeanError(message='Lean error:\nsimp made no progress') - Line 778
LeanError(message='Lean error:\ninternal exception #5') - Line 779
LeanError(message='Lean error:\nno goals to be solved') - Line 780
LeanError(message='Lean error:\nsimp made no progress') - Line 781
LeanError(message='Lean error:\nsimp made no progress') - Line 782
LeanError(message='Lean error:\nsimp made no progress') - Line 783
LeanError(message='Lean error:\nno goals to be solved') - Line 784
LeanError(message='Lean error:\ninternal exception #5') - Line 785
LeanError(message='Lean error:\nno goals to be solved') - Line 786
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 787
LeanError(message='Lean error:\ninternal exception #5') - Line 788
LeanError(message='Lean error:\ninternal exception #5') - Line 789
LeanError(message='Lean error:\ninternal exception #5') - Line 790
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 791
LeanError(message='Lean error:\nsimp made no progress') - Line 793
LeanError(message='Lean error:\ninternal exception #5') - Line 794
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4288 ≠ 0 : Prop') - Line 795
LeanError(message='Lean error:\nfailed to synthesize\n  HMul R R ?m.11620\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 796
LeanError(message='Lean error:\nfailed to synthesize\n  Neg R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 800
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 42
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  sorry `«[anonymous]:0:0» = CategoryTheory.inv sorry : Prop\nbut is expected to have type\n  sorry `«[anonymous]:8:4» = CategoryTheory.inv sorry : Prop') - Line 43
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 90
LeanError(message='Lean error:\ninternal exception #5') - Line 92
LeanError(message='Lean error:\ninternal exception #5') - Line 130
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 135
LeanError(message='Lean error:\ndsimp made no progress') - Line 136
LeanError(message='Lean error:\ninternal exception #5') - Line 137
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ U,\n      ∃ (m : ?m.12092 ∈ U),\n        ∃ s, (CategoryTheory.ConcreteCategory.hom (TopCat.Presheaf.germ ?m.12091 U ?m.12092 m)) s = sorry) →\n    ∃ x, x.2 • y = ?m.3264\nR S : CommRingCat\np : PrimeSpectrum ↑R\ninst✝ : Algebra ↑R ↑S\nx✝ : Sort u_1\ntoPushforwardStalkAlgHom : x✝\ny : ?m.12065 R S _fvar.1543 p\n⊢ ∃ x, x.2 • y = ?m.3264") - Line 139
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3649\nScheme : ?m.1587\nIsAffineOpen : ?m.1971\nX : sorry\nY : sorry\nf : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nx✝ : Sort u_1\nSpec : x✝\nR : CommRingCat\nx : ?m.3631 R\n⊢ sorry = sorry") - Line 148
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5833') - Line 154
LeanError(message='Lean error:\ninternal exception #5') - Line 155
LeanError(message='Lean error:\ninternal exception #5') - Line 156
LeanError(message='Lean error:\ninternal exception #5') - Line 157
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝ : Sort u_1\nstalkClosedPointTo : x✝\ng : sorry\n⊢ sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 159
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nR S : CommRingCat\ninst✝ : IsLocalRing ↑S\nφ : R ⟶ S\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry φ") - Line 160
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU✝ : sorry\nV : sorry\nhU✝ : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nU : sorry\nhU : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry (sorry ≪≫ sorry).hom") - Line 161
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf₁ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\nf₂ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\n⊢ f₁ = f₂ ↔ ∃ (_ : f₁.fst = f₂.fst), ↑f₁.snd = CategoryTheory.CategoryStruct.comp sorry ↑f₂.snd") - Line 165
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 166
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 180
LeanError(message='Lean error:\ninternal exception #5') - Line 181
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 182
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nR : Type u\ninst✝ : CommRing R\nx✝ : Sort u_1\nconst : x✝\nf g₁ g₂ : R\nU : ?m.5047 R f g₁ g₂\nhu₁ : ?m.5048 R f g₁ g₂ U\nhu₂ : ?m.5049 R f g₁ g₂ U hu₁\n⊢ sorry * sorry = sorry") - Line 183
LeanError(message='Lean error:\n<input>:1:48: expected end of input') - Line 187
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 188
LeanError(message='Lean error:\ninternal exception #5') - Line 191
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 198
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, ⋯⟩\nargument\n  Submonoid.mem_powers ?m.98675\nhas type\n  ?m.98675 ∈ Submonoid.powers ?m.98675 : Prop\nbut is expected to have type\n  sorry ∈ ?m.183425 i j : Prop') - Line 207
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 208
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = _a\nError: application type mismatch\n  @?m.7636 R inst✝ toOpen\nargument\n  toOpen\nhas type\n  x✝² : Sort u_1\nbut is expected to have type\n  ?m.7633 R : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nR : Type u\ninst✝ : CommRing R\nx✝² : Sort u_1\ntoOpen : x✝²\nx✝¹ : Sort u_2\ntoBasicOpen : x✝¹\nx✝ : Sort u_3\nstructureSheaf : x✝\n⊢ sorry =\n    CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom (algebraMap R (Localization.Away 1)))\n      (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom sorry) sorry)") - Line 211
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 213
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (Localization.AtPrime y.asIdeal) ⟶ ?m.13871 h') - Line 214
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 215
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nR : Type u\ninst✝¹ : CommRing R\nS : Type u\ninst✝ : CommRing S\nx✝ : Sort u_1\nisLocallyFraction : x✝\nf : R →+* S\nU : sorry\nV : sorry\nhUV : sorry ⊆ ⇑(PrimeSpectrum.comap f) ⁻¹' sorry\ns : sorry\nhs : sorry\n⊢ sorry") - Line 216
LeanError(message='Lean error:\ninternal exception #5') - Line 220
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 221
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  TopologicalSpace.IsTopologicalBasis ?s\nwith\n  sorry\nScheme : ?m.49670\nOpenCover : ?m.49683\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰 : sorry\nf : sorry\ng : sorry\nX : sorry\n⊢ sorry") - Line 236
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.50857 = Set.univ\nScheme : ?m.49757\nP : sorry\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰✝ : sorry\nf : sorry\ng : sorry\nX : sorry\n𝒰 : sorry\n⊢ ⋃ i, Set.range ?m.50785 = Set.univ") - Line 237
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 245
LeanError(message='Lean error:\ninternal exception #5') - Line 246
LeanError(message='Lean error:\ninternal exception #5') - Line 247
LeanError(message='Lean error:\ninternal exception #5') - Line 248
LeanError(message='Lean error:\nnot a type\n  sorry') - Line 249
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 251
LeanError(message='Lean error:\nsimp made no progress') - Line 252
LeanError(message='Lean error:\ninternal exception #5') - Line 253
LeanError(message='Lean error:\ninternal exception #5') - Line 254
LeanError(message='Lean error:\ninternal exception #5') - Line 255
LeanError(message='Lean error:\ninternal exception #5') - Line 256
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 257
LeanError(message='Lean error:\nsimp made no progress') - Line 258
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 259
LeanError(message='Lean error:\nsimp made no progress') - Line 260
LeanError(message='Lean error:\ninternal exception #5') - Line 261
LeanError(message='Lean error:\ninternal exception #5') - Line 262
LeanError(message='Lean error:\ninternal exception #5') - Line 263
LeanError(message='Lean error:\ninternal exception #5') - Line 264
LeanError(message='Lean error:\nno goals to be solved') - Line 265
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 266
LeanError(message='Lean error:\ninternal exception #5') - Line 268
LeanError(message='Lean error:\ninternal exception #5') - Line 269
LeanError(message='Lean error:\nsimp made no progress') - Line 270
LeanError(message='Lean error:\ninternal exception #5') - Line 271
LeanError(message='Lean error:\ninternal exception #5') - Line 272
LeanError(message='Lean error:\ninternal exception #5') - Line 273
LeanError(message='Lean error:\ninternal exception #5') - Line 274
LeanError(message='Lean error:\ninternal exception #5') - Line 275
LeanError(message='Lean error:\ninternal exception #5') - Line 276
LeanError(message='Lean error:\ninternal exception #5') - Line 277
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 278
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 279
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 280
LeanError(message='Lean error:\ninternal exception #5') - Line 281
LeanError(message='Lean error:\ninternal exception #5') - Line 282
LeanError(message='Lean error:\ninternal exception #5') - Line 284
LeanError(message='Lean error:\ninternal exception #5') - Line 285
LeanError(message='Lean error:\ninternal exception #5') - Line 287
LeanError(message='Lean error:\ninternal exception #5') - Line 288
LeanError(message='Lean error:\n<input>:2:18: expected end of input') - Line 289
LeanError(message='Lean error:\nsimp made no progress') - Line 291
LeanError(message='Lean error:\nsimp made no progress') - Line 292
LeanError(message='Lean error:\nsimp made no progress') - Line 293
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ndependent elimination failed, failed to solve equation\n  0 = sorry\nat case Eq.refl") - Line 295
LeanError(message='Lean error:\nsimp made no progress') - Line 300
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 309
LeanError(message='Lean error:\ninternal exception #5') - Line 310
LeanError(message='Lean error:\ninternal exception #5') - Line 311
LeanError(message='Lean error:\nsimp made no progress') - Line 313
LeanError(message='Lean error:\nsimp made no progress') - Line 314
LeanError(message='Lean error:\nsimp made no progress') - Line 316
LeanError(message='Lean error:\nsimp made no progress') - Line 317
LeanError(message='Lean error:\nsimp made no progress') - Line 318
LeanError(message='Lean error:\ninternal exception #5') - Line 319
LeanError(message='Lean error:\nsimp made no progress') - Line 320
LeanError(message='Lean error:\nsimp made no progress') - Line 321
LeanError(message='Lean error:\nsimp made no progress') - Line 322
LeanError(message='Lean error:\ntype mismatch\n  if hx : x₁ = x₂ then ?pos✝ else ?neg✝\nhas type\n  ?m.1164 : Sort ?u.1163\nbut is expected to have type\n  sorry = sorry : Prop') - Line 323
LeanError(message='Lean error:\ninternal exception #5') - Line 324
LeanError(message='Lean error:\nno goals to be solved') - Line 325
LeanError(message='Lean error:\ninternal exception #5') - Line 326
LeanError(message='Lean error:\ninternal exception #5') - Line 327
LeanError(message='Lean error:\ninternal exception #5') - Line 328
LeanError(message='Lean error:\ninternal exception #5') - Line 329
LeanError(message='Lean error:\ninternal exception #5') - Line 330
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 331
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 332
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 333
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 334
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 335
LeanError(message='Lean error:\nfailed on all goals') - Line 341
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 343
LeanError(message='Lean error:\ntype mismatch, term\n  pow_zero ?m.1480\nafter simplification has type\n  ?m.1480 ^ 0 = 1 : Prop\nbut is expected to have type\n  sorry = 1 : Prop') - Line 344
LeanError(message='Lean error:\ntype mismatch, term\n  pow_one ?m.1855\nafter simplification has type\n  ?m.1855 ^ 1 = ?m.1855 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 345
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Fin 2 → sorry') - Line 346
LeanError(message='Lean error:\ninternal exception #5') - Line 348
LeanError(message='Lean error:\ninternal exception #5') - Line 349
LeanError(message='Lean error:\nsimp made no progress') - Line 350
LeanError(message='Lean error:\ninternal exception #5') - Line 351
LeanError(message='Lean error:\ninternal exception #5') - Line 352
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 358
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 359
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.4345 F XYIdeal\nargument\n  XYIdeal\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.3497 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\nhy₂ : y₂ = sorry\n⊢ sorry = sorry") - Line 361
LeanError(message='Lean error:\n<input>:4:57: unknown tactic') - Line 362
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?I * ↑?J\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝¹ : Sort u_2\nXYIdeal : x✝¹\nx✝ : Sort u_3\nXIdeal : x✝\nx y : F\nh : sorry\n⊢ sorry * sorry * sorry = 1") - Line 363
LeanError(message='Lean error:\ninternal exception #5') - Line 364
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx y : F\nh : sorry\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = 1") - Line 366
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = ClassGroup.mk sorry") - Line 367
LeanError(message="Lean error:\nunknown free variable '_fvar.3466'") - Line 368
LeanError(message='Lean error:\ninternal exception #5') - Line 370
LeanError(message='Lean error:\ninternal exception #5') - Line 371
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 375
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nAffine : ?m.4209\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nx✝ : Sort u_1\ntoClass : x✝\nP : sorry\n⊢ sorry = 0 ↔ P = 0") - Line 376
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.5305 is not an inductive datatype') - Line 377
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x, 1 * x ^ 2 + 1 * x + sorry = 0) → ∃ C, C • E = E'\nF : Type u_1\ninst✝⁶ : Field F\ninst✝⁵ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝⁴ : E.IsElliptic\ninst✝³ : E'.IsElliptic\ninst✝² : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\ninst✝¹ : E.IsCharTwoJNeZeroNF\ninst✝ : E'.IsCharTwoJNeZeroNF\nheq : E.a₆ = E'.a₆\n⊢ ∃ C, C • E = E'") - Line 378
LeanError(message='Lean error:\ninternal exception #5') - Line 379
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁴ : Field F\ninst✝³ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝² : E.IsElliptic\ninst✝¹ : E'.IsElliptic\ninst✝ : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 380
LeanError(message='Lean error:\ninternal exception #5') - Line 381
LeanError(message='Lean error:\ninternal exception #5') - Line 382
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 383
LeanError(message='Lean error:\napplication type mismatch\n  { out := hchar2 }\nargument\n  hchar2\nhas type\n  sorry ≠ sorry : Prop\nbut is expected to have type\n  ?m.8273 ≠ 0 : Prop') - Line 384
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 385
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = 0") - Line 386
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = -27") - Line 387
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -48") - Line 388
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -64") - Line 389
LeanError(message='Lean error:\nsimp made no progress') - Line 390
LeanError(message='Lean error:\nsimp made no progress') - Line 391
LeanError(message='Lean error:\ninternal exception #5') - Line 392
LeanError(message='Lean error:\ninternal exception #5') - Line 393
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'WeierstrassCurve.j'.") - Line 394
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh3 : 3 ≠ 0\n⊢ sorry = sorry") - Line 395
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 396
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 397
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 398
LeanError(message='Lean error:\ntype mismatch\n  if h3 : sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.2503 : Sort ?u.2502\nbut is expected to have type\n  sorry = sorry : Prop') - Line 399
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 400
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 402
LeanError(message='Lean error:\ninternal exception #5') - Line 405
LeanError(message='Lean error:\ninternal exception #5') - Line 406
LeanError(message='Lean error:\ninternal exception #5') - Line 407
LeanError(message='Lean error:\ninternal exception #5') - Line 408
LeanError(message='Lean error:\ninternal exception #5') - Line 409
LeanError(message='Lean error:\ninternal exception #5') - Line 410
LeanError(message='Lean error:\ninternal exception #5') - Line 411
LeanError(message='Lean error:\nsimp made no progress') - Line 416
LeanError(message='Lean error:\nsimp made no progress') - Line 419
LeanError(message='Lean error:\nsimp made no progress') - Line 420
LeanError(message='Lean error:\nsimp made no progress') - Line 421
LeanError(message='Lean error:\ninternal exception #5') - Line 422
LeanError(message='Lean error:\ninternal exception #5') - Line 423
LeanError(message='Lean error:\ninternal exception #5') - Line 424
LeanError(message='Lean error:\ninternal exception #5') - Line 425
LeanError(message='Lean error:\ninternal exception #5') - Line 426
LeanError(message='Lean error:\ninternal exception #5') - Line 427
LeanError(message='Lean error:\ninternal exception #5') - Line 428
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 429
LeanError(message='Lean error:\nsimp made no progress') - Line 435
LeanError(message='Lean error:\nsimp made no progress') - Line 437
LeanError(message='Lean error:\nsimp made no progress') - Line 438
LeanError(message='Lean error:\nsimp made no progress') - Line 439
LeanError(message='Lean error:\nsimp made no progress') - Line 440
LeanError(message='Lean error:\ninternal exception #5') - Line 441
LeanError(message='Lean error:\ninternal exception #5') - Line 442
LeanError(message='Lean error:\ninternal exception #5') - Line 443
LeanError(message='Lean error:\ninternal exception #5') - Line 444
LeanError(message='Lean error:\ninternal exception #5') - Line 445
LeanError(message='Lean error:\ninternal exception #5') - Line 446
LeanError(message='Lean error:\ninternal exception #5') - Line 447
LeanError(message='Lean error:\ninternal exception #5') - Line 448
LeanError(message='Lean error:\nsimp made no progress') - Line 449
LeanError(message='Lean error:\ninternal exception #5') - Line 451
LeanError(message='Lean error:\ninternal exception #5') - Line 452
LeanError(message='Lean error:\ninternal exception #5') - Line 457
LeanError(message='Lean error:\ninternal exception #5') - Line 458
LeanError(message='Lean error:\ninternal exception #5') - Line 459
LeanError(message='Lean error:\ninternal exception #5') - Line 460
LeanError(message='Lean error:\ninternal exception #5') - Line 461
LeanError(message='Lean error:\ninternal exception #5') - Line 462
LeanError(message='Lean error:\ninternal exception #5') - Line 463
LeanError(message='Lean error:\ninternal exception #5') - Line 464
LeanError(message='Lean error:\ninternal exception #5') - Line 465
LeanError(message='Lean error:\ninternal exception #5') - Line 466
LeanError(message='Lean error:\ninternal exception #5') - Line 467
LeanError(message='Lean error:\ninternal exception #5') - Line 468
LeanError(message='Lean error:\ninternal exception #5') - Line 469
LeanError(message='Lean error:\ninternal exception #5') - Line 470
LeanError(message='Lean error:\ninternal exception #5') - Line 473
LeanError(message='Lean error:\ninternal exception #5') - Line 474
LeanError(message='Lean error:\ninternal exception #5') - Line 475
LeanError(message='Lean error:\ninternal exception #5') - Line 476
LeanError(message='Lean error:\ninternal exception #5') - Line 477
LeanError(message='Lean error:\ninternal exception #5') - Line 478
LeanError(message='Lean error:\ninternal exception #5') - Line 479
LeanError(message='Lean error:\ninternal exception #5') - Line 480
LeanError(message='Lean error:\ninternal exception #5') - Line 481
LeanError(message='Lean error:\ninternal exception #5') - Line 482
LeanError(message='Lean error:\ninternal exception #5') - Line 483
LeanError(message='Lean error:\ninternal exception #5') - Line 484
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 485
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁶ : Field F\ninst✝⁵ inst✝⁴ : CharP F 3\ninst✝³ : CharP F 2\nW : WeierstrassCurve F\ninst✝² : W.IsElliptic\ninst✝¹ : W.IsCharTwoJEqZeroNF\ninst✝ : CharP F 2\nha₁ : W.a₁ = 0\n⊢ (W.toCharTwoJEqZeroNF • W).IsCharTwoJEqZeroNF") - Line 486
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁴ : Field F\ninst✝³ inst✝² : CharP F 3\ninst✝¹ inst✝ : CharP F 2\nW : WeierstrassCurve F\nha₁ : W.a₁ ≠ 0\n⊢ (W.toCharTwoJNeZeroNF ha₁ • W).IsCharTwoJNeZeroNF") - Line 487
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 488
LeanError(message='Lean error:\nsimp made no progress') - Line 498
LeanError(message='Lean error:\nsimp made no progress') - Line 499
LeanError(message='Lean error:\nsimp made no progress') - Line 500
LeanError(message='Lean error:\nsimp made no progress') - Line 502
LeanError(message='Lean error:\nsimp made no progress') - Line 503
LeanError(message='Lean error:\nsimp made no progress') - Line 504
LeanError(message='Lean error:\nsimp made no progress') - Line 505
LeanError(message='Lean error:\nsimp made no progress') - Line 506
LeanError(message='Lean error:\ninternal exception #5') - Line 507
LeanError(message='Lean error:\ninternal exception #5') - Line 508
LeanError(message='Lean error:\ninternal exception #5') - Line 509
LeanError(message='Lean error:\nsimp made no progress') - Line 514
LeanError(message='Lean error:\nsimp made no progress') - Line 515
LeanError(message='Lean error:\nsimp made no progress') - Line 516
LeanError(message='Lean error:\ninternal exception #5') - Line 517
LeanError(message='Lean error:\ninternal exception #5') - Line 518
LeanError(message='Lean error:\ninternal exception #5') - Line 519
LeanError(message='Lean error:\ninternal exception #5') - Line 520
LeanError(message='Lean error:\ninternal exception #5') - Line 521
LeanError(message='Lean error:\ninternal exception #5') - Line 522
LeanError(message='Lean error:\ninternal exception #5') - Line 523
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 524
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 525
LeanError(message='Lean error:\ninternal exception #5') - Line 526
LeanError(message='Lean error:\ninternal exception #5') - Line 527
LeanError(message='Lean error:\ninternal exception #5') - Line 528
LeanError(message='Lean error:\ninternal exception #5') - Line 529
LeanError(message='Lean error:\ninternal exception #5') - Line 530
LeanError(message='Lean error:\ninternal exception #5') - Line 531
LeanError(message='Lean error:\ninternal exception #5') - Line 532
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 533
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 534
LeanError(message='Lean error:\nsimp made no progress') - Line 535
LeanError(message='Lean error:\nsimp made no progress') - Line 536
LeanError(message='Lean error:\nsimp made no progress') - Line 537
LeanError(message='Lean error:\nsimp made no progress') - Line 538
LeanError(message='Lean error:\nsimp made no progress') - Line 539
LeanError(message='Lean error:\nsimp made no progress') - Line 540
LeanError(message='Lean error:\nsimp made no progress') - Line 541
LeanError(message='Lean error:\nfailed to synthesize\n  CommSemiring R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 546
LeanError(message='Lean error:\ninternal exception #5') - Line 547
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 548
LeanError(message='Lean error:\ninternal exception #5') - Line 549
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 550
LeanError(message='Lean error:\ninternal exception #5') - Line 551
LeanError(message='Lean error:\ninternal exception #5') - Line 555
LeanError(message='Lean error:\ninternal exception #5') - Line 556
LeanError(message='Lean error:\ninternal exception #5') - Line 557
LeanError(message='Lean error:\ninternal exception #5') - Line 558
LeanError(message='Lean error:\ninternal exception #5') - Line 559
LeanError(message='Lean error:\ninternal exception #5') - Line 560
LeanError(message='Lean error:\ninternal exception #5') - Line 561
LeanError(message='Lean error:\ninternal exception #5') - Line 562
LeanError(message='Lean error:\ninternal exception #5') - Line 563
LeanError(message='Lean error:\ninternal exception #5') - Line 564
LeanError(message='Lean error:\ninternal exception #5') - Line 565
LeanError(message='Lean error:\ninternal exception #5') - Line 567
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Aˣ') - Line 568
LeanError(message='Lean error:\nsimp made no progress') - Line 569
LeanError(message='Lean error:\ninternal exception #5') - Line 571
LeanError(message='Lean error:\ninternal exception #5') - Line 572
LeanError(message='Lean error:\ninternal exception #5') - Line 573
LeanError(message='Lean error:\ninternal exception #5') - Line 574
LeanError(message='Lean error:\nsimp made no progress') - Line 594
LeanError(message='Lean error:\ninternal exception #5') - Line 595
LeanError(message='Lean error:\ninternal exception #5') - Line 596
LeanError(message='Lean error:\ninternal exception #5') - Line 597
LeanError(message='Lean error:\ninternal exception #5') - Line 598
LeanError(message='Lean error:\ninternal exception #5') - Line 599
LeanError(message='Lean error:\ninternal exception #5') - Line 600
LeanError(message='Lean error:\nsimp made no progress') - Line 602
LeanError(message='Lean error:\ninternal exception #5') - Line 603
LeanError(message='Lean error:\ninternal exception #5') - Line 604
LeanError(message='Lean error:\ninternal exception #5') - Line 606
LeanError(message='Lean error:\ninternal exception #5') - Line 607
LeanError(message='Lean error:\ninternal exception #5') - Line 608
LeanError(message='Lean error:\ninternal exception #5') - Line 609
LeanError(message='Lean error:\ninternal exception #5') - Line 610
LeanError(message='Lean error:\nsimp made no progress') - Line 611
LeanError(message='Lean error:\nsimp made no progress') - Line 612
LeanError(message='Lean error:\nsimp made no progress') - Line 614
LeanError(message='Lean error:\nsimp made no progress') - Line 615
LeanError(message='Lean error:\nsimp made no progress') - Line 616
LeanError(message='Lean error:\ninternal exception #5') - Line 617
LeanError(message='Lean error:\ninternal exception #5') - Line 618
LeanError(message='Lean error:\ninternal exception #5') - Line 619
LeanError(message='Lean error:\ninternal exception #5') - Line 620
LeanError(message='Lean error:\ninternal exception #5') - Line 621
LeanError(message='Lean error:\ninternal exception #5') - Line 622
LeanError(message='Lean error:\nsimp made no progress') - Line 634
LeanError(message='Lean error:\ninternal exception #5') - Line 635
LeanError(message='Lean error:\ninternal exception #5') - Line 636
LeanError(message='Lean error:\ninternal exception #5') - Line 637
LeanError(message='Lean error:\ninternal exception #5') - Line 638
LeanError(message='Lean error:\ninternal exception #5') - Line 639
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 640
LeanError(message='Lean error:\nsimp made no progress') - Line 641
LeanError(message='Lean error:\nsimp made no progress') - Line 642
LeanError(message='Lean error:\nsimp made no progress') - Line 643
LeanError(message='Lean error:\nsimp made no progress') - Line 644
LeanError(message='Lean error:\nsimp made no progress') - Line 645
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 646
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 647
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 648
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 649
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 650
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 651
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 652
LeanError(message='Lean error:\ninternal exception #5') - Line 653
LeanError(message='Lean error:\ninternal exception #5') - Line 654
LeanError(message='Lean error:\ninternal exception #5') - Line 655
LeanError(message='Lean error:\ninternal exception #5') - Line 656
LeanError(message='Lean error:\ninternal exception #5') - Line 657
LeanError(message='Lean error:\ninternal exception #5') - Line 658
LeanError(message='Lean error:\ninternal exception #5') - Line 659
LeanError(message='Lean error:\ninternal exception #5') - Line 660
LeanError(message='Lean error:\ninternal exception #5') - Line 661
LeanError(message='Lean error:\ninternal exception #5') - Line 662
LeanError(message='Lean error:\ninternal exception #5') - Line 663
LeanError(message='Lean error:\ninternal exception #5') - Line 664
LeanError(message='Lean error:\ninternal exception #5') - Line 665
LeanError(message='Lean error:\ninternal exception #5') - Line 666
LeanError(message='Lean error:\ninternal exception #5') - Line 669
LeanError(message='Lean error:\ninternal exception #5') - Line 671
LeanError(message='Lean error:\ninternal exception #5') - Line 672
LeanError(message='Lean error:\ninternal exception #5') - Line 673
LeanError(message='Lean error:\ninternal exception #5') - Line 676
LeanError(message='Lean error:\ninternal exception #5') - Line 678
LeanError(message='Lean error:\ninternal exception #5') - Line 679
LeanError(message='Lean error:\ninternal exception #5') - Line 680
LeanError(message='Lean error:\nfailed to synthesize\n  CommRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 682
LeanError(message='Lean error:\ninternal exception #5') - Line 683
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 685
LeanError(message='Lean error:\ninternal exception #5') - Line 686
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nexpCoeff : x✝\nm : ℕ\n⊢ sorry = sorry ^ 2 * sorry * sorry - sorry * sorry * sorry ^ 2 ∧\n    sorry = (sorry * sorry ^ 3 * if Even m then 16 else 1) - sorry * sorry ^ 3 * if Even m then 1 else 16") - Line 688
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.9164 ≤ ?m.9162 →\n    Polynomial.natDegree ?m.9165 ≤ ?m.9161 → (?m.9164 * ?m.9165).natDegree ≤ ?m.9162 + ?m.9161 : Prop\nbut is expected to have type\n  ?m.10114 → ?m.10115 → sorry ≤ m + n : Prop') - Line 689
LeanError(message='Lean error:\nno goals to be solved') - Line 691
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 692
LeanError(message='Lean error:\nsimp made no progress') - Line 694
LeanError(message='Lean error:\ninternal exception #5') - Line 695
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5992
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.287 is not an inductive datatype') - Line 5999
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 8
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 9
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 10
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 11
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 12
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nRegister : Type u_1\nState : Sort u_2\nx✝¹ : Sort u_3\nac : x✝¹\nWord : Sort u_4\nx✝ : Sort u_5\nwrite : x✝\nt : Register\nζ₁ ζ₂ : State\nh : sorry ≃ [t] / sorry\nr : Register\nv : Word\n⊢ sorry () ≃ [t] / sorry ()") - Line 13
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 14
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  Expr\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nIdentifier : Sort u_1\nRegister : Type u_2\nExpr : Sort u_3\nWord : Sort u_4\nState : Sort u_5\nx✝¹ : Sort u_6\nloc : x✝¹\nx✝ : Sort u_7\noutcome : x✝\nmap : Identifier → Register\ne : Expr\nξ : Identifier → Word\nη : State\nt : Register\nhmap : ∀ (x : Identifier), sorry = ξ x\nht : ?m.2246 map e ξ η t hmap → sorry\n⊢ sorry ≃ sorry") - Line 15
LeanError(message='Lean error:\ninternal exception #5') - Line 25
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝¹ : Sort u_1\nQ : x✝¹\nx✝ : Sort u_2\nπ : x✝\np : sorry\nq : sorry\n⊢ p = q ↔ sorry = sorry ∧ sorry = sorry") - Line 28
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 29
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝¹ : Sort u_1\nQ : x✝¹\nx✝ : Sort u_2\nπ : x✝\np : sorry\nq : sorry\nh₀ : sorry ≠ sorry\n⊢ q ∈ sorry ↔ sorry = sorry") - Line 30
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝¹ : Sort u_1\nQ : x✝¹\nx✝ : Sort u_2\nπ : x✝\np : sorry\nq : sorry\nh₀ : sorry = sorry\n⊢ q ∈ sorry ↔ sorry ∈ sorry") - Line 31
LeanError(message='Lean error:\nsimp made no progress') - Line 32
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 37
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type), v = 0\nx✝² : Sort u_1\nV : x✝²\nx✝¹ : Sort u_2\nQ : x✝¹\nx✝ : Sort u_3\nε : x✝\nv : sorry\nh : sorry → sorry = 0\n⊢ v = 0") - Line 38
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 39
LeanError(message='Lean error:\ninternal exception #5') - Line 40
LeanError(message='Lean error:\ninternal exception #5') - Line 41
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝¹ : Sort u_1\nV : x✝¹\nx✝ : Sort u_2\nf : x✝\nv : sorry\n⊢ sorry = (sorry + sorry, sorry - sorry)") - Line 43
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 44
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3) (p : x) (q : sorry), |sorry| = if p ∈ ?m.469 then 1 else 0\nx✝¹ : Sort u_1\nQ : x✝¹\nx✝ : Sort u_2\nε : x✝\n⊢ ∀ (p : sorry) (q : sorry), |sorry| = if p ∈ ?m.469 then 1 else 0") - Line 45
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 46
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\ng : x✝\n⊢ Function.Injective ?m.2090") - Line 47
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = √(↑m + 1) • w\nm : ℕ\nx✝² : Sort u_1\nV : x✝²\nx✝¹ : Sort u_2\ng : x✝¹\nx✝ : Sort u_3\nf : x✝\nw : sorry\nhv : ∃ v, sorry = w\n⊢ sorry = √(↑m + 1) • w") - Line 48
LeanError(message='Lean error:\ninternal exception #5') - Line 49
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ q ∈ H, √(↑m + 1) ≤ sorry ∩ sorry\nm : ℕ\nx✝¹ : Sort u_1\nQ : x✝¹\nx✝ : Sort u_2\nCard : x✝\nH : Set sorry\nhH : sorry ≥ 2 ^ m + 1\n⊢ ∃ q ∈ H, √(↑m + 1) ≤ sorry ∩ sorry") - Line 50
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nzagierSet : x✝\nx y z : ℕ\nh : (x, y, z) ∈ sorry\n⊢ 0 < x ∧ 0 < y ∧ 0 < z") - Line 51
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1792 is not an inductive datatype') - Line 52
LeanError(message='Lean error:\ninternal exception #5') - Line 53
LeanError(message='Lean error:\nrcases tactic failed: w✝ : ?m.2091 k is not an inductive datatype') - Line 55
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry ∘ sorry = id\nis not definitionally equal to target\n  sorry ^ 2 = 1") - Line 56
LeanError(message='Lean error:\nrcases tactic failed: t : sorry is not an inductive datatype') - Line 57
LeanError(message='Lean error:\ninternal exception #5') - Line 58
LeanError(message='Lean error:\nno goals to be solved') - Line 59
LeanError(message='Lean error:\ninternal exception #5') - Line 60
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.3616\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nIfExpr : Sort u_1\na b c d e : IfExpr\nf : ℕ → Bool\nx✝ : ?m.3616\nh : sorry = x✝\n⊢ x✝ = x✝") - Line 83
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 85
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 87
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nx✝¹ : Sort u_1\nProblemEquation : x✝¹\nx✝ : Sort u_2\naltFormula : x✝\nx : ℝ\n⊢ sorry ↔ sorry = 0") - Line 89
LeanError(message='Lean error:\nsimp made no progress') - Line 90
LeanError(message='Lean error:\ninternal exception #5') - Line 93
LeanError(message='Lean error:\napplication type mismatch\n  sorry * h\nargument\n  h\nhas type\n  a ^ 2 + (2 * a ^ 2 - 1) ^ 2 + (4 * a ^ 3 - 3 * a) ^ 2 = 1 : Prop\nbut is expected to have type\n  ?m.7221 : Type ?u.7049') - Line 94
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 96
LeanError(message='Lean error:\ninternal exception #5') - Line 99
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 100
LeanError(message='Lean error:\nno goals to be solved') - Line 108
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 113
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 116
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Finset sorry') - Line 119
LeanError(message='Lean error:\ninternal exception #5') - Line 120
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 121
LeanError(message='Lean error:\ninternal exception #5') - Line 122
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 123
LeanError(message='Lean error:\ninternal exception #5') - Line 124
LeanError(message='Lean error:\ninternal exception #5') - Line 125
LeanError(message='Lean error:\ninternal exception #5') - Line 126
LeanError(message='Lean error:\ninternal exception #5') - Line 127
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 128
LeanError(message='Lean error:\ninternal exception #5') - Line 130
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 132
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (a ^ 3⁻¹) ^ 3\na b c : ℝ\nha : 0 < a\nhb : 0 < b\nhc : 0 < c\nh3 : ∀ {x : ℝ}, 0 < x → (x ^ 3⁻¹) ^ 3 = x\n⊢ ?m.3174 = ?m.3471") - Line 133
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 134
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Ne'.") - Line 137
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 138
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 139
LeanError(message='Lean error:\ninternal exception #5') - Line 141
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 142
LeanError(message='Lean error:\ninternal exception #5') - Line 144
LeanError(message='Lean error:\n<input>:1:38: expected end of input') - Line 145
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 146
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 42
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  sorry `«[anonymous]:0:0» = CategoryTheory.inv sorry : Prop\nbut is expected to have type\n  sorry `«[anonymous]:8:4» = CategoryTheory.inv sorry : Prop') - Line 43
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 90
LeanError(message='Lean error:\ninternal exception #5') - Line 92
LeanError(message='Lean error:\ninternal exception #5') - Line 130
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 135
LeanError(message='Lean error:\ndsimp made no progress') - Line 136
LeanError(message='Lean error:\ninternal exception #5') - Line 137
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ U,\n      ∃ (m : ?m.12092 ∈ U),\n        ∃ s, (CategoryTheory.ConcreteCategory.hom (TopCat.Presheaf.germ ?m.12091 U ?m.12092 m)) s = sorry) →\n    ∃ x, x.2 • y = ?m.3264\nR S : CommRingCat\np : PrimeSpectrum ↑R\ninst✝ : Algebra ↑R ↑S\nx✝ : Sort u_1\ntoPushforwardStalkAlgHom : x✝\ny : ?m.12065 R S _fvar.1543 p\n⊢ ∃ x, x.2 • y = ?m.3264") - Line 139
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3649\nScheme : ?m.1587\nIsAffineOpen : ?m.1971\nX : sorry\nY : sorry\nf : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nx✝ : Sort u_1\nSpec : x✝\nR : CommRingCat\nx : ?m.3631 R\n⊢ sorry = sorry") - Line 148
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5833') - Line 154
LeanError(message='Lean error:\ninternal exception #5') - Line 155
LeanError(message='Lean error:\ninternal exception #5') - Line 156
LeanError(message='Lean error:\ninternal exception #5') - Line 157
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝ : Sort u_1\nstalkClosedPointTo : x✝\ng : sorry\n⊢ sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 159
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nR S : CommRingCat\ninst✝ : IsLocalRing ↑S\nφ : R ⟶ S\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry φ") - Line 160
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU✝ : sorry\nV : sorry\nhU✝ : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nU : sorry\nhU : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry (sorry ≪≫ sorry).hom") - Line 161
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf₁ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\nf₂ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\n⊢ f₁ = f₂ ↔ ∃ (_ : f₁.fst = f₂.fst), ↑f₁.snd = CategoryTheory.CategoryStruct.comp sorry ↑f₂.snd") - Line 165
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 166
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 180
LeanError(message='Lean error:\ninternal exception #5') - Line 181
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 182
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nR : Type u\ninst✝ : CommRing R\nx✝ : Sort u_1\nconst : x✝\nf g₁ g₂ : R\nU : ?m.5047 R f g₁ g₂\nhu₁ : ?m.5048 R f g₁ g₂ U\nhu₂ : ?m.5049 R f g₁ g₂ U hu₁\n⊢ sorry * sorry = sorry") - Line 183
LeanError(message='Lean error:\n<input>:1:48: expected end of input') - Line 187
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 188
LeanError(message='Lean error:\ninternal exception #5') - Line 191
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 198
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, ⋯⟩\nargument\n  Submonoid.mem_powers ?m.98675\nhas type\n  ?m.98675 ∈ Submonoid.powers ?m.98675 : Prop\nbut is expected to have type\n  sorry ∈ ?m.183425 i j : Prop') - Line 207
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 208
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = _a\nError: application type mismatch\n  @?m.7636 R inst✝ toOpen\nargument\n  toOpen\nhas type\n  x✝² : Sort u_1\nbut is expected to have type\n  ?m.7633 R : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nR : Type u\ninst✝ : CommRing R\nx✝² : Sort u_1\ntoOpen : x✝²\nx✝¹ : Sort u_2\ntoBasicOpen : x✝¹\nx✝ : Sort u_3\nstructureSheaf : x✝\n⊢ sorry =\n    CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom (algebraMap R (Localization.Away 1)))\n      (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom sorry) sorry)") - Line 211
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 213
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (Localization.AtPrime y.asIdeal) ⟶ ?m.13871 h') - Line 214
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 215
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nR : Type u\ninst✝¹ : CommRing R\nS : Type u\ninst✝ : CommRing S\nx✝ : Sort u_1\nisLocallyFraction : x✝\nf : R →+* S\nU : sorry\nV : sorry\nhUV : sorry ⊆ ⇑(PrimeSpectrum.comap f) ⁻¹' sorry\ns : sorry\nhs : sorry\n⊢ sorry") - Line 216
LeanError(message='Lean error:\ninternal exception #5') - Line 220
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 221
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  TopologicalSpace.IsTopologicalBasis ?s\nwith\n  sorry\nScheme : ?m.49670\nOpenCover : ?m.49683\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰 : sorry\nf : sorry\ng : sorry\nX : sorry\n⊢ sorry") - Line 236
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.50857 = Set.univ\nScheme : ?m.49757\nP : sorry\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰✝ : sorry\nf : sorry\ng : sorry\nX : sorry\n𝒰 : sorry\n⊢ ⋃ i, Set.range ?m.50785 = Set.univ") - Line 237
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 245
LeanError(message='Lean error:\ninternal exception #5') - Line 246
LeanError(message='Lean error:\ninternal exception #5') - Line 247
LeanError(message='Lean error:\ninternal exception #5') - Line 248
LeanError(message='Lean error:\nnot a type\n  sorry') - Line 249
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 251
LeanError(message='Lean error:\nsimp made no progress') - Line 252
LeanError(message='Lean error:\ninternal exception #5') - Line 253
LeanError(message='Lean error:\ninternal exception #5') - Line 254
LeanError(message='Lean error:\ninternal exception #5') - Line 255
LeanError(message='Lean error:\ninternal exception #5') - Line 256
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 257
LeanError(message='Lean error:\nsimp made no progress') - Line 258
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 259
LeanError(message='Lean error:\nsimp made no progress') - Line 260
LeanError(message='Lean error:\ninternal exception #5') - Line 261
LeanError(message='Lean error:\ninternal exception #5') - Line 262
LeanError(message='Lean error:\ninternal exception #5') - Line 263
LeanError(message='Lean error:\ninternal exception #5') - Line 264
LeanError(message='Lean error:\nno goals to be solved') - Line 265
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 266
LeanError(message='Lean error:\ninternal exception #5') - Line 268
LeanError(message='Lean error:\ninternal exception #5') - Line 269
LeanError(message='Lean error:\nsimp made no progress') - Line 270
LeanError(message='Lean error:\ninternal exception #5') - Line 271
LeanError(message='Lean error:\ninternal exception #5') - Line 272
LeanError(message='Lean error:\ninternal exception #5') - Line 273
LeanError(message='Lean error:\ninternal exception #5') - Line 274
LeanError(message='Lean error:\ninternal exception #5') - Line 275
LeanError(message='Lean error:\ninternal exception #5') - Line 276
LeanError(message='Lean error:\ninternal exception #5') - Line 277
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 278
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 279
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 280
LeanError(message='Lean error:\ninternal exception #5') - Line 281
LeanError(message='Lean error:\ninternal exception #5') - Line 282
LeanError(message='Lean error:\ninternal exception #5') - Line 284
LeanError(message='Lean error:\ninternal exception #5') - Line 285
LeanError(message='Lean error:\ninternal exception #5') - Line 287
LeanError(message='Lean error:\ninternal exception #5') - Line 288
LeanError(message='Lean error:\n<input>:2:18: expected end of input') - Line 289
LeanError(message='Lean error:\nsimp made no progress') - Line 291
LeanError(message='Lean error:\nsimp made no progress') - Line 292
LeanError(message='Lean error:\nsimp made no progress') - Line 293
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ndependent elimination failed, failed to solve equation\n  0 = sorry\nat case Eq.refl") - Line 295
LeanError(message='Lean error:\nsimp made no progress') - Line 300
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 309
LeanError(message='Lean error:\ninternal exception #5') - Line 310
LeanError(message='Lean error:\ninternal exception #5') - Line 311
LeanError(message='Lean error:\nsimp made no progress') - Line 313
LeanError(message='Lean error:\nsimp made no progress') - Line 314
LeanError(message='Lean error:\nsimp made no progress') - Line 316
LeanError(message='Lean error:\nsimp made no progress') - Line 317
LeanError(message='Lean error:\nsimp made no progress') - Line 318
LeanError(message='Lean error:\ninternal exception #5') - Line 319
LeanError(message='Lean error:\nsimp made no progress') - Line 320
LeanError(message='Lean error:\nsimp made no progress') - Line 321
LeanError(message='Lean error:\nsimp made no progress') - Line 322
LeanError(message='Lean error:\ntype mismatch\n  if hx : x₁ = x₂ then ?pos✝ else ?neg✝\nhas type\n  ?m.1164 : Sort ?u.1163\nbut is expected to have type\n  sorry = sorry : Prop') - Line 323
LeanError(message='Lean error:\ninternal exception #5') - Line 324
LeanError(message='Lean error:\nno goals to be solved') - Line 325
LeanError(message='Lean error:\ninternal exception #5') - Line 326
LeanError(message='Lean error:\ninternal exception #5') - Line 327
LeanError(message='Lean error:\ninternal exception #5') - Line 328
LeanError(message='Lean error:\ninternal exception #5') - Line 329
LeanError(message='Lean error:\ninternal exception #5') - Line 330
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 331
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 332
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 333
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 334
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 335
LeanError(message='Lean error:\nfailed on all goals') - Line 341
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 343
LeanError(message='Lean error:\ntype mismatch, term\n  pow_zero ?m.1480\nafter simplification has type\n  ?m.1480 ^ 0 = 1 : Prop\nbut is expected to have type\n  sorry = 1 : Prop') - Line 344
LeanError(message='Lean error:\ntype mismatch, term\n  pow_one ?m.1855\nafter simplification has type\n  ?m.1855 ^ 1 = ?m.1855 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 345
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Fin 2 → sorry') - Line 346
LeanError(message='Lean error:\ninternal exception #5') - Line 348
LeanError(message='Lean error:\ninternal exception #5') - Line 349
LeanError(message='Lean error:\nsimp made no progress') - Line 350
LeanError(message='Lean error:\ninternal exception #5') - Line 351
LeanError(message='Lean error:\ninternal exception #5') - Line 352
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 358
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 359
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.4345 F XYIdeal\nargument\n  XYIdeal\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.3497 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\nhy₂ : y₂ = sorry\n⊢ sorry = sorry") - Line 361
LeanError(message='Lean error:\n<input>:4:57: unknown tactic') - Line 362
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?I * ↑?J\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝¹ : Sort u_2\nXYIdeal : x✝¹\nx✝ : Sort u_3\nXIdeal : x✝\nx y : F\nh : sorry\n⊢ sorry * sorry * sorry = 1") - Line 363
LeanError(message='Lean error:\ninternal exception #5') - Line 364
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx y : F\nh : sorry\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = 1") - Line 366
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = ClassGroup.mk sorry") - Line 367
LeanError(message="Lean error:\nunknown free variable '_fvar.3466'") - Line 368
LeanError(message='Lean error:\ninternal exception #5') - Line 370
LeanError(message='Lean error:\ninternal exception #5') - Line 371
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 375
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nAffine : ?m.4209\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nx✝ : Sort u_1\ntoClass : x✝\nP : sorry\n⊢ sorry = 0 ↔ P = 0") - Line 376
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.5305 is not an inductive datatype') - Line 377
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x, 1 * x ^ 2 + 1 * x + sorry = 0) → ∃ C, C • E = E'\nF : Type u_1\ninst✝⁶ : Field F\ninst✝⁵ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝⁴ : E.IsElliptic\ninst✝³ : E'.IsElliptic\ninst✝² : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\ninst✝¹ : E.IsCharTwoJNeZeroNF\ninst✝ : E'.IsCharTwoJNeZeroNF\nheq : E.a₆ = E'.a₆\n⊢ ∃ C, C • E = E'") - Line 378
LeanError(message='Lean error:\ninternal exception #5') - Line 379
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁴ : Field F\ninst✝³ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝² : E.IsElliptic\ninst✝¹ : E'.IsElliptic\ninst✝ : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 380
LeanError(message='Lean error:\ninternal exception #5') - Line 381
LeanError(message='Lean error:\ninternal exception #5') - Line 382
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 383
LeanError(message='Lean error:\napplication type mismatch\n  { out := hchar2 }\nargument\n  hchar2\nhas type\n  sorry ≠ sorry : Prop\nbut is expected to have type\n  ?m.8273 ≠ 0 : Prop') - Line 384
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 385
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = 0") - Line 386
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = -27") - Line 387
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -48") - Line 388
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -64") - Line 389
LeanError(message='Lean error:\nsimp made no progress') - Line 390
LeanError(message='Lean error:\nsimp made no progress') - Line 391
LeanError(message='Lean error:\ninternal exception #5') - Line 392
LeanError(message='Lean error:\ninternal exception #5') - Line 393
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'WeierstrassCurve.j'.") - Line 394
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh3 : 3 ≠ 0\n⊢ sorry = sorry") - Line 395
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 396
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 397
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 398
LeanError(message='Lean error:\ntype mismatch\n  if h3 : sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.2503 : Sort ?u.2502\nbut is expected to have type\n  sorry = sorry : Prop') - Line 399
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 400
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 402
LeanError(message='Lean error:\ninternal exception #5') - Line 405
LeanError(message='Lean error:\ninternal exception #5') - Line 406
LeanError(message='Lean error:\ninternal exception #5') - Line 407
LeanError(message='Lean error:\ninternal exception #5') - Line 408
LeanError(message='Lean error:\ninternal exception #5') - Line 409
LeanError(message='Lean error:\ninternal exception #5') - Line 410
LeanError(message='Lean error:\ninternal exception #5') - Line 411
LeanError(message='Lean error:\nsimp made no progress') - Line 416
LeanError(message='Lean error:\nsimp made no progress') - Line 419
LeanError(message='Lean error:\nsimp made no progress') - Line 420
LeanError(message='Lean error:\nsimp made no progress') - Line 421
LeanError(message='Lean error:\ninternal exception #5') - Line 422
LeanError(message='Lean error:\ninternal exception #5') - Line 423
LeanError(message='Lean error:\ninternal exception #5') - Line 424
LeanError(message='Lean error:\ninternal exception #5') - Line 425
LeanError(message='Lean error:\ninternal exception #5') - Line 426
LeanError(message='Lean error:\ninternal exception #5') - Line 427
LeanError(message='Lean error:\ninternal exception #5') - Line 428
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 429
LeanError(message='Lean error:\nsimp made no progress') - Line 435
LeanError(message='Lean error:\nsimp made no progress') - Line 437
LeanError(message='Lean error:\nsimp made no progress') - Line 438
LeanError(message='Lean error:\nsimp made no progress') - Line 439
LeanError(message='Lean error:\nsimp made no progress') - Line 440
LeanError(message='Lean error:\ninternal exception #5') - Line 441
LeanError(message='Lean error:\ninternal exception #5') - Line 442
LeanError(message='Lean error:\ninternal exception #5') - Line 443
LeanError(message='Lean error:\ninternal exception #5') - Line 444
LeanError(message='Lean error:\ninternal exception #5') - Line 445
LeanError(message='Lean error:\ninternal exception #5') - Line 446
LeanError(message='Lean error:\ninternal exception #5') - Line 447
LeanError(message='Lean error:\ninternal exception #5') - Line 448
LeanError(message='Lean error:\nsimp made no progress') - Line 449
LeanError(message='Lean error:\ninternal exception #5') - Line 451
LeanError(message='Lean error:\ninternal exception #5') - Line 452
LeanError(message='Lean error:\ninternal exception #5') - Line 457
LeanError(message='Lean error:\ninternal exception #5') - Line 458
LeanError(message='Lean error:\ninternal exception #5') - Line 459
LeanError(message='Lean error:\ninternal exception #5') - Line 460
LeanError(message='Lean error:\ninternal exception #5') - Line 461
LeanError(message='Lean error:\ninternal exception #5') - Line 462
LeanError(message='Lean error:\ninternal exception #5') - Line 463
LeanError(message='Lean error:\ninternal exception #5') - Line 464
LeanError(message='Lean error:\ninternal exception #5') - Line 465
LeanError(message='Lean error:\ninternal exception #5') - Line 466
LeanError(message='Lean error:\ninternal exception #5') - Line 467
LeanError(message='Lean error:\ninternal exception #5') - Line 468
LeanError(message='Lean error:\ninternal exception #5') - Line 469
LeanError(message='Lean error:\ninternal exception #5') - Line 470
LeanError(message='Lean error:\ninternal exception #5') - Line 473
LeanError(message='Lean error:\ninternal exception #5') - Line 474
LeanError(message='Lean error:\ninternal exception #5') - Line 475
LeanError(message='Lean error:\ninternal exception #5') - Line 476
LeanError(message='Lean error:\ninternal exception #5') - Line 477
LeanError(message='Lean error:\ninternal exception #5') - Line 478
LeanError(message='Lean error:\ninternal exception #5') - Line 479
LeanError(message='Lean error:\ninternal exception #5') - Line 480
LeanError(message='Lean error:\ninternal exception #5') - Line 481
LeanError(message='Lean error:\ninternal exception #5') - Line 482
LeanError(message='Lean error:\ninternal exception #5') - Line 483
LeanError(message='Lean error:\ninternal exception #5') - Line 484
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 485
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁶ : Field F\ninst✝⁵ inst✝⁴ : CharP F 3\ninst✝³ : CharP F 2\nW : WeierstrassCurve F\ninst✝² : W.IsElliptic\ninst✝¹ : W.IsCharTwoJEqZeroNF\ninst✝ : CharP F 2\nha₁ : W.a₁ = 0\n⊢ (W.toCharTwoJEqZeroNF • W).IsCharTwoJEqZeroNF") - Line 486
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁴ : Field F\ninst✝³ inst✝² : CharP F 3\ninst✝¹ inst✝ : CharP F 2\nW : WeierstrassCurve F\nha₁ : W.a₁ ≠ 0\n⊢ (W.toCharTwoJNeZeroNF ha₁ • W).IsCharTwoJNeZeroNF") - Line 487
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 488
LeanError(message='Lean error:\nsimp made no progress') - Line 498
LeanError(message='Lean error:\nsimp made no progress') - Line 499
LeanError(message='Lean error:\nsimp made no progress') - Line 500
LeanError(message='Lean error:\nsimp made no progress') - Line 502
LeanError(message='Lean error:\nsimp made no progress') - Line 503
LeanError(message='Lean error:\nsimp made no progress') - Line 504
LeanError(message='Lean error:\nsimp made no progress') - Line 505
LeanError(message='Lean error:\nsimp made no progress') - Line 506
LeanError(message='Lean error:\ninternal exception #5') - Line 507
LeanError(message='Lean error:\ninternal exception #5') - Line 508
LeanError(message='Lean error:\ninternal exception #5') - Line 509
LeanError(message='Lean error:\nsimp made no progress') - Line 514
LeanError(message='Lean error:\nsimp made no progress') - Line 515
LeanError(message='Lean error:\nsimp made no progress') - Line 516
LeanError(message='Lean error:\ninternal exception #5') - Line 517
LeanError(message='Lean error:\ninternal exception #5') - Line 518
LeanError(message='Lean error:\ninternal exception #5') - Line 519
LeanError(message='Lean error:\ninternal exception #5') - Line 520
LeanError(message='Lean error:\ninternal exception #5') - Line 521
LeanError(message='Lean error:\ninternal exception #5') - Line 522
LeanError(message='Lean error:\ninternal exception #5') - Line 523
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 524
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 525
LeanError(message='Lean error:\ninternal exception #5') - Line 526
LeanError(message='Lean error:\ninternal exception #5') - Line 527
LeanError(message='Lean error:\ninternal exception #5') - Line 528
LeanError(message='Lean error:\ninternal exception #5') - Line 529
LeanError(message='Lean error:\ninternal exception #5') - Line 530
LeanError(message='Lean error:\ninternal exception #5') - Line 531
LeanError(message='Lean error:\ninternal exception #5') - Line 532
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 533
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 534
LeanError(message='Lean error:\nsimp made no progress') - Line 535
LeanError(message='Lean error:\nsimp made no progress') - Line 536
LeanError(message='Lean error:\nsimp made no progress') - Line 537
LeanError(message='Lean error:\nsimp made no progress') - Line 538
LeanError(message='Lean error:\nsimp made no progress') - Line 539
LeanError(message='Lean error:\nsimp made no progress') - Line 540
LeanError(message='Lean error:\nsimp made no progress') - Line 541
LeanError(message='Lean error:\nfailed to synthesize\n  CommSemiring R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 546
LeanError(message='Lean error:\ninternal exception #5') - Line 547
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 548
LeanError(message='Lean error:\ninternal exception #5') - Line 549
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 550
LeanError(message='Lean error:\ninternal exception #5') - Line 551
LeanError(message='Lean error:\ninternal exception #5') - Line 555
LeanError(message='Lean error:\ninternal exception #5') - Line 556
LeanError(message='Lean error:\ninternal exception #5') - Line 557
LeanError(message='Lean error:\ninternal exception #5') - Line 558
LeanError(message='Lean error:\ninternal exception #5') - Line 559
LeanError(message='Lean error:\ninternal exception #5') - Line 560
LeanError(message='Lean error:\ninternal exception #5') - Line 561
LeanError(message='Lean error:\ninternal exception #5') - Line 562
LeanError(message='Lean error:\ninternal exception #5') - Line 563
LeanError(message='Lean error:\ninternal exception #5') - Line 564
LeanError(message='Lean error:\ninternal exception #5') - Line 565
LeanError(message='Lean error:\ninternal exception #5') - Line 567
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Aˣ') - Line 568
LeanError(message='Lean error:\nsimp made no progress') - Line 569
LeanError(message='Lean error:\ninternal exception #5') - Line 571
LeanError(message='Lean error:\ninternal exception #5') - Line 572
LeanError(message='Lean error:\ninternal exception #5') - Line 573
LeanError(message='Lean error:\ninternal exception #5') - Line 574
LeanError(message='Lean error:\nsimp made no progress') - Line 594
LeanError(message='Lean error:\ninternal exception #5') - Line 595
LeanError(message='Lean error:\ninternal exception #5') - Line 596
LeanError(message='Lean error:\ninternal exception #5') - Line 597
LeanError(message='Lean error:\ninternal exception #5') - Line 598
LeanError(message='Lean error:\ninternal exception #5') - Line 599
LeanError(message='Lean error:\ninternal exception #5') - Line 600
LeanError(message='Lean error:\nsimp made no progress') - Line 602
LeanError(message='Lean error:\ninternal exception #5') - Line 603
LeanError(message='Lean error:\ninternal exception #5') - Line 604
LeanError(message='Lean error:\ninternal exception #5') - Line 606
LeanError(message='Lean error:\ninternal exception #5') - Line 607
LeanError(message='Lean error:\ninternal exception #5') - Line 608
LeanError(message='Lean error:\ninternal exception #5') - Line 609
LeanError(message='Lean error:\ninternal exception #5') - Line 610
LeanError(message='Lean error:\nsimp made no progress') - Line 611
LeanError(message='Lean error:\nsimp made no progress') - Line 612
LeanError(message='Lean error:\nsimp made no progress') - Line 614
LeanError(message='Lean error:\nsimp made no progress') - Line 615
LeanError(message='Lean error:\nsimp made no progress') - Line 616
LeanError(message='Lean error:\ninternal exception #5') - Line 617
LeanError(message='Lean error:\ninternal exception #5') - Line 618
LeanError(message='Lean error:\ninternal exception #5') - Line 619
LeanError(message='Lean error:\ninternal exception #5') - Line 620
LeanError(message='Lean error:\ninternal exception #5') - Line 621
LeanError(message='Lean error:\ninternal exception #5') - Line 622
LeanError(message='Lean error:\nsimp made no progress') - Line 634
LeanError(message='Lean error:\ninternal exception #5') - Line 635
LeanError(message='Lean error:\ninternal exception #5') - Line 636
LeanError(message='Lean error:\ninternal exception #5') - Line 637
LeanError(message='Lean error:\ninternal exception #5') - Line 638
LeanError(message='Lean error:\ninternal exception #5') - Line 639
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 640
LeanError(message='Lean error:\nsimp made no progress') - Line 641
LeanError(message='Lean error:\nsimp made no progress') - Line 642
LeanError(message='Lean error:\nsimp made no progress') - Line 643
LeanError(message='Lean error:\nsimp made no progress') - Line 644
LeanError(message='Lean error:\nsimp made no progress') - Line 645
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 646
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 647
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 648
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 649
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 650
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 651
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 652
LeanError(message='Lean error:\ninternal exception #5') - Line 653
LeanError(message='Lean error:\ninternal exception #5') - Line 654
LeanError(message='Lean error:\ninternal exception #5') - Line 655
LeanError(message='Lean error:\ninternal exception #5') - Line 656
LeanError(message='Lean error:\ninternal exception #5') - Line 657
LeanError(message='Lean error:\ninternal exception #5') - Line 658
LeanError(message='Lean error:\ninternal exception #5') - Line 659
LeanError(message='Lean error:\ninternal exception #5') - Line 660
LeanError(message='Lean error:\ninternal exception #5') - Line 661
LeanError(message='Lean error:\ninternal exception #5') - Line 662
LeanError(message='Lean error:\ninternal exception #5') - Line 663
LeanError(message='Lean error:\ninternal exception #5') - Line 664
LeanError(message='Lean error:\ninternal exception #5') - Line 665
LeanError(message='Lean error:\ninternal exception #5') - Line 666
LeanError(message='Lean error:\ninternal exception #5') - Line 669
LeanError(message='Lean error:\ninternal exception #5') - Line 671
LeanError(message='Lean error:\ninternal exception #5') - Line 672
LeanError(message='Lean error:\ninternal exception #5') - Line 673
LeanError(message='Lean error:\ninternal exception #5') - Line 676
LeanError(message='Lean error:\ninternal exception #5') - Line 678
LeanError(message='Lean error:\ninternal exception #5') - Line 679
LeanError(message='Lean error:\ninternal exception #5') - Line 680
LeanError(message='Lean error:\nfailed to synthesize\n  CommRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 682
LeanError(message='Lean error:\ninternal exception #5') - Line 683
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 685
LeanError(message='Lean error:\ninternal exception #5') - Line 686
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nexpCoeff : x✝\nm : ℕ\n⊢ sorry = sorry ^ 2 * sorry * sorry - sorry * sorry * sorry ^ 2 ∧\n    sorry = (sorry * sorry ^ 3 * if Even m then 16 else 1) - sorry * sorry ^ 3 * if Even m then 1 else 16") - Line 688
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.9164 ≤ ?m.9162 →\n    Polynomial.natDegree ?m.9165 ≤ ?m.9161 → (?m.9164 * ?m.9165).natDegree ≤ ?m.9162 + ?m.9161 : Prop\nbut is expected to have type\n  ?m.10114 → ?m.10115 → sorry ≤ m + n : Prop') - Line 689
LeanError(message='Lean error:\nno goals to be solved') - Line 691
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 692
LeanError(message='Lean error:\nsimp made no progress') - Line 694
LeanError(message='Lean error:\ninternal exception #5') - Line 695
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 697
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 698
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 699
LeanError(message='Lean error:\ninternal exception #5') - Line 702
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 703
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_pow_le_of_le n\nhas type\n  Polynomial.natDegree ?m.11160 ≤ ?m.11158 → (?m.11160 ^ n).natDegree ≤ n * ?m.11158 : Prop\nbut is expected to have type\n  ?m.12126 → sorry ≤ n * m : Prop') - Line 704
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 705
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 706
LeanError(message='Lean error:\ninternal exception #5') - Line 707
LeanError(message='Lean error:\ninternal exception #5') - Line 709
LeanError(message='Lean error:\ninternal exception #5') - Line 710
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 711
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.8608 ≤ ?m.8606 →\n    Polynomial.natDegree ?m.8609 ≤ ?m.8605 → (?m.8608 * ?m.8609).natDegree ≤ ?m.8606 + ?m.8605 : Prop\nbut is expected to have type\n  ?m.9558 → ?m.9559 → sorry ≤ m + n : Prop') - Line 712
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 713
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 714
LeanError(message='Lean error:\ninternal exception #5') - Line 717
LeanError(message='Lean error:\ninternal exception #5') - Line 718
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 720
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.18233 ≈ ?m.18234\nR : Type r\nP Q : Fin 3 → R\nu v : R\nhu : sorry\nhv : sorry\n⊢ ⟦sorry⟧ = ⟦sorry⟧ ↔ sorry") - Line 728
LeanError(message='Lean error:\napplication type mismatch\n  { mp := ?m.1037, mpr := Quotient.exact ∘ congrArg (Quotient.mk ?m.1042) }\nargument\n  Quotient.exact ∘ congrArg (Quotient.mk ?m.1042)\nhas type\n  ?m.1043 = ?m.1176 → ?m.1043 ≈ ?m.1176 : Prop\nbut is expected to have type\n  P = Q → sorry : Prop') - Line 729
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 731
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 732
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 733
LeanError(message='Lean error:\ntype mismatch\n  Units.mk0 ?m.6681 ?m.6789 / Units.mk0 ?m.6816 ?m.6841\nhas type\n  ?m.6679ˣ : outParam (Type ?u.6678)\nbut is expected to have type\n  sorry : Sort u_3') - Line 738
LeanError(message='Lean error:\ninternal exception #5') - Line 742
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4934 ≠ 0 : Prop') - Line 743
LeanError(message='Lean error:\ninternal exception #5') - Line 744
LeanError(message='Lean error:\ninternal exception #5') - Line 745
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 746
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 747
LeanError(message='Lean error:\nsimp made no progress') - Line 748
LeanError(message='Lean error:\ninternal exception #5') - Line 751
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 42
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  sorry `«[anonymous]:0:0» = CategoryTheory.inv sorry : Prop\nbut is expected to have type\n  sorry `«[anonymous]:8:4» = CategoryTheory.inv sorry : Prop') - Line 43
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 90
LeanError(message='Lean error:\nsimp made no progress') - Line 92
LeanError(message='Lean error:\ninternal exception #5') - Line 130
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 135
LeanError(message='Lean error:\ndsimp made no progress') - Line 136
LeanError(message='Lean error:\ninternal exception #5') - Line 137
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ U,\n      ∃ (m : ?m.12092 ∈ U),\n        ∃ s, (CategoryTheory.ConcreteCategory.hom (TopCat.Presheaf.germ ?m.12091 U ?m.12092 m)) s = sorry) →\n    ∃ x, x.2 • y = ?m.3264\nR S : CommRingCat\np : PrimeSpectrum ↑R\ninst✝ : Algebra ↑R ↑S\nx✝ : Sort u_1\ntoPushforwardStalkAlgHom : x✝\ny : ?m.12065 R S _fvar.1543 p\n⊢ ∃ x, x.2 • y = ?m.3264") - Line 139
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3649\nScheme : ?m.1587\nIsAffineOpen : ?m.1971\nX : sorry\nY : sorry\nf : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nx✝ : Sort u_1\nSpec : x✝\nR : CommRingCat\nx : ?m.3631 R\n⊢ sorry = sorry") - Line 148
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5833') - Line 154
LeanError(message='Lean error:\ninternal exception #5') - Line 155
LeanError(message='Lean error:\ninternal exception #5') - Line 156
LeanError(message='Lean error:\ninternal exception #5') - Line 157
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝ : Sort u_1\nstalkClosedPointTo : x✝\ng : sorry\n⊢ sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 159
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nR S : CommRingCat\ninst✝ : IsLocalRing ↑S\nφ : R ⟶ S\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry φ") - Line 160
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU✝ : sorry\nV : sorry\nhU✝ : sorry\nhV : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf : sorry\nx✝¹ : Sort u_1\nstalkClosedPointTo : x✝¹\nx✝ : Sort u_2\nΓSpecIso : x✝\nU : sorry\nhU : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry (sorry ≪≫ sorry).hom") - Line 161
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nScheme : ?m.6150\nIsAffineOpen : ?m.6534\nSpec : ?m.7270\nX : sorry\nY : sorry\nf✝ : sorry\nU : sorry\nV : sorry\nhU : sorry\nhV : sorry\nR✝ : CommRingCat\ninst✝¹ : IsLocalRing ↑R✝\nf : sorry\nR : CommRingCat\ninst✝ : IsLocalRing ↑R\nf₁ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\nf₂ : (_ : ?m.11126) × { f // IsLocalHom (CommRingCat.Hom.hom f) }\n⊢ f₁ = f₂ ↔ ∃ (_ : f₁.fst = f₂.fst), ↑f₁.snd = CategoryTheory.CategoryStruct.comp sorry ↑f₂.snd") - Line 165
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 166
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 180
LeanError(message='Lean error:\ninternal exception #5') - Line 181
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 182
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nR : Type u\ninst✝ : CommRing R\nx✝ : Sort u_1\nconst : x✝\nf g₁ g₂ : R\nU : ?m.5047 R f g₁ g₂\nhu₁ : ?m.5048 R f g₁ g₂ U\nhu₂ : ?m.5049 R f g₁ g₂ U hu₁\n⊢ sorry * sorry = sorry") - Line 183
LeanError(message='Lean error:\n<input>:1:48: expected end of input') - Line 187
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 188
LeanError(message='Lean error:\ninternal exception #5') - Line 191
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 198
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, ⋯⟩\nargument\n  Submonoid.mem_powers ?m.98675\nhas type\n  ?m.98675 ∈ Submonoid.powers ?m.98675 : Prop\nbut is expected to have type\n  sorry ∈ ?m.183425 i j : Prop') - Line 207
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 208
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = _a\nError: application type mismatch\n  @?m.7636 R inst✝ toOpen\nargument\n  toOpen\nhas type\n  x✝² : Sort u_1\nbut is expected to have type\n  ?m.7633 R : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nR : Type u\ninst✝ : CommRing R\nx✝² : Sort u_1\ntoOpen : x✝²\nx✝¹ : Sort u_2\ntoBasicOpen : x✝¹\nx✝ : Sort u_3\nstructureSheaf : x✝\n⊢ sorry =\n    CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom (algebraMap R (Localization.Away 1)))\n      (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom sorry) sorry)") - Line 211
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 213
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (Localization.AtPrime y.asIdeal) ⟶ ?m.13871 h') - Line 214
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 215
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nR : Type u\ninst✝¹ : CommRing R\nS : Type u\ninst✝ : CommRing S\nx✝ : Sort u_1\nisLocallyFraction : x✝\nf : R →+* S\nU : sorry\nV : sorry\nhUV : sorry ⊆ ⇑(PrimeSpectrum.comap f) ⁻¹' sorry\ns : sorry\nhs : sorry\n⊢ sorry") - Line 216
LeanError(message='Lean error:\ninternal exception #5') - Line 220
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 221
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  TopologicalSpace.IsTopologicalBasis ?s\nwith\n  sorry\nScheme : ?m.49670\nOpenCover : ?m.49683\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰 : sorry\nf : sorry\ng : sorry\nX : sorry\n⊢ sorry") - Line 236
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.50857 = Set.univ\nScheme : ?m.49757\nP : sorry\nX✝ : sorry\nY : sorry\nZ : sorry\n𝒰✝ : sorry\nf : sorry\ng : sorry\nX : sorry\n𝒰 : sorry\n⊢ ⋃ i, Set.range ?m.50785 = Set.univ") - Line 237
LeanError(message='Lean error:\nsimp made no progress') - Line 245
LeanError(message='Lean error:\ninternal exception #5') - Line 246
LeanError(message='Lean error:\ninternal exception #5') - Line 247
LeanError(message='Lean error:\ninternal exception #5') - Line 248
LeanError(message='Lean error:\nnot a type\n  sorry') - Line 249
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 251
LeanError(message='Lean error:\nsimp made no progress') - Line 252
LeanError(message='Lean error:\ninternal exception #5') - Line 253
LeanError(message='Lean error:\ninternal exception #5') - Line 254
LeanError(message='Lean error:\ninternal exception #5') - Line 255
LeanError(message='Lean error:\ninternal exception #5') - Line 256
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 257
LeanError(message='Lean error:\nsimp made no progress') - Line 258
LeanError(message="Lean error:\nunknown free variable '_fvar.97'") - Line 259
LeanError(message='Lean error:\nsimp made no progress') - Line 260
LeanError(message='Lean error:\ninternal exception #5') - Line 261
LeanError(message='Lean error:\ninternal exception #5') - Line 262
LeanError(message='Lean error:\ninternal exception #5') - Line 263
LeanError(message='Lean error:\ninternal exception #5') - Line 264
LeanError(message='Lean error:\nno goals to be solved') - Line 265
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 266
LeanError(message='Lean error:\ninternal exception #5') - Line 268
LeanError(message='Lean error:\ninternal exception #5') - Line 269
LeanError(message='Lean error:\nsimp made no progress') - Line 270
LeanError(message='Lean error:\ninternal exception #5') - Line 271
LeanError(message='Lean error:\ninternal exception #5') - Line 272
LeanError(message='Lean error:\ninternal exception #5') - Line 273
LeanError(message='Lean error:\ninternal exception #5') - Line 274
LeanError(message='Lean error:\ninternal exception #5') - Line 275
LeanError(message='Lean error:\ninternal exception #5') - Line 276
LeanError(message='Lean error:\ninternal exception #5') - Line 277
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 278
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 279
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'slope'.") - Line 280
LeanError(message='Lean error:\ninternal exception #5') - Line 281
LeanError(message='Lean error:\ninternal exception #5') - Line 282
LeanError(message='Lean error:\ninternal exception #5') - Line 284
LeanError(message='Lean error:\ninternal exception #5') - Line 285
LeanError(message='Lean error:\ninternal exception #5') - Line 287
LeanError(message='Lean error:\ninternal exception #5') - Line 288
LeanError(message='Lean error:\n<input>:2:18: expected end of input') - Line 289
LeanError(message='Lean error:\nsimp made no progress') - Line 291
LeanError(message='Lean error:\nsimp made no progress') - Line 292
LeanError(message='Lean error:\nsimp made no progress') - Line 293
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ndependent elimination failed, failed to solve equation\n  0 = sorry\nat case Eq.refl") - Line 295
LeanError(message='Lean error:\nsimp made no progress') - Line 300
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 309
LeanError(message='Lean error:\ninternal exception #5') - Line 310
LeanError(message='Lean error:\ninternal exception #5') - Line 311
LeanError(message='Lean error:\nno goals to be solved') - Line 312
LeanError(message='Lean error:\nsimp made no progress') - Line 313
LeanError(message='Lean error:\nsimp made no progress') - Line 314
LeanError(message='Lean error:\nno goals to be solved') - Line 315
LeanError(message='Lean error:\nsimp made no progress') - Line 316
LeanError(message='Lean error:\nsimp made no progress') - Line 317
LeanError(message='Lean error:\nsimp made no progress') - Line 318
LeanError(message='Lean error:\ninternal exception #5') - Line 319
LeanError(message='Lean error:\nsimp made no progress') - Line 320
LeanError(message='Lean error:\nsimp made no progress') - Line 321
LeanError(message='Lean error:\nsimp made no progress') - Line 322
LeanError(message='Lean error:\ntype mismatch\n  if hx : x₁ = x₂ then ?pos✝ else ?neg✝\nhas type\n  ?m.1164 : Sort ?u.1163\nbut is expected to have type\n  sorry = sorry : Prop') - Line 323
LeanError(message='Lean error:\ninternal exception #5') - Line 324
LeanError(message='Lean error:\nno goals to be solved') - Line 325
LeanError(message='Lean error:\ninternal exception #5') - Line 326
LeanError(message='Lean error:\ninternal exception #5') - Line 327
LeanError(message='Lean error:\ninternal exception #5') - Line 328
LeanError(message='Lean error:\ninternal exception #5') - Line 329
LeanError(message='Lean error:\ninternal exception #5') - Line 330
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 331
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 332
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 333
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 334
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\n⊢ sorry = sorry") - Line 335
LeanError(message='Lean error:\nfailed on all goals') - Line 341
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 343
LeanError(message='Lean error:\ntype mismatch, term\n  pow_zero ?m.1480\nafter simplification has type\n  ?m.1480 ^ 0 = 1 : Prop\nbut is expected to have type\n  sorry = 1 : Prop') - Line 344
LeanError(message='Lean error:\ntype mismatch, term\n  pow_one ?m.1855\nafter simplification has type\n  ?m.1855 ^ 1 = ?m.1855 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 345
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Fin 2 → sorry') - Line 346
LeanError(message='Lean error:\ninternal exception #5') - Line 348
LeanError(message='Lean error:\ninternal exception #5') - Line 349
LeanError(message='Lean error:\nsimp made no progress') - Line 350
LeanError(message='Lean error:\ninternal exception #5') - Line 351
LeanError(message='Lean error:\ninternal exception #5') - Line 352
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 358
LeanError(message="Lean error:\nunknown free variable '_fvar.2736'") - Line 359
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.4345 F XYIdeal\nargument\n  XYIdeal\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.3497 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\nhy₂ : y₂ = sorry\n⊢ sorry = sorry") - Line 361
LeanError(message='Lean error:\n<input>:4:57: unknown tactic') - Line 362
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?I * ↑?J\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝¹ : Sort u_2\nXYIdeal : x✝¹\nx✝ : Sort u_3\nXIdeal : x✝\nx y : F\nh : sorry\n⊢ sorry * sorry * sorry = 1") - Line 363
LeanError(message='Lean error:\ninternal exception #5') - Line 364
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx y : F\nh : sorry\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = 1") - Line 366
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f ?x * ?f ?y\nAffine : ?m.2793\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nF : Sort u_1\nx✝ : Sort u_2\nXYIdeal' : x✝\nx₁ x₂ y₁ y₂ : F\nh₁ : sorry\nh₂ : sorry\nhxy : ¬(x₁ = x₂ ∧ y₁ = sorry)\n⊢ ClassGroup.mk sorry * ClassGroup.mk sorry = ClassGroup.mk sorry") - Line 367
LeanError(message="Lean error:\nunknown free variable '_fvar.3466'") - Line 368
LeanError(message='Lean error:\ninternal exception #5') - Line 370
LeanError(message='Lean error:\ninternal exception #5') - Line 371
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 375
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nAffine : ?m.4209\nR : Type u\nS : Type v\ninst✝¹ : CommRing R\ninst✝ : CommRing S\nW : sorry\nf : R →+* S\nx✝ : Sort u_1\ntoClass : x✝\nP : sorry\n⊢ sorry = 0 ↔ P = 0") - Line 376
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.5305 is not an inductive datatype') - Line 377
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x, 1 * x ^ 2 + 1 * x + sorry = 0) → ∃ C, C • E = E'\nF : Type u_1\ninst✝⁶ : Field F\ninst✝⁵ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝⁴ : E.IsElliptic\ninst✝³ : E'.IsElliptic\ninst✝² : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\ninst✝¹ : E.IsCharTwoJNeZeroNF\ninst✝ : E'.IsCharTwoJNeZeroNF\nheq : E.a₆ = E'.a₆\n⊢ ∃ C, C • E = E'") - Line 378
LeanError(message='Lean error:\ninternal exception #5') - Line 379
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁴ : Field F\ninst✝³ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝² : E.IsElliptic\ninst✝¹ : E'.IsElliptic\ninst✝ : CharP F 2\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 380
LeanError(message='Lean error:\ninternal exception #5') - Line 381
LeanError(message='Lean error:\ninternal exception #5') - Line 382
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 383
LeanError(message='Lean error:\napplication type mismatch\n  { out := hchar2 }\nargument\n  hchar2\nhas type\n  sorry ≠ sorry : Prop\nbut is expected to have type\n  ?m.8273 ≠ 0 : Prop') - Line 384
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_3), ∃ C, C • E = E'\nF : Type u_1\ninst✝⁵ : Field F\ninst✝⁴ : IsSepClosed F\nE E' : WeierstrassCurve F\ninst✝³ : E.IsElliptic\ninst✝² : E'.IsElliptic\ninst✝¹ : CharP F 2\ninst✝ : CharP F 3\nx✝ : Sort u_2\nVariableChange : x✝\nheq : E.j = E'.j\n⊢ ∃ C, C • E = E'") - Line 385
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = 0") - Line 386
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ0 : x✝\n⊢ sorry = -27") - Line 387
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -48") - Line 388
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nofJ1728 : x✝\n⊢ sorry = -64") - Line 389
LeanError(message='Lean error:\nsimp made no progress') - Line 390
LeanError(message='Lean error:\nsimp made no progress') - Line 391
LeanError(message='Lean error:\ninternal exception #5') - Line 392
LeanError(message='Lean error:\ninternal exception #5') - Line 393
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'WeierstrassCurve.j'.") - Line 394
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh3 : 3 ≠ 0\n⊢ sorry = sorry") - Line 395
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 396
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 397
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ1728 : x✝\nh3 : 3 = 0\n⊢ sorry = sorry") - Line 398
LeanError(message='Lean error:\ntype mismatch\n  if h3 : sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.2503 : Sort ?u.2502\nbut is expected to have type\n  sorry = sorry : Prop') - Line 399
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nF : Type u_2\ninst✝¹ : Field F\ninst✝ : DecidableEq F\nx✝¹ : Sort u_3\nofJ : x✝¹\nx✝ : Sort u_4\nofJ0 : x✝\nh2 : 2 = 0\n⊢ sorry = sorry") - Line 400
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 402
LeanError(message='Lean error:\ninternal exception #5') - Line 405
LeanError(message='Lean error:\ninternal exception #5') - Line 406
LeanError(message='Lean error:\ninternal exception #5') - Line 407
LeanError(message='Lean error:\ninternal exception #5') - Line 408
LeanError(message='Lean error:\ninternal exception #5') - Line 409
LeanError(message='Lean error:\ninternal exception #5') - Line 410
LeanError(message='Lean error:\ninternal exception #5') - Line 411
LeanError(message='Lean error:\nsimp made no progress') - Line 416
LeanError(message='Lean error:\nsimp made no progress') - Line 419
LeanError(message='Lean error:\nsimp made no progress') - Line 420
LeanError(message='Lean error:\nsimp made no progress') - Line 421
LeanError(message='Lean error:\ninternal exception #5') - Line 422
LeanError(message='Lean error:\ninternal exception #5') - Line 423
LeanError(message='Lean error:\ninternal exception #5') - Line 424
LeanError(message='Lean error:\ninternal exception #5') - Line 425
LeanError(message='Lean error:\ninternal exception #5') - Line 426
LeanError(message='Lean error:\ninternal exception #5') - Line 427
LeanError(message='Lean error:\ninternal exception #5') - Line 428
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 429
LeanError(message='Lean error:\nsimp made no progress') - Line 435
LeanError(message='Lean error:\nsimp made no progress') - Line 437
LeanError(message='Lean error:\nsimp made no progress') - Line 438
LeanError(message='Lean error:\nsimp made no progress') - Line 439
LeanError(message='Lean error:\nsimp made no progress') - Line 440
LeanError(message='Lean error:\ninternal exception #5') - Line 441
LeanError(message='Lean error:\ninternal exception #5') - Line 442
LeanError(message='Lean error:\ninternal exception #5') - Line 443
LeanError(message='Lean error:\ninternal exception #5') - Line 444
LeanError(message='Lean error:\ninternal exception #5') - Line 445
LeanError(message='Lean error:\ninternal exception #5') - Line 446
LeanError(message='Lean error:\ninternal exception #5') - Line 447
LeanError(message='Lean error:\ninternal exception #5') - Line 448
LeanError(message='Lean error:\nsimp made no progress') - Line 449
LeanError(message='Lean error:\ninternal exception #5') - Line 451
LeanError(message='Lean error:\ninternal exception #5') - Line 452
LeanError(message='Lean error:\ninternal exception #5') - Line 457
LeanError(message='Lean error:\ninternal exception #5') - Line 458
LeanError(message='Lean error:\ninternal exception #5') - Line 459
LeanError(message='Lean error:\ninternal exception #5') - Line 460
LeanError(message='Lean error:\ninternal exception #5') - Line 461
LeanError(message='Lean error:\ninternal exception #5') - Line 462
LeanError(message='Lean error:\ninternal exception #5') - Line 463
LeanError(message='Lean error:\ninternal exception #5') - Line 464
LeanError(message='Lean error:\ninternal exception #5') - Line 465
LeanError(message='Lean error:\ninternal exception #5') - Line 466
LeanError(message='Lean error:\ninternal exception #5') - Line 467
LeanError(message='Lean error:\ninternal exception #5') - Line 468
LeanError(message='Lean error:\ninternal exception #5') - Line 469
LeanError(message='Lean error:\ninternal exception #5') - Line 470
LeanError(message='Lean error:\ninternal exception #5') - Line 473
LeanError(message='Lean error:\ninternal exception #5') - Line 474
LeanError(message='Lean error:\ninternal exception #5') - Line 475
LeanError(message='Lean error:\ninternal exception #5') - Line 476
LeanError(message='Lean error:\ninternal exception #5') - Line 477
LeanError(message='Lean error:\ninternal exception #5') - Line 478
LeanError(message='Lean error:\ninternal exception #5') - Line 479
LeanError(message='Lean error:\ninternal exception #5') - Line 480
LeanError(message='Lean error:\ninternal exception #5') - Line 481
LeanError(message='Lean error:\ninternal exception #5') - Line 482
LeanError(message='Lean error:\ninternal exception #5') - Line 483
LeanError(message='Lean error:\ninternal exception #5') - Line 484
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 485
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁶ : Field F\ninst✝⁵ inst✝⁴ : CharP F 3\ninst✝³ : CharP F 2\nW : WeierstrassCurve F\ninst✝² : W.IsElliptic\ninst✝¹ : W.IsCharTwoJEqZeroNF\ninst✝ : CharP F 2\nha₁ : W.a₁ = 0\n⊢ (W.toCharTwoJEqZeroNF • W).IsCharTwoJEqZeroNF") - Line 486
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nF : Type u_2\ninst✝⁴ : Field F\ninst✝³ inst✝² : CharP F 3\ninst✝¹ inst✝ : CharP F 2\nW : WeierstrassCurve F\nha₁ : W.a₁ ≠ 0\n⊢ (W.toCharTwoJNeZeroNF ha₁ • W).IsCharTwoJNeZeroNF") - Line 487
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 488
LeanError(message='Lean error:\nsimp made no progress') - Line 498
LeanError(message='Lean error:\nsimp made no progress') - Line 499
LeanError(message='Lean error:\nsimp made no progress') - Line 500
LeanError(message='Lean error:\nsimp made no progress') - Line 502
LeanError(message='Lean error:\nsimp made no progress') - Line 503
LeanError(message='Lean error:\nsimp made no progress') - Line 504
LeanError(message='Lean error:\nsimp made no progress') - Line 505
LeanError(message='Lean error:\nsimp made no progress') - Line 506
LeanError(message='Lean error:\ninternal exception #5') - Line 507
LeanError(message='Lean error:\ninternal exception #5') - Line 508
LeanError(message='Lean error:\ninternal exception #5') - Line 509
LeanError(message='Lean error:\nsimp made no progress') - Line 514
LeanError(message='Lean error:\nsimp made no progress') - Line 515
LeanError(message='Lean error:\nsimp made no progress') - Line 516
LeanError(message='Lean error:\ninternal exception #5') - Line 517
LeanError(message='Lean error:\ninternal exception #5') - Line 518
LeanError(message='Lean error:\ninternal exception #5') - Line 519
LeanError(message='Lean error:\ninternal exception #5') - Line 520
LeanError(message='Lean error:\ninternal exception #5') - Line 521
LeanError(message='Lean error:\ninternal exception #5') - Line 522
LeanError(message='Lean error:\ninternal exception #5') - Line 523
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 524
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 525
LeanError(message='Lean error:\ninternal exception #5') - Line 526
LeanError(message='Lean error:\ninternal exception #5') - Line 527
LeanError(message='Lean error:\ninternal exception #5') - Line 528
LeanError(message='Lean error:\ninternal exception #5') - Line 529
LeanError(message='Lean error:\ninternal exception #5') - Line 530
LeanError(message='Lean error:\ninternal exception #5') - Line 531
LeanError(message='Lean error:\ninternal exception #5') - Line 532
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 533
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 534
LeanError(message='Lean error:\nsimp made no progress') - Line 535
LeanError(message='Lean error:\nsimp made no progress') - Line 536
LeanError(message='Lean error:\nsimp made no progress') - Line 537
LeanError(message='Lean error:\nsimp made no progress') - Line 538
LeanError(message='Lean error:\nsimp made no progress') - Line 539
LeanError(message='Lean error:\nsimp made no progress') - Line 540
LeanError(message='Lean error:\nsimp made no progress') - Line 541
LeanError(message='Lean error:\nsimp made no progress') - Line 546
LeanError(message='Lean error:\ninternal exception #5') - Line 547
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 548
LeanError(message='Lean error:\ninternal exception #5') - Line 549
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 550
LeanError(message='Lean error:\ninternal exception #5') - Line 551
LeanError(message='Lean error:\ninternal exception #5') - Line 555
LeanError(message='Lean error:\ninternal exception #5') - Line 556
LeanError(message='Lean error:\ninternal exception #5') - Line 557
LeanError(message='Lean error:\ninternal exception #5') - Line 558
LeanError(message='Lean error:\ninternal exception #5') - Line 559
LeanError(message='Lean error:\ninternal exception #5') - Line 560
LeanError(message='Lean error:\ninternal exception #5') - Line 561
LeanError(message='Lean error:\ninternal exception #5') - Line 562
LeanError(message='Lean error:\ninternal exception #5') - Line 563
LeanError(message='Lean error:\ninternal exception #5') - Line 564
LeanError(message='Lean error:\ninternal exception #5') - Line 565
LeanError(message='Lean error:\ninternal exception #5') - Line 567
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Aˣ') - Line 568
LeanError(message='Lean error:\nsimp made no progress') - Line 569
LeanError(message='Lean error:\ninternal exception #5') - Line 571
LeanError(message='Lean error:\ninternal exception #5') - Line 572
LeanError(message='Lean error:\ninternal exception #5') - Line 573
LeanError(message='Lean error:\ninternal exception #5') - Line 574
LeanError(message='Lean error:\nsimp made no progress') - Line 594
LeanError(message='Lean error:\ninternal exception #5') - Line 595
LeanError(message='Lean error:\ninternal exception #5') - Line 596
LeanError(message='Lean error:\ninternal exception #5') - Line 597
LeanError(message='Lean error:\ninternal exception #5') - Line 598
LeanError(message='Lean error:\ninternal exception #5') - Line 599
LeanError(message='Lean error:\ninternal exception #5') - Line 600
LeanError(message='Lean error:\nsimp made no progress') - Line 602
LeanError(message='Lean error:\ninternal exception #5') - Line 603
LeanError(message='Lean error:\ninternal exception #5') - Line 604
LeanError(message='Lean error:\nsimp made no progress') - Line 605
LeanError(message='Lean error:\ninternal exception #5') - Line 606
LeanError(message='Lean error:\ninternal exception #5') - Line 607
LeanError(message='Lean error:\ninternal exception #5') - Line 608
LeanError(message='Lean error:\ninternal exception #5') - Line 609
LeanError(message='Lean error:\ninternal exception #5') - Line 610
LeanError(message='Lean error:\nsimp made no progress') - Line 611
LeanError(message='Lean error:\nsimp made no progress') - Line 612
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 613
LeanError(message='Lean error:\nsimp made no progress') - Line 614
LeanError(message='Lean error:\nsimp made no progress') - Line 615
LeanError(message='Lean error:\nsimp made no progress') - Line 616
LeanError(message='Lean error:\ninternal exception #5') - Line 617
LeanError(message='Lean error:\ninternal exception #5') - Line 618
LeanError(message='Lean error:\ninternal exception #5') - Line 619
LeanError(message='Lean error:\ninternal exception #5') - Line 620
LeanError(message='Lean error:\ninternal exception #5') - Line 621
LeanError(message='Lean error:\ninternal exception #5') - Line 622
LeanError(message='Lean error:\nsimp made no progress') - Line 623
LeanError(message='Lean error:\nsimp made no progress') - Line 634
LeanError(message='Lean error:\ninternal exception #5') - Line 635
LeanError(message='Lean error:\ninternal exception #5') - Line 636
LeanError(message='Lean error:\ninternal exception #5') - Line 637
LeanError(message='Lean error:\ninternal exception #5') - Line 638
LeanError(message='Lean error:\ninternal exception #5') - Line 639
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 640
LeanError(message='Lean error:\nsimp made no progress') - Line 641
LeanError(message='Lean error:\nsimp made no progress') - Line 642
LeanError(message='Lean error:\nsimp made no progress') - Line 643
LeanError(message='Lean error:\nsimp made no progress') - Line 644
LeanError(message='Lean error:\nsimp made no progress') - Line 645
LeanError(message='Lean error:\nsimp made no progress') - Line 646
LeanError(message='Lean error:\nsimp made no progress') - Line 647
LeanError(message='Lean error:\nsimp made no progress') - Line 648
LeanError(message='Lean error:\nsimp made no progress') - Line 649
LeanError(message='Lean error:\nsimp made no progress') - Line 650
LeanError(message='Lean error:\nsimp made no progress') - Line 651
LeanError(message='Lean error:\nsimp made no progress') - Line 652
LeanError(message='Lean error:\ninternal exception #5') - Line 653
LeanError(message='Lean error:\ninternal exception #5') - Line 654
LeanError(message='Lean error:\ninternal exception #5') - Line 655
LeanError(message='Lean error:\ninternal exception #5') - Line 656
LeanError(message='Lean error:\ninternal exception #5') - Line 657
LeanError(message='Lean error:\ninternal exception #5') - Line 658
LeanError(message='Lean error:\ninternal exception #5') - Line 659
LeanError(message='Lean error:\ninternal exception #5') - Line 660
LeanError(message='Lean error:\ninternal exception #5') - Line 661
LeanError(message='Lean error:\ninternal exception #5') - Line 662
LeanError(message='Lean error:\ninternal exception #5') - Line 663
LeanError(message='Lean error:\ninternal exception #5') - Line 664
LeanError(message='Lean error:\ninternal exception #5') - Line 665
LeanError(message='Lean error:\ninternal exception #5') - Line 666
LeanError(message='Lean error:\ninternal exception #5') - Line 669
LeanError(message='Lean error:\ninternal exception #5') - Line 671
LeanError(message='Lean error:\ninternal exception #5') - Line 672
LeanError(message='Lean error:\ninternal exception #5') - Line 673
LeanError(message='Lean error:\ninternal exception #5') - Line 676
LeanError(message='Lean error:\ninternal exception #5') - Line 678
LeanError(message='Lean error:\ninternal exception #5') - Line 679
LeanError(message='Lean error:\ninternal exception #5') - Line 680
LeanError(message='Lean error:\nfailed to synthesize\n  CommRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 682
LeanError(message='Lean error:\ninternal exception #5') - Line 683
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 685
LeanError(message='Lean error:\ninternal exception #5') - Line 686
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nexpCoeff : x✝\nm : ℕ\n⊢ sorry = sorry ^ 2 * sorry * sorry - sorry * sorry * sorry ^ 2 ∧\n    sorry = (sorry * sorry ^ 3 * if Even m then 16 else 1) - sorry * sorry ^ 3 * if Even m then 1 else 16") - Line 688
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.9164 ≤ ?m.9162 →\n    Polynomial.natDegree ?m.9165 ≤ ?m.9161 → (?m.9164 * ?m.9165).natDegree ≤ ?m.9162 + ?m.9161 : Prop\nbut is expected to have type\n  ?m.10114 → ?m.10115 → sorry ≤ m + n : Prop') - Line 689
LeanError(message='Lean error:\nno goals to be solved') - Line 691
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 692
LeanError(message='Lean error:\nsimp made no progress') - Line 694
LeanError(message='Lean error:\ninternal exception #5') - Line 695
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 697
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 698
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 699
LeanError(message='Lean error:\ninternal exception #5') - Line 702
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 703
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_pow_le_of_le n\nhas type\n  Polynomial.natDegree ?m.11160 ≤ ?m.11158 → (?m.11160 ^ n).natDegree ≤ n * ?m.11158 : Prop\nbut is expected to have type\n  ?m.12126 → sorry ≤ n * m : Prop') - Line 704
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 705
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 706
LeanError(message='Lean error:\ninternal exception #5') - Line 707
LeanError(message='Lean error:\ninternal exception #5') - Line 709
LeanError(message='Lean error:\ninternal exception #5') - Line 710
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 711
LeanError(message='Lean error:\ntype mismatch\n  Polynomial.natDegree_mul_le_of_le\nhas type\n  Polynomial.natDegree ?m.8608 ≤ ?m.8606 →\n    Polynomial.natDegree ?m.8609 ≤ ?m.8605 → (?m.8608 * ?m.8609).natDegree ≤ ?m.8606 + ?m.8605 : Prop\nbut is expected to have type\n  ?m.9558 → ?m.9559 → sorry ≤ m + n : Prop') - Line 712
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 713
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 714
LeanError(message='Lean error:\ninternal exception #5') - Line 717
LeanError(message='Lean error:\ninternal exception #5') - Line 718
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 720
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.18233 ≈ ?m.18234\nR : Type r\nP Q : Fin 3 → R\nu v : R\nhu : sorry\nhv : sorry\n⊢ ⟦sorry⟧ = ⟦sorry⟧ ↔ sorry") - Line 728
LeanError(message='Lean error:\napplication type mismatch\n  { mp := ?m.1037, mpr := Quotient.exact ∘ congrArg (Quotient.mk ?m.1042) }\nargument\n  Quotient.exact ∘ congrArg (Quotient.mk ?m.1042)\nhas type\n  ?m.1043 = ?m.1176 → ?m.1043 ≈ ?m.1176 : Prop\nbut is expected to have type\n  P = Q → sorry : Prop') - Line 729
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 731
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 732
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 733
LeanError(message='Lean error:\ntype mismatch\n  Units.mk0 ?m.6681 ?m.6789 / Units.mk0 ?m.6816 ?m.6841\nhas type\n  ?m.6679ˣ : outParam (Type ?u.6678)\nbut is expected to have type\n  sorry : Sort u_3') - Line 738
LeanError(message='Lean error:\ninternal exception #5') - Line 742
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4934 ≠ 0 : Prop') - Line 743
LeanError(message='Lean error:\ninternal exception #5') - Line 744
LeanError(message='Lean error:\ninternal exception #5') - Line 745
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 746
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 747
LeanError(message='Lean error:\nsimp made no progress') - Line 748
LeanError(message='Lean error:\nno goals to be solved') - Line 749
LeanError(message='Lean error:\ninternal exception #5') - Line 751
LeanError(message='Lean error:\ninternal exception #5') - Line 752
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4933 ≠ 0 : Prop') - Line 753
LeanError(message='Lean error:\ninternal exception #5') - Line 754
LeanError(message='Lean error:\ninternal exception #5') - Line 755
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4933 ≠ 0 : Prop') - Line 756
LeanError(message='Lean error:\ninternal exception #5') - Line 757
LeanError(message='Lean error:\ninternal exception #5') - Line 758
LeanError(message='Lean error:\ninternal exception #5') - Line 759
LeanError(message='Lean error:\ninternal exception #5') - Line 760
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1634 is not an inductive datatype') - Line 761
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 762
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 763
LeanError(message='Lean error:\nsimp made no progress') - Line 764
LeanError(message='Lean error:\nno goals to be solved') - Line 765
LeanError(message='Lean error:\ninternal exception #5') - Line 767
LeanError(message='Lean error:\nsimp made no progress') - Line 772
LeanError(message='Lean error:\nsimp made no progress') - Line 778
LeanError(message='Lean error:\ninternal exception #5') - Line 779
LeanError(message='Lean error:\nno goals to be solved') - Line 780
LeanError(message='Lean error:\nsimp made no progress') - Line 781
LeanError(message='Lean error:\nsimp made no progress') - Line 782
LeanError(message='Lean error:\nsimp made no progress') - Line 783
LeanError(message='Lean error:\nno goals to be solved') - Line 784
LeanError(message='Lean error:\ninternal exception #5') - Line 785
LeanError(message='Lean error:\nno goals to be solved') - Line 786
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 787
LeanError(message='Lean error:\ninternal exception #5') - Line 788
LeanError(message='Lean error:\ninternal exception #5') - Line 789
LeanError(message='Lean error:\ninternal exception #5') - Line 790
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 791
LeanError(message='Lean error:\nsimp made no progress') - Line 793
LeanError(message='Lean error:\ninternal exception #5') - Line 794
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.4288 ≠ 0 : Prop') - Line 795
LeanError(message='Lean error:\nfailed to synthesize\n  HMul R R ?m.11620\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 796
LeanError(message='Lean error:\nfailed to synthesize\n  Neg R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 800
LeanError(message='Lean error:\nfailed to synthesize\n  Mul R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 802
LeanError(message='Lean error:\ninternal exception #5') - Line 804
LeanError(message='Lean error:\ninternal exception #5') - Line 805
LeanError(message='Lean error:\nsimp made no progress') - Line 806
LeanError(message='Lean error:\ninternal exception #5') - Line 807
LeanError(message='Lean error:\nsimp made no progress') - Line 810
LeanError(message='Lean error:\ninternal exception #5') - Line 811
LeanError(message='Lean error:\ninternal exception #5') - Line 812
LeanError(message='Lean error:\ntype mismatch\n  sub_ne_zero.mpr sorry\nhas type\n  ?m.10186 - ?m.10187 ≠ 0 : Prop\nbut is expected to have type\n  P y - sorry ≠ 0 : Prop') - Line 817
LeanError(message='Lean error:\nsimp made no progress') - Line 818
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 819
LeanError(message='Lean error:\ninternal exception #5') - Line 820
LeanError(message='Lean error:\nring failed: not an equality') - Line 821
LeanError(message='Lean error:\ninternal exception #5') - Line 822
LeanError(message='Lean error:\nsimp made no progress') - Line 823
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 824
LeanError(message='Lean error:\ninternal exception #5') - Line 825
LeanError(message='Lean error:\ninternal exception #5') - Line 826
LeanError(message='Lean error:\ninternal exception #5') - Line 827
LeanError(message='Lean error:\nsimp made no progress') - Line 828
LeanError(message='Lean error:\ninternal exception #5') - Line 829
LeanError(message='Lean error:\ninternal exception #5') - Line 830
LeanError(message='Lean error:\ninternal exception #5') - Line 831
LeanError(message='Lean error:\ninternal exception #5') - Line 835
LeanError(message='Lean error:\ninternal exception #5') - Line 836
LeanError(message='Lean error:\ninternal exception #5') - Line 837
LeanError(message='Lean error:\ninternal exception #5') - Line 838
LeanError(message='Lean error:\ninternal exception #5') - Line 839
LeanError(message='Lean error:\nring failed: not an equality') - Line 840
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhPz : P z = 0\n⊢ sorry = 0") - Line 841
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhQz : Q z = 0\n⊢ sorry = 0") - Line 842
LeanError(message='Lean error:\nsimp made no progress') - Line 845
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nR : Type r\ninst✝ : CommRing R\nz : Fin 3\nx✝ : Sort u_1\naddZ : x✝\nx : Fin 3\nP Q : Fin 3 → R\nhPz : P z = 0\n⊢ sorry = P x * Q z * Q z") - Line 847
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nR : Type r\ninst✝ : CommRing R\nz : Fin 3\nx✝ : Sort u_1\naddZ : x✝\nx : Fin 3\nP Q : Fin 3 → R\nhQz : Q z = 0\n⊢ sorry = -(Q x * P z) * P z") - Line 848
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nR : Type r\ninst✝ : CommRing R\nx z : Fin 3\nx✝ : Sort u_1\naddZ : x✝\nP Q : Fin 3 → R\nhx : P x * Q z ^ 2 = Q x * P z ^ 2\n⊢ sorry = 0") - Line 849
LeanError(message="Lean error:\n<input>:1:43: unexpected end of input; expected ']'") - Line 852
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 853
LeanError(message='Lean error:\ninternal exception #5') - Line 854
LeanError(message='Lean error:\nsimp made no progress') - Line 855
LeanError(message='Lean error:\ninternal exception #5') - Line 856
LeanError(message='Lean error:\ninternal exception #5') - Line 857
LeanError(message='Lean error:\ninternal exception #5') - Line 858
LeanError(message='Lean error:\ninternal exception #5') - Line 859
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz x : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhP : sorry\nhQ : sorry\nhPz : P z ≠ sorry\nhQz : Q z ≠ sorry\nhx : sorry\n⊢ sorry = sorry ^ 2") - Line 860
LeanError(message='Lean error:\nring failed: not an equality') - Line 861
LeanError(message='Lean error:\ninternal exception #5') - Line 862
LeanError(message='Lean error:\ninternal exception #5') - Line 863
LeanError(message='Lean error:\ninternal exception #5') - Line 864
LeanError(message='Lean error:\nsimp made no progress') - Line 865
LeanError(message='Lean error:\ninternal exception #5') - Line 866
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 867
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 868
LeanError(message='Lean error:\ninternal exception #5') - Line 869
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz x : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhP : sorry\nhQ : sorry\nhPz : P z ≠ sorry\nhQz : Q z ≠ sorry\nhx : sorry\n⊢ sorry = (-sorry) ^ 3") - Line 870
LeanError(message='Lean error:\ninternal exception #5') - Line 871
LeanError(message='Lean error:\ninternal exception #5') - Line 872
LeanError(message='Lean error:\nsimp made no progress') - Line 873
LeanError(message='Lean error:\ninternal exception #5') - Line 874
LeanError(message='Lean error:\ninternal exception #5') - Line 875
LeanError(message='Lean error:\ninternal exception #5') - Line 876
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 877
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz x : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhP : sorry\nhQ : sorry\nhPz : P z ≠ sorry\nhQz : Q z ≠ sorry\nhx : sorry\n⊢ sorry = sorry ^ 3") - Line 878
LeanError(message='Lean error:\ninternal exception #5') - Line 879
LeanError(message='Lean error:\ninternal exception #5') - Line 883
LeanError(message='Lean error:\ninternal exception #5') - Line 884
LeanError(message='Lean error:\ninternal exception #5') - Line 885
LeanError(message='Lean error:\ninternal exception #5') - Line 886
LeanError(message='Lean error:\ninternal exception #5') - Line 887
LeanError(message='Lean error:\ninternal exception #5') - Line 888
LeanError(message='Lean error:\nsimp made no progress') - Line 889
LeanError(message='Lean error:\nsimp made no progress') - Line 890
LeanError(message='Lean error:\nsimp made no progress') - Line 891
LeanError(message='Lean error:\nsimp made no progress') - Line 892
LeanError(message='Lean error:\nsimp made no progress') - Line 893
LeanError(message='Lean error:\nsimp made no progress') - Line 894
LeanError(message='Lean error:\nsimp made no progress') - Line 895
LeanError(message='Lean error:\nsimp made no progress') - Line 896
LeanError(message='Lean error:\nsimp made no progress') - Line 897
LeanError(message='Lean error:\nsimp made no progress') - Line 898
LeanError(message='Lean error:\nsimp made no progress') - Line 899
LeanError(message='Lean error:\nsimp made no progress') - Line 900
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 902
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 903
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 904
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 905
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 906
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 907
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nβ✝ : Sort u_1\nδ✝ : Sort u_2\nf : β✝ → δ✝\n⊢ sorry = f ∘ sorry") - Line 908
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 909
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 910
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 911
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nβ✝ : Sort u_1\nδ✝ : Sort u_2\nf : β✝ → δ✝\n⊢ sorry = f ∘ sorry") - Line 912
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry ≈ sorry\nR : Type r\ninst✝ : CommRing R\nP Q : Fin 3 → R\nh : sorry\n⊢ sorry ≈ sorry") - Line 918
LeanError(message='Lean error:\ninternal exception #5') - Line 919
LeanError(message='Lean error:\ninternal exception #5') - Line 920
LeanError(message='Lean error:\ninternal exception #5') - Line 921
LeanError(message="Lean error:\nunknown free variable '_fvar.60'") - Line 925
LeanError(message="Lean error:\nunknown free variable '_fvar.60'") - Line 926
LeanError(message='Lean error:\ninternal exception #5') - Line 927
LeanError(message='Lean error:\ninternal exception #5') - Line 928
LeanError(message='Lean error:\ninternal exception #5') - Line 930
LeanError(message='Lean error:\ninternal exception #5') - Line 931
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 932
LeanError(message='Lean error:\nrcases tactic failed: hP : sorry is not an inductive datatype') - Line 940
LeanError(message='Lean error:\ninternal exception #5') - Line 941
LeanError(message='Lean error:\ninternal exception #5') - Line 942
LeanError(message='Lean error:\ninternal exception #5') - Line 943
LeanError(message='Lean error:\ninternal exception #5') - Line 944
LeanError(message='Lean error:\ninternal exception #5') - Line 945
LeanError(message='Lean error:\ninternal exception #5') - Line 946
LeanError(message='Lean error:\ninternal exception #5') - Line 947
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 949
LeanError(message='Lean error:\nno goals to be solved') - Line 951
LeanError(message='Lean error:\nno goals to be solved') - Line 952
LeanError(message='Lean error:\ntype mismatch\n  if hy : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.11124 : Sort ?u.11123\nbut is expected to have type\n  sorry = ⟦![1, 1, 0]⟧ : Prop') - Line 953
LeanError(message='Lean error:\ntype mismatch\n  if hx : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.10860 : Sort ?u.10859\nbut is expected to have type\n  sorry = ⟦![sorry, sorry, 1]⟧ : Prop') - Line 954
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 955
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Sort u_1\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhP : ¬sorry\n⊢ sorry = 0") - Line 967
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u_1\nz : Fin 3\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhPz : P z = 0\n⊢ sorry = 0") - Line 968
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u_1\nz : Fin 3\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhP : sorry\nhPz : P z ≠ sorry\n⊢ sorry = sorry") - Line 970
LeanError(message='Lean error:\nsimp made no progress') - Line 971
LeanError(message='Lean error:\ntype mismatch\n  if hP : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.2663 : Sort ?u.2662\nbut is expected to have type\n  sorry = sorry : Prop') - Line 972
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nF : Sort u_1\nx✝ : Sort u_2\ntoAffine : x✝\nP Q : Fin 3 → F\nh : sorry\n⊢ sorry = sorry") - Line 973
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 974
LeanError(message='Lean error:\n<input>:1:68: expected end of input') - Line 975
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 976
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 982
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 983
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 988
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.18233 ≈ ?m.18234\nR : Type r\nP Q : Fin 3 → R\nu v : R\nhu : sorry\nhv : sorry\n⊢ ⟦sorry⟧ = ⟦sorry⟧ ↔ sorry") - Line 996
LeanError(message='Lean error:\napplication type mismatch\n  { mp := ?m.1037, mpr := Quotient.exact ∘ congrArg (Quotient.mk ?m.1042) }\nargument\n  Quotient.exact ∘ congrArg (Quotient.mk ?m.1042)\nhas type\n  ?m.1043 = ?m.1176 → ?m.1043 ≈ ?m.1176 : Prop\nbut is expected to have type\n  P = Q → sorry : Prop') - Line 997
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 999
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 1000
LeanError(message='Lean error:\ntype mismatch\n  Units.mk0 ?m.4740 ?m.4848 / Units.mk0 ?m.4875 ?m.4900\nhas type\n  ?m.4738ˣ : outParam (Type ?u.4737)\nbut is expected to have type\n  sorry : Sort u_3') - Line 1006
LeanError(message='Lean error:\ninternal exception #5') - Line 1010
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.5115 ≠ 0 : Prop') - Line 1011
LeanError(message='Lean error:\ninternal exception #5') - Line 1012
LeanError(message='Lean error:\ninternal exception #5') - Line 1013
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 1014
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 1015
LeanError(message='Lean error:\nsimp made no progress') - Line 1016
LeanError(message='Lean error:\nno goals to be solved') - Line 1017
LeanError(message='Lean error:\ninternal exception #5') - Line 1020
LeanError(message='Lean error:\ninternal exception #5') - Line 1021
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.3437 ≠ 0 : Prop') - Line 1022
LeanError(message='Lean error:\ninternal exception #5') - Line 1023
LeanError(message='Lean error:\ninternal exception #5') - Line 1024
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.3702 ≠ 0 : Prop') - Line 1025
LeanError(message='Lean error:\ninternal exception #5') - Line 1026
LeanError(message='Lean error:\ninternal exception #5') - Line 1027
LeanError(message='Lean error:\ninternal exception #5') - Line 1028
LeanError(message='Lean error:\ninternal exception #5') - Line 1029
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1634 is not an inductive datatype') - Line 1030
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 1031
LeanError(message="Lean error:\nunknown free variable '_fvar.544'") - Line 1032
LeanError(message='Lean error:\nsimp made no progress') - Line 1033
LeanError(message='Lean error:\nno goals to be solved') - Line 1034
LeanError(message='Lean error:\ninternal exception #5') - Line 1036
LeanError(message='Lean error:\ntype mismatch\n  sorry / sorry\nhas type\n  ?m.1676 : outParam (Type ?u.1650)\nbut is expected to have type\n  sorry : Sort u_3') - Line 1039
LeanError(message='Lean error:\nsimp made no progress') - Line 1045
LeanError(message='Lean error:\ninternal exception #5') - Line 1046
LeanError(message='Lean error:\nno goals to be solved') - Line 1047
LeanError(message='Lean error:\nsimp made no progress') - Line 1048
LeanError(message='Lean error:\nsimp made no progress') - Line 1049
LeanError(message='Lean error:\nsimp made no progress') - Line 1050
LeanError(message='Lean error:\nno goals to be solved') - Line 1051
LeanError(message='Lean error:\ninternal exception #5') - Line 1052
LeanError(message='Lean error:\nno goals to be solved') - Line 1053
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 1054
LeanError(message='Lean error:\ninternal exception #5') - Line 1055
LeanError(message='Lean error:\ninternal exception #5') - Line 1056
LeanError(message='Lean error:\ninternal exception #5') - Line 1057
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nf : ?m.1406 → ?m.1407\nhf : Function.Injective f\n⊢ sorry ↔ sorry") - Line 1058
LeanError(message='Lean error:\nsimp made no progress') - Line 1060
LeanError(message='Lean error:\ninternal exception #5') - Line 1061
LeanError(message='Lean error:\napplication type mismatch\n  div_self hPz\nargument\n  hPz\nhas type\n  P z ≠ sorry : Prop\nbut is expected to have type\n  ?m.1388 ≠ 0 : Prop') - Line 1062
LeanError(message='Lean error:\nfailed to synthesize\n  HMul R R ?m.7915\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1063
LeanError(message='Lean error:\nfailed to synthesize\n  Neg R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1067
LeanError(message='Lean error:\nfailed to synthesize\n  Mul R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1068
LeanError(message='Lean error:\nfailed to synthesize\n  Mul R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1069
LeanError(message='Lean error:\ninternal exception #5') - Line 1071
LeanError(message='Lean error:\ninternal exception #5') - Line 1072
LeanError(message="Lean error:\nunknown free variable '_fvar.84'") - Line 1073
LeanError(message='Lean error:\ninternal exception #5') - Line 1074
LeanError(message='Lean error:\nsimp made no progress') - Line 1077
LeanError(message='Lean error:\ninternal exception #5') - Line 1078
LeanError(message='Lean error:\ninternal exception #5') - Line 1079
LeanError(message='Lean error:\ntype mismatch\n  sub_ne_zero.mpr sorry\nhas type\n  ?m.8315 - ?m.8316 ≠ 0 : Prop\nbut is expected to have type\n  P y - sorry ≠ 0 : Prop') - Line 1084
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1085
LeanError(message='Lean error:\ninternal exception #5') - Line 1086
LeanError(message='Lean error:\nsimp made no progress') - Line 1087
LeanError(message='Lean error:\ninternal exception #5') - Line 1088
LeanError(message='Lean error:\napplication type mismatch\n  eq_zero_of_ne_zero_of_mul_right_eq_zero hPz\nargument\n  hPz\nhas type\n  P z ≠ 0 : Prop\nbut is expected to have type\n  ?m.1896 ≠ 0 : Prop') - Line 1089
LeanError(message='Lean error:\nring failed: not an equality') - Line 1090
LeanError(message='Lean error:\ninternal exception #5') - Line 1091
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1092
LeanError(message='Lean error:\ninternal exception #5') - Line 1093
LeanError(message='Lean error:\nsimp made no progress') - Line 1094
LeanError(message='Lean error:\ninternal exception #5') - Line 1095
LeanError(message='Lean error:\ninternal exception #5') - Line 1096
LeanError(message='Lean error:\ninternal exception #5') - Line 1097
LeanError(message='Lean error:\ninternal exception #5') - Line 1098
LeanError(message='Lean error:\ninternal exception #5') - Line 1099
LeanError(message='Lean error:\nsimp made no progress') - Line 1100
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1102
LeanError(message='Lean error:\ninternal exception #5') - Line 1103
LeanError(message='Lean error:\ninternal exception #5') - Line 1104
LeanError(message='Lean error:\ninternal exception #5') - Line 1108
LeanError(message='Lean error:\ninternal exception #5') - Line 1109
LeanError(message='Lean error:\ninternal exception #5') - Line 1110
LeanError(message='Lean error:\ninternal exception #5') - Line 1111
LeanError(message='Lean error:\nring failed: not an equality') - Line 1112
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhPz : P z = 0\n⊢ sorry = 0") - Line 1113
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhQz : Q z = 0\n⊢ sorry = 0") - Line 1114
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1117
LeanError(message='Lean error:\ninternal exception #5') - Line 1118
LeanError(message='Lean error:\nsimp made no progress') - Line 1119
LeanError(message='Lean error:\ninternal exception #5') - Line 1120
LeanError(message='Lean error:\ninternal exception #5') - Line 1121
LeanError(message='Lean error:\ninternal exception #5') - Line 1122
LeanError(message='Lean error:\napplication type mismatch\n  mul_ne_zero ?m.2032 hQz\nargument\n  hQz\nhas type\n  Q z ≠ 0 : Prop\nbut is expected to have type\n  ?m.1015 ≠ 0 : Prop') - Line 1123
LeanError(message='Lean error:\nring failed: not an equality') - Line 1126
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1127
LeanError(message='Lean error:\ninternal exception #5') - Line 1128
LeanError(message='Lean error:\nsimp made no progress') - Line 1129
LeanError(message='Lean error:\ninternal exception #5') - Line 1130
LeanError(message='Lean error:\ninternal exception #5') - Line 1131
LeanError(message='Lean error:\ninternal exception #5') - Line 1132
LeanError(message='Lean error:\napplication type mismatch\n  mul_ne_zero ?m.2175 hQz\nargument\n  hQz\nhas type\n  Q z ≠ 0 : Prop\nbut is expected to have type\n  ?m.1158 ≠ 0 : Prop') - Line 1133
LeanError(message='Lean error:\nring failed: not an equality') - Line 1134
LeanError(message='Lean error:\ninternal exception #5') - Line 1135
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1136
LeanError(message='Lean error:\ninternal exception #5') - Line 1137
LeanError(message='Lean error:\nsimp made no progress') - Line 1138
LeanError(message='Lean error:\ninternal exception #5') - Line 1139
LeanError(message='Lean error:\ninternal exception #5') - Line 1140
LeanError(message='Lean error:\ninternal exception #5') - Line 1141
LeanError(message='Lean error:\ninternal exception #5') - Line 1142
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz x : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhP : sorry\nhQ : sorry\nhPz : P z ≠ sorry\nhQz : Q z ≠ sorry\nhx : sorry\n⊢ sorry = -sorry") - Line 1143
LeanError(message='Lean error:\ninternal exception #5') - Line 1144
LeanError(message='Lean error:\ninternal exception #5') - Line 1145
LeanError(message='Lean error:\nsimp made no progress') - Line 1146
LeanError(message='Lean error:\nsimp made no progress') - Line 1147
LeanError(message='Lean error:\ninternal exception #5') - Line 1148
LeanError(message='Lean error:\ninternal exception #5') - Line 1149
LeanError(message='Lean error:\nfailed to synthesize\n  Add R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1150
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u\nz x : Fin 3\nx✝ : Sort u_1\naddU : x✝\nP Q : Fin 3 → F\nhP : sorry\nhQ : sorry\nhPz : P z ≠ sorry\nhQz : Q z ≠ sorry\nhx : sorry\n⊢ sorry = sorry") - Line 1151
LeanError(message='Lean error:\ninternal exception #5') - Line 1152
LeanError(message='Lean error:\ninternal exception #5') - Line 1156
LeanError(message='Lean error:\ninternal exception #5') - Line 1157
LeanError(message='Lean error:\ninternal exception #5') - Line 1158
LeanError(message='Lean error:\ninternal exception #5') - Line 1159
LeanError(message='Lean error:\ninternal exception #5') - Line 1160
LeanError(message='Lean error:\ninternal exception #5') - Line 1161
LeanError(message='Lean error:\nsimp made no progress') - Line 1162
LeanError(message='Lean error:\nsimp made no progress') - Line 1163
LeanError(message='Lean error:\nsimp made no progress') - Line 1164
LeanError(message='Lean error:\nsimp made no progress') - Line 1165
LeanError(message='Lean error:\nsimp made no progress') - Line 1166
LeanError(message='Lean error:\nsimp made no progress') - Line 1167
LeanError(message='Lean error:\nsimp made no progress') - Line 1168
LeanError(message='Lean error:\nsimp made no progress') - Line 1169
LeanError(message='Lean error:\nsimp made no progress') - Line 1170
LeanError(message='Lean error:\nsimp made no progress') - Line 1171
LeanError(message='Lean error:\nsimp made no progress') - Line 1172
LeanError(message='Lean error:\nsimp made no progress') - Line 1173
LeanError(message='Lean error:\nsimp made no progress') - Line 1174
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1175
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1177
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1178
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1179
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1180
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nβ✝ : Sort u_1\nδ✝ : Sort u_2\nf : β✝ → δ✝\n⊢ sorry = f ∘ sorry") - Line 1181
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1182
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1183
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nx✝ : Sort u_1\nf : x✝\n⊢ sorry = sorry") - Line 1184
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⇑?f\nβ✝ : Sort u_1\nδ✝ : Sort u_2\nf : β✝ → δ✝\n⊢ sorry = f ∘ sorry") - Line 1185
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry ≈ sorry\nR : Type r\ninst✝ : CommRing R\nP Q : Fin 3 → R\nh : sorry\n⊢ sorry ≈ sorry") - Line 1191
LeanError(message='Lean error:\ninternal exception #5') - Line 1192
LeanError(message='Lean error:\ninternal exception #5') - Line 1193
LeanError(message='Lean error:\ninternal exception #5') - Line 1196
LeanError(message='Lean error:\ninternal exception #5') - Line 1197
LeanError(message="Lean error:\nunknown free variable '_fvar.60'") - Line 1198
LeanError(message='Lean error:\nsimp made no progress') - Line 1199
LeanError(message='Lean error:\ninternal exception #5') - Line 1200
LeanError(message='Lean error:\ninternal exception #5') - Line 1203
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 1204
LeanError(message='Lean error:\nrcases tactic failed: hP : sorry is not an inductive datatype') - Line 1212
LeanError(message='Lean error:\ninternal exception #5') - Line 1213
LeanError(message='Lean error:\ninternal exception #5') - Line 1216
LeanError(message='Lean error:\ninternal exception #5') - Line 1217
LeanError(message='Lean error:\ninternal exception #5') - Line 1218
LeanError(message='Lean error:\ninternal exception #5') - Line 1219
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 1221
LeanError(message='Lean error:\nno goals to be solved') - Line 1223
LeanError(message='Lean error:\nno goals to be solved') - Line 1224
LeanError(message='Lean error:\ntype mismatch\n  if hy : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.8782 : Sort ?u.8781\nbut is expected to have type\n  sorry = ⟦![0, 1, 0]⟧ : Prop') - Line 1225
LeanError(message='Lean error:\ntype mismatch\n  if hx : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.8678 : Sort ?u.8677\nbut is expected to have type\n  sorry = ⟦![sorry, sorry, 1]⟧ : Prop') - Line 1226
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 1227
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Sort u_1\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhP : ¬sorry\n⊢ sorry = 0") - Line 1239
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u_1\nz : Fin 3\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhPz : P z = 0\n⊢ sorry = 0") - Line 1240
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u_1\nz : Fin 3\nx✝ : Sort u_2\ntoAffine : x✝\nP : Fin 3 → F\nhP : sorry\nhPz : P z ≠ sorry\n⊢ sorry = sorry") - Line 1242
LeanError(message='Lean error:\nsimp made no progress') - Line 1243
LeanError(message='Lean error:\ntype mismatch\n  if hP : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.2663 : Sort ?u.2662\nbut is expected to have type\n  sorry = sorry : Prop') - Line 1244
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nF : Sort u_1\nx✝ : Sort u_2\ntoAffine : x✝\nP Q : Fin 3 → F\nh : sorry\n⊢ sorry = sorry") - Line 1245
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 1246
LeanError(message='Lean error:\n<input>:1:68: expected end of input') - Line 1247
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  F : Sort u_1') - Line 1248
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 1254
LeanError(message='Lean error:\nrcases tactic failed: P : sorry is not an inductive datatype') - Line 1255
LeanError(message='Lean error:\ntype mismatch\n  Subtype.eq (funext fun pt => ?m.6586)\nhas type\n  ?m.6568 = ?m.6569 : Prop\nbut is expected to have type\n  s = 0 : Prop') - Line 1264
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  IsUnit ?f\nR : Type u_1\nx✝ : Sort u_2\ntildeInModuleCat : x✝\nx : sorry\nr : sorry\n⊢ IsUnit sorry") - Line 1266
LeanError(message='Lean error:\n<input>:1:48: expected end of input') - Line 1269
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 1270
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Category.{?u.1958, ?u.1957} ?m.1959') - Line 1277
LeanError(message='Lean error:\nno goals to be solved') - Line 1280
LeanError(message='Lean error:\ninternal exception #5') - Line 1282
LeanError(message='Lean error:\ninternal exception #5') - Line 1283
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1284
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nQ W : {R S : Type u} → [inst : CommRing R] → [inst_1 : CommRing S] → (R →+* S) → Prop\nx✝ : Sort u_1\ntargetAffineLocally : x✝\nhQW : ∀ {R S : Type u} [inst : CommRing R] [inst_1 : CommRing S] {f : R →+* S}, Q f → W f\n⊢ sorry ≤ sorry") - Line 1285
LeanError(message='Lean error:\nsimp made no progress') - Line 1289
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝¹ : Sort u_1\nScheme : x✝¹\nx✝ : Sort u_2\nHasAffineProperty : x✝\nIsAffineHom P : sorry\nhA : sorry\n⊢ sorry") - Line 1290
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝¹ : Sort u_1\nP : x✝¹\nScheme : Type u_2\nx✝ : Sort u_3\ntopologically : x✝\nhP : {α β : Type u} → [inst : TopologicalSpace α] → [inst_1 : TopologicalSpace β] → α ≃ₜ β → sorry\n⊢ sorry ≤ sorry") - Line 1300
LeanError(message='Lean error:\ninternal exception #5') - Line 1308
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1318
LeanError(message='Lean error:\ninternal exception #5') - Line 1322
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1323
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1324
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1325
LeanError(message='Lean error:\ninternal exception #5') - Line 1326
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 1327
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nScheme : ?m.13\nX : sorry\nY : sorry\nx✝ : Sort u_1\nIsOpenImmersion : x✝\nf : sorry\n⊢ sorry ↔ Topology.IsOpenEmbedding sorry ∧ ∀ (x : ?m.10001), CategoryTheory.IsIso sorry") - Line 1328
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  α✝') - Line 1329
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.MorphismProperty obj✝') - Line 1331
LeanError(message='Lean error:\ninternal exception #5') - Line 1334
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun h => ?m.5559, mpr := fun x => ?m.5565 }\nhas type\n  ?m.5552 ↔ ?m.5553 : Prop\nbut is expected to have type\n  sorry ↔ ∃ R f, Function.Surjective sorry : Prop') - Line 1345
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.15346 is not an inductive datatype') - Line 1350
LeanError(message='Lean error:\ntype mismatch\n  { mp := sorry, mpr := fun hf => ?m.11815 }\nhas type\n  ?m.11806 ↔ ?m.11807 : Prop\nbut is expected to have type\n  IsNilpotent f ↔ sorry = ⊥ : Prop') - Line 1351
LeanError(message="Lean error:\ntactic 'rewrite' failed, pattern is a metavariable\n  ?m.5197 ?m.5202\nfrom equation\n  ?m.5197 ?m.5202 = ?m.5197 (CategoryTheory.CategoryStruct.comp ?m.5202 ?m.5511)\nScheme : ?m.381\nX : sorry\nY : sorry\nf : sorry\nx✝ : Sort u_1\nQuasiCompact : x✝\n⊢ sorry ↔ sorry") - Line 1362
LeanError(message="Lean error:\n<input>:1:42: expected '|' or '|ₘ'") - Line 1365
LeanError(message='Lean error:\n<input>:2:9: expected end of input') - Line 1367
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.25996 is not an inductive datatype') - Line 1369
LeanError(message='Lean error:\nno goals to be solved') - Line 1371
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1377
LeanError(message='Lean error:\nno goals to be solved') - Line 1384
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1385
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 1392
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1393
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 1397
LeanError(message='Lean error:\nno goals to be solved') - Line 1410
LeanError(message='Lean error:\nno goals to be solved') - Line 1412
LeanError(message='Lean error:\nno goals to be solved') - Line 1417
LeanError(message='Lean error:\nno goals to be solved') - Line 1419
LeanError(message='Lean error:\ninternal exception #5') - Line 1423
LeanError(message='Lean error:\n<input>:1:34: expected end of input') - Line 1426
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.MorphismProperty.RespectsIso ?P\nwith\n  sorry\nScheme : ?m.795\nX : sorry\nY : sorry\nf : sorry\n𝒰 : sorry\nAffineTargetMorphismProperty : Sort u_1\nx✝ : Sort u_2\nIsAffine : x✝\nP : AffineTargetMorphismProperty\nh₁ : sorry\nh₂ : sorry\n⊢ sorry") - Line 1431
LeanError(message='Lean error:\ninternal exception #5') - Line 1439
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Limits.pullbackSymmetry (CategoryTheory.Limits.pullback.fst f g) ?m.14407.8393 ≪≫\n    CategoryTheory.Limits.pullbackRightPullbackFstIso f g ?m.14407.8393 ≪≫\n      ?m.14407.12078 ≪≫\n        (CategoryTheory.Limits.pullbackRightPullbackFstIso sorry g (CategoryTheory.Limits.pullback.snd f sorry)).symm\nhas type\n  CategoryTheory.Limits.pullback (CategoryTheory.Limits.pullback.fst f g) ?m.14407.8393 ≅\n    CategoryTheory.Limits.pullback (CategoryTheory.Limits.pullback.snd f sorry)\n      (CategoryTheory.Limits.pullback.fst sorry g) : Type ?u.14407.23361\nbut is expected to have type\n  ?m.6919 (CategoryTheory.Limits.pullback.fst f g) : Prop') - Line 1446
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  α✝') - Line 1450
LeanError(message='Lean error:\ninternal exception #5') - Line 1451
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV✝ : Type u_1\nX : V✝\nx✝¹ : Sort u_2\nSpec : x✝¹\nx✝ : Sort u_3\nIsClosedImmersion : x✝\nR : CommRingCat\nf : X ⟶ sorry\n⊢ sorry ↔ ∃ I e, f = CategoryTheory.CategoryStruct.comp e.hom ?m.4980") - Line 1460
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 1462
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1463
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1465
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1469
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  α✝') - Line 1470
LeanError(message='Lean error:\ninternal exception #5') - Line 1472
LeanError(message='Lean error:\ninternal exception #5') - Line 1478
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1479
LeanError(message="Lean error:\n<input>:1:30: expected ')', ',' or ':'") - Line 1481
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 1483
LeanError(message='Lean error:\n<input>:1:31: expected end of input') - Line 1485
LeanError(message='Lean error:\ninternal exception #5') - Line 1490
LeanError(message='Lean error:\ninternal exception #5') - Line 1492
LeanError(message='Lean error:\ninternal exception #5') - Line 1493
LeanError(message='Lean error:\ninternal exception #5') - Line 1494
LeanError(message='Lean error:\n<input>:1:63: expected token') - Line 1496
LeanError(message='Lean error:\ninternal exception #5') - Line 1497
LeanError(message='Lean error:\nno goals to be solved') - Line 1498
LeanError(message='Lean error:\ninternal exception #5') - Line 1500
LeanError(message='Lean error:\n<input>:3:6: expected end of input') - Line 1502
LeanError(message='Lean error:\nno goals to be solved') - Line 1503
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 1504
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1505
LeanError(message='Lean error:\nfailed to synthesize\n  AlgebraicGeometry.HasAffineProperty P ?Q\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1508
LeanError(message="Lean error:\n<input>:1:19: expected ')'") - Line 1509
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 1510
LeanError(message='Lean error:\ninternal exception #5') - Line 1511
LeanError(message='Lean error:\ninternal exception #5') - Line 1512
LeanError(message='Lean error:\ninternal exception #5') - Line 1513
LeanError(message='Lean error:\ninternal exception #5') - Line 1514
LeanError(message='Lean error:\ninternal exception #5') - Line 1515
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.49112 = ⊤\nScheme : ?m.46907\nW : sorry\nX : sorry\nY : sorry\nZ : sorry\nf : sorry\ng : sorry\nx✝ : Sort u_1\ndiagonalCoverDiagonalRange : x✝\nhf : Function.Injective sorry\n⊢ sorry = ⊤") - Line 1518
LeanError(message="Lean error:\ntactic 'constructor' failed, target is not an inductive datatype\nScheme : ?m.46907\nW : sorry\nX : sorry\nY : sorry\nZ : sorry\nf : sorry\ng : sorry\nx✝ : Sort u_1\nIsSeparated : x✝\nhf : Function.Injective sorry\n⊢ sorry") - Line 1521
LeanError(message='Lean error:\ninternal exception #5') - Line 1527
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1530
LeanError(message='Lean error:\ninternal exception #5') - Line 1531
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 1537
LeanError(message="Lean error:\ntactic 'rewrite' failed, pattern is a metavariable\n  ?m.2670\nfrom equation\n  ?m.2670 = CategoryTheory.MorphismProperty.universally ?m.2670\nα✝ : Type u_1\nUniversallyClosed : α✝\nx✝ : Sort u_2\ntopologically : x✝\nQuasiCompact : α✝\n⊢ UniversallyClosed = sorry ⊓ QuasiCompact") - Line 1542
LeanError(message="Lean error:\napplication type mismatch\n  Eq.mpr ?m.15419\nargument\n  ?m.15419\nhas type\n  TopologicalSpace.IsTopologicalBasis (SetLike.coe '' Set.range sorry) =\n    TopologicalSpace.IsTopologicalBasis (Set.range fun r => ↑(ProjectiveSpectrum.basicOpen sorry r)) : Prop\nbut is expected to have type\n  ?α = ?β : Prop") - Line 1547
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1548
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝²\nx✝² : Sort u_3\nbasicOpenToSpec : x✝²\nx✝¹ : Sort u_4\nawayToSection : x✝¹\nx✝ : Sort u_5\nbasicOpen : x✝\n⊢ sorry = CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry)") - Line 1549
LeanError(message='Lean error:\ninternal exception #5') - Line 1551
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝¹ : Sort u_3\nawayι : x✝¹\nx✝ : Sort u_4\ntoSpecZero : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 1552
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (HomogeneousLocalization.Away 𝒜 f) ⟶ ?m.19236 𝒜 _fvar.15597 _fvar.15734 g_deg _fvar.15913 hx') - Line 1553
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nx✝¹ : Sort u_3\nbasicOpenToSpec : x✝¹\nx✝ : Sort u_4\nProj : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 1554
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_3\nawayι : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 1555
LeanError(message='Lean error:\ninternal exception #5') - Line 1557
LeanError(message='Lean error:\ninternal exception #5') - Line 1558
LeanError(message='Lean error:\ninternal exception #5') - Line 1559
LeanError(message='Lean error:\ninternal exception #5') - Line 1560
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'TopCat.carrier'.") - Line 1562
LeanError(message='Lean error:\nno goals to be solved') - Line 1573
LeanError(message='Lean error:\ninternal exception #5') - Line 1581
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CommRingCat.of (HomogeneousLocalization 𝒜 (Submonoid.powers (?m.22738 _fvar.19946 _fvar.20092 _fvar.20239 f x))) ⟶\n    ?m.22739 _fvar.19946 _fvar.20092 _fvar.20239 f x hx') - Line 1585
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ a, HomogeneousLocalization.mk a = sorry) →\n    sorry = (IsLocalization.map (?m.43899 _fvar.19946 _fvar.20092 _fvar.20239 f x p) (RingHom.id A) ⋯) sorry\nA : Type u_2\ninst✝ : CommRing A\nf : A\nx : ?m.43897 _fvar.19946 _fvar.20092 _fvar.20239 f\np : ?m.43898 _fvar.19946 _fvar.20092 _fvar.20239 f x\n⊢ sorry = (IsLocalization.map (?m.43899 _fvar.19946 _fvar.20092 _fvar.20239 f x p) (RingHom.id A) ⋯) sorry") - Line 1586
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nR : Type u_1\nA : Type u_2\ninst✝³ : CommRing R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : ℕ → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx✝ : Sort u_3\nawayToΓ : x✝\nf : ?m.22448 _fvar.19946 _fvar.20092 _fvar.20239\nx : ?m.22449 _fvar.19946 _fvar.20092 _fvar.20239 f\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry =\n    CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom (HomogeneousLocalization.mapId 𝒜 ⋯))\n      (CategoryTheory.CategoryStruct.comp sorry sorry)") - Line 1587
LeanError(message='Lean error:\n<input>:1:38: expected token') - Line 1588
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.26915\nargument\n  ?m.26915\nhas type\n  CategoryTheory.IsIso sorry = ?m.26898 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 1590
LeanError(message='Lean error:\ninternal exception #5') - Line 1594
LeanError(message='Lean error:\napplication type mismatch\n  HomogeneousLocalization.mapId 𝒜 ⋯\nargument\n  Submonoid.powers_le.mpr sorry\nhas type\n  Submonoid.powers ?m.31357 ≤ ?m.31358 : Prop\nbut is expected to have type\n  ?m.31193 ≤ ?m.31194 : Prop') - Line 1595
LeanError(message='Lean error:\ninternal exception #5') - Line 1598
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.16398 → sorry = z\nx✝ : Sort u_1\nhomogeneousLocalizationToStalk : x✝\nx : ?m.16380\nz : ?m.16381 x\n⊢ sorry = z") - Line 1608
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ a, Quotient.mk'' a = sorry) → sorry = z\nx✝ : Sort u_1\nstalkToFiberRingHom : x✝\nx : ?m.16380\nz : ?m.16381 x\n⊢ sorry = z") - Line 1609
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5063 _fvar.3078 s') - Line 1613
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\ncase h\nR : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : ℕ → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx✝ : Sort u_3\nvanishingIdeal : x✝\nt : Set (ProjectiveSpectrum 𝒜)\nf : A\n⊢ f ∈ sorry ↔ f ∈ {f | ∀ x ∈ t, f ∈ x.asHomogeneousIdeal}") - Line 1614
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.10058 ∈ ?m.10057\nR : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : ℕ → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx✝ : Sort u_3\nvanishingIdeal : x✝\nt : Set (ProjectiveSpectrum 𝒜)\nf : A\n⊢ f ∈ sorry ↔ ∀ x ∈ t, f ∈ x.asHomogeneousIdeal") - Line 1615
LeanError(message='Lean error:\ninternal exception #5') - Line 1619
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.10101 : Sort ?u.10100\nbut is expected to have type\n  sorry () = ⊤ : Prop') - Line 1633
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 1640
LeanError(message="Lean error:\nunknown free variable '_fvar.6404'") - Line 1644
LeanError(message='Lean error:\ninternal exception #5') - Line 1647
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nR : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : ℕ → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx✝ : Sort u_3\nvanishingIdeal : x✝\nt t' : Set (ProjectiveSpectrum 𝒜)\n⊢ sorry ⊔ sorry ≤ sorry") - Line 1652
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 1653
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 1654
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a ↔ ∃ s, Z = sorry\nError: application type mismatch\n  @?m.10278 R A inst✝³ inst✝² inst✝¹ 𝒜 inst✝ zeroLocus\nargument\n  zeroLocus\nhas type\n  x✝ : Sort u_3\nbut is expected to have type\n  ?m.10277 𝒜 : Sort u_3\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nR : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : ℕ → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx✝ : Sort u_3\nzeroLocus : x✝\nZ : Set (ProjectiveSpectrum 𝒜)\n⊢ IsClosed Z ↔ ∃ s, Z = sorry") - Line 1655
LeanError(message='Lean error:\ninternal exception #5') - Line 1656
LeanError(message='Lean error:\n<input>:2:47: expected end of input') - Line 1657
LeanError(message='Lean error:\ninternal exception #5') - Line 1658
LeanError(message='Lean error:\ninternal exception #5') - Line 1666
LeanError(message='Lean error:\ninternal exception #5') - Line 1667
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 1670
LeanError(message='Lean error:\ninternal exception #5') - Line 1673
LeanError(message='Lean error:\nno goals to be solved') - Line 1677
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a₁ = ?a₂\nwith\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.yoneda.map sorry) sorry = sorry\nι : Sort u_5\nx✝¹ : Sort u_1\ntoGlued : x✝¹\nx✝ : Sort u_2\nyonedaGluedToSheaf : x✝\ni : ι\n⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.yoneda.map sorry) sorry = sorry") - Line 1680
LeanError(message='Lean error:\ninternal exception #5') - Line 1681
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2492') - Line 1688
LeanError(message='Lean error:\ninternal exception #5') - Line 1689
LeanError(message='Lean error:\nrcases tactic failed: a✝ : ?m.2120 is not an inductive datatype') - Line 1695
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (∀ (a : ?m.4895) (b : ?m.4896 a), ?m.4897 a b) ↔ ∀ (a : ?m.4895) (b : ?m.4896 a), ?m.4898 a b\nwith\n  S ∈ sorry ↔ ∀ x ∈ sorry, ∃ V f, sorry ∧ x ∈ sorry\nScheme : ?m.20\nX : sorry\nx✝ : Sort u_1\ngrothendieckTopology : x✝\nU : sorry\nS : sorry\n⊢ S ∈ sorry ↔ ∀ x ∈ sorry, ∃ V f, sorry ∧ x ∈ sorry") - Line 1698
LeanError(message='Lean error:\ntype mismatch\n  funext₂ fun x x_1 => ?m.2152\nhas type\n  ?m.2139 = ?m.2140 : Prop\nbut is expected to have type\n  sorry = P : Prop') - Line 1699
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  CategoryTheory.CategoryStruct.comp sorry sorry = 0\nx✝ : Sort u_2\nobjD : x✝\nn : ℕ\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = 0") - Line 1706
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?γ₁ = ?γ₂\nwith\n  x = y\nx✝ : Sort u_2\nSimplicialThickening : x✝\nJ : Type u_1\ninst✝ : LinearOrder J\ni : sorry\nj : sorry\nx y : i ⟶ j\nh : ∀ (t : ?m.4259 i j x y), t ∈ sorry ↔ t ∈ sorry\n⊢ x = y") - Line 1709
LeanError(message='Lean error:\nno goals to be solved') - Line 1713
LeanError(message='Lean error:\nno goals to be solved') - Line 1714
LeanError(message='Lean error:\nsimp made no progress') - Line 1715
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (ChainComplex.of ?X ?d ?sq).d (?j + 1) ?j = ?d ?j\nwith\n  sorry = ∑ i, (-1) ^ ↑i • X.δ i\nC : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nn : ℕ\n⊢ sorry = ∑ i, (-1) ^ ↑i • X.δ i") - Line 1717
LeanError(message='Lean error:\nno goals to be solved') - Line 1720
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?F = ?G\nwith\n  sorry.comp (F.mapHomologicalComplex (?m.4731 F)) = ((CategoryTheory.SimplicialObject.whiskering C D).obj F).comp sorry\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_6, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\nx✝ : Sort u_4\nalternatingFaceMapComplex : x✝\nD : Type u_3\ninst✝² : CategoryTheory.Category.{u_5, u_3} D\ninst✝¹ : CategoryTheory.Preadditive D\nF : CategoryTheory.Functor C D\ninst✝ : F.Additive\n⊢ sorry.comp (F.mapHomologicalComplex (?m.4731 F)) = ((CategoryTheory.SimplicialObject.whiskering C D).obj F).comp sorry") - Line 1722
LeanError(message='Lean error:\nsimp made no progress') - Line 1723
LeanError(message='Lean error:\nno goals to be solved') - Line 1726
LeanError(message='Lean error:\nsimp made no progress') - Line 1727
LeanError(message='Lean error:\nsimp made no progress') - Line 1728
LeanError(message='Lean error:\ninternal exception #5') - Line 1730
LeanError(message='Lean error:\ninternal exception #5') - Line 1739
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  TopologicalSpace ?m.4863') - Line 1741
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1038') - Line 1743
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1038') - Line 1744
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1038') - Line 1746
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1038') - Line 1747
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 1749
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 1750
LeanError(message='Lean error:\nsimp made no progress') - Line 1752
LeanError(message="Lean error:\nunknown identifier 'φ'") - Line 1753
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (AlgebraicTopology.DoldKan.N₂.obj (?m.37840 X)).X ⟶ (AlgebraicTopology.DoldKan.N₂.obj (?m.37840 X)).X') - Line 1757
LeanError(message='Lean error:\nsimp made no progress') - Line 1760
LeanError(message='Lean error:\n<input>:2:16: expected rcasesPat') - Line 1764
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'mapMono' has no definition") - Line 1766
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'mapMono' has no definition") - Line 1767
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'mapMono' has no definition") - Line 1769
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'mapMono' has no definition") - Line 1770
LeanError(message="Lean error:\ntype mismatch\n  if h₁ : Δ = Δ' then ?pos✝ else ?neg✝\nhas type\n  ?m.23017 : Sort ?u.23016\nbut is expected to have type\n  CategoryTheory.CategoryStruct.comp sorry sorry = sorry : Prop") - Line 1771
LeanError(message='Lean error:\n<input>:1:10: expected token') - Line 1774
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.6134\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝¹ : Sort u_2\nsplitting : x✝¹\nx✝ : Sort u_3\nobj : x✝\nΔ Δ' : SimplexCategoryᵒᵖ\nA : sorry\nθ : Δ ⟶ Δ'\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 1775
LeanError(message='Lean error:\n<input>:1:87: expected token') - Line 1777
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6250 K ≅ ?m.6251 K') - Line 1782
LeanError(message='Lean error:\nsimp made no progress') - Line 1783
LeanError(message='Lean error:\nsimp made no progress') - Line 1784
LeanError(message='Lean error:\ninternal exception #5') - Line 1785
LeanError(message='Lean error:\ninternal exception #5') - Line 1786
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  α✝') - Line 1787
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  α✝') - Line 1788
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 1790
LeanError(message="Lean error:\n<input>:17:12: expected ')', ',' or ':'") - Line 1794
LeanError(message='Lean error:\ndsimp made no progress') - Line 1795
LeanError(message='Lean error:\ninternal exception #5') - Line 1796
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry ⟶ sorry') - Line 1797
LeanError(message='Lean error:\n<input>:12:6: expected end of input') - Line 1799
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.74'") - Line 1802
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.74'") - Line 1803
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.74'") - Line 1804
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1640 X ⟶ a✝') - Line 1805
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  ?m.405 K X') - Line 1815
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  ?m.405 K X') - Line 1817
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  ?m.645 K X') - Line 1819
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  ?m.645 K X') - Line 1821
LeanError(message='Lean error:\ndsimp made no progress') - Line 1822
LeanError(message='Lean error:\nsimp made no progress') - Line 1824
LeanError(message='Lean error:\ninternal exception #5') - Line 1825
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_4, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nx✝¹ : Sort u_2\nP : x✝¹\nx✝ : Sort u_3\nQ : x✝\nq : ℕ\n⊢ sorry + sorry = CategoryTheory.CategoryStruct.id (AlgebraicTopology.AlternatingFaceMapComplex.obj X)") - Line 1829
LeanError(message='Lean error:\nsimp made no progress') - Line 1832
LeanError(message='Lean error:\nsimp made no progress') - Line 1833
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1835
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  CategoryTheory.CategoryStruct.comp sorry sorry = sorry\nC : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nx✝ : Sort u_2\nP : x✝\nq n : ℕ\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 1837
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  AlgebraicTopology.AlternatingFaceMapComplex.obj X ⟶ ?m.4067 q') - Line 1839
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  AlgebraicTopology.AlternatingFaceMapComplex.obj X ⟶ ?m.4067 q') - Line 1840
LeanError(message='Lean error:\nsimp made no progress') - Line 1842
LeanError(message="Lean error:\nunknown free variable '_fvar.46'") - Line 1845
LeanError(message="Lean error:\nunknown free variable '_fvar.46'") - Line 1846
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.CategoryStruct.id ?m.5577)\nA : Type u_1\n⊢ [inst : CategoryTheory.Category.{u_3, u_1} A] →\n    {X : CategoryTheory.SimplicialObject A} →\n      [inst_1 : CategoryTheory.Preadditive A] → {IndexSet : ?m.5524} → SimplexCategoryᵒᵖ → Fintype (sorry ())") - Line 1847
LeanError(message='Lean error:\n<input>:2:15: expected end of input') - Line 1855
LeanError(message='Lean error:\ninternal exception #5') - Line 1856
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry ()\nj : ℕ\nhj : sorry ()\n⊢ j + 1 ≤ 0") - Line 1865
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'Hσ' has no definition") - Line 1869
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'Hσ' has no definition") - Line 1872
LeanError(message='Lean error:\nsimp made no progress') - Line 1875
LeanError(message='Lean error:\n<input>:1:49: expected end of input') - Line 1882
LeanError(message='Lean error:\ndsimp made no progress') - Line 1884
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'transReflReparamAux' has no definition") - Line 1886
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Path x₀ x₁') - Line 1889
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'transAssocReparamAux' has no definition") - Line 1891
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Path x₀ x₃') - Line 1894
LeanError(message='Lean error:\ninternal exception #5') - Line 1905
LeanError(message="Lean error:\nunknown free variable '_fvar.4720'") - Line 1909
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1910
LeanError(message='Lean error:\ninternal exception #5') - Line 1917
LeanError(message='Lean error:\ninternal exception #5') - Line 1921
LeanError(message='Lean error:\nno goals to be solved') - Line 1928
LeanError(message='Lean error:\ninternal exception #5') - Line 1935
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 1939
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1940
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1941
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 1944
LeanError(message="Lean error:\n<input>:1:51: unexpected end of input; expected '|'") - Line 1945
LeanError(message='Lean error:\ninternal exception #5') - Line 1949
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'subinterval' has no definition") - Line 1950
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'subinterval' has no definition") - Line 1951
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3310 H ⟶ ?m.3311 H') - Line 1953
LeanError(message='Lean error:\ninternal exception #5') - Line 1954
LeanError(message='Lean error:\ninternal exception #5') - Line 1955
LeanError(message='Lean error:\ninternal exception #5') - Line 1957
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3458 H ⟶ ?m.3459 H') - Line 1958
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id (SimplexCategory.mk n)\nx✝¹ : Sort u_1\nδ : x✝¹\nx✝ : Sort u_2\nσ : x✝\nn : ℕ\ni : Fin (n + 1)\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id (SimplexCategory.mk n)") - Line 1959
LeanError(message='Lean error:\ninternal exception #5') - Line 1960
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ↑((SimplexCategory.Hom.toOrderHom (CategoryTheory.CategoryStruct.comp sorry sorry)) j) =\n    ↑((SimplexCategory.Hom.toOrderHom (CategoryTheory.CategoryStruct.id (SimplexCategory.mk n))) j)\ncase a.h.h.h\nx✝¹ : Sort u_1\nδ : x✝¹\nx✝ : Sort u_2\nσ : x✝\nn : ℕ\ni : Fin (n + 1)\nj : Fin ((SimplexCategory.mk n).len + 1)\n⊢ ↑((SimplexCategory.Hom.toOrderHom (CategoryTheory.CategoryStruct.comp sorry sorry)) j) =\n    ↑((SimplexCategory.Hom.toOrderHom (CategoryTheory.CategoryStruct.id (SimplexCategory.mk n))) j)") - Line 1961
LeanError(message='Lean error:\ninternal exception #5') - Line 1962
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3458 H ⟶ ?m.3459 H') - Line 1963
LeanError(message='Lean error:\ninternal exception #5') - Line 1964
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3322 H ⟶ ?m.3323 H') - Line 1965
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1966
LeanError(message="Lean error:\nunknown identifier 'x'") - Line 1967
LeanError(message="Lean error:\nunknown identifier 'x'") - Line 1968
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2178 h ⟶ ?m.2179 h') - Line 1969
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2166 h ⟶ ?m.2167 h') - Line 1970
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2343 h ⟶ ?m.2344 h') - Line 1971
LeanError(message="Lean error:\n<input>:1:51: unexpected end of input; expected '|'") - Line 1972
LeanError(message='Lean error:\ninternal exception #5') - Line 1978
LeanError(message='Lean error:\ninternal exception #5') - Line 1979
LeanError(message='Lean error:\ntype mismatch\n  Finset.mem_univ sorry\nhas type\n  sorry ∈ Finset.univ : Prop\nbut is expected to have type\n  ?m.1119 i ∈ Finset.univ : Prop') - Line 1985
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 1989
LeanError(message='Lean error:\nno goals to be solved') - Line 1991
LeanError(message='Lean error:\nno goals to be solved') - Line 1992
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1995
LeanError(message='Lean error:\ninternal exception #5') - Line 1997
LeanError(message='Lean error:\ninternal exception #5') - Line 1998
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n⊢ ⊤ ≤ sorry") - Line 2014
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry f\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝² : Sort u_1\nmk : x✝²\nx✝¹ : Sort u_2\nδ : x✝¹\nx✝ : Sort u_3\nσ : x✝\nP : CategoryTheory.MorphismProperty SimplexCategoryGenRel\nid : ∀ {n : ℕ}, P (CategoryTheory.CategoryStruct.id sorry)\ncomp_δ : ∀ {n m : ℕ} (u : sorry ⟶ sorry) (i : Fin (m + 2)), P u → P (CategoryTheory.CategoryStruct.comp u ?m.1790)\ncomp_σ : ∀ {n m : ℕ} (u : sorry ⟶ sorry) (i : Fin (m + 1)), P u → P (CategoryTheory.CategoryStruct.comp u ?m.2157)\na b : SimplexCategoryGenRel\nf✝ : a ⟶ b\nX✝ Y✝ : SimplexCategoryGenRel\nf : X✝ ⟶ Y✝\nhf : sorry f\n⊢ P f") - Line 2015
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry f\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝² : Sort u_1\nmk : x✝²\nx✝¹ : Sort u_2\nδ : x✝¹\nx✝ : Sort u_3\nσ : x✝\nP : CategoryTheory.MorphismProperty SimplexCategoryGenRel\nid : ∀ {n : ℕ}, P (CategoryTheory.CategoryStruct.id sorry)\nδ_comp : ∀ {n m : ℕ} (u : sorry ⟶ sorry) (i : Fin (m + 2)), P u → P (CategoryTheory.CategoryStruct.comp ?m.1790 u)\nσ_comp : ∀ {n m : ℕ} (u : sorry ⟶ sorry) (i : Fin (m + 1)), P u → P (CategoryTheory.CategoryStruct.comp ?m.2157 u)\na b : SimplexCategoryGenRel\nf✝ : a ⟶ b\nX✝ Y✝ : SimplexCategoryGenRel\nf : X✝ ⟶ Y✝\nhf : sorry f\n⊢ P f") - Line 2016
LeanError(message='Lean error:\nsimp made no progress') - Line 2017
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝ : Sort u_1\nδ : x✝\nn : ℕ\ni j : Fin (n + 2)\nH : i ≤ j\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 2018
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝¹ : Sort u_1\nδ : x✝¹\nx✝ : Sort u_2\nσ : x✝\nn : ℕ\ni : Fin (n + 2)\nj : Fin (n + 1)\nH : i ≤ j.castSucc\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 2019
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id sorry\nx✝² : Sort u_1\nδ : x✝²\nx✝¹ : Sort u_2\nσ : x✝¹\nx✝ : Sort u_3\nmk : x✝\nn : ℕ\ni : Fin (n + 1)\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id sorry") - Line 2020
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id sorry\nx✝² : Sort u_1\nδ : x✝²\nx✝¹ : Sort u_2\nσ : x✝¹\nx✝ : Sort u_3\nmk : x✝\nn : ℕ\ni : Fin (n + 1)\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id sorry") - Line 2021
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝¹ : Sort u_1\nδ : x✝¹\nx✝ : Sort u_2\nσ : x✝\nn : ℕ\ni : Fin (n + 2)\nj : Fin (n + 1)\nH : j.castSucc < i\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 2022
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (CategoryTheory.Quotient.functor ?r).map ?f₁ = (CategoryTheory.Quotient.functor ?r).map ?f₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝ : Sort u_1\nσ : x✝\nn : ℕ\ni j : Fin (n + 1)\nH : i ≤ j\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 2023
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝ : Sort u_1\nP_σ : x✝\nx y : SimplexCategoryGenRel\ne : x ⟶ y\nhe : sorry\n⊢ CategoryTheory.IsSplitEpi e") - Line 2032
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝ : Sort u_1\nP_δ : x✝\nx y : SimplexCategoryGenRel\nm : x ⟶ y\nhm : sorry\n⊢ CategoryTheory.IsSplitMono m") - Line 2033
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nP_σ : x✝\nx y : SimplexCategoryGenRel\ne : x ⟶ y\nhe : sorry\n⊢ CategoryTheory.IsSplitEpi sorry") - Line 2034
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nP_δ : x✝\nx y : SimplexCategoryGenRel\nm : x ⟶ y\nhm : sorry\n⊢ CategoryTheory.IsSplitMono sorry") - Line 2035
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝ : Sort u_1\nP_δ : x✝\nx y : SimplexCategoryGenRel\nf : x ⟶ y\nh_δ : sorry\n⊢ (∃ (h : x = y), f = CategoryTheory.eqToHom h) ∨ x.len < y.len") - Line 2036
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  i.castSucc < i' ∨ i.castSucc = i' ∨ i' < i.castSucc →\n    CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id (?m.5618 i i') ∨\n      ∃ j j', CategoryTheory.CategoryStruct.comp ?m.987 ?m.988 = CategoryTheory.CategoryStruct.comp ?m.1095 ?m.1096\nx✝¹ : Sort u_1\nδ : x✝¹\nx✝ : Sort u_2\nσ : x✝\nn : ℕ\ni : Fin (n + 2)\ni' : Fin (n + 3)\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.id (?m.5618 i i') ∨\n    ∃ j j', CategoryTheory.CategoryStruct.comp ?m.987 ?m.988 = CategoryTheory.CategoryStruct.comp ?m.1095 ?m.1096") - Line 2037
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 2038
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2039
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2040
LeanError(message='Lean error:\ntarget\n  f\nhas type\n  x ⟶ y : Type\nbut is expected to have type\n  ?x ⟶ ?y : Type (max ?u.1558 ?u.1557)') - Line 2041
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2046
LeanError(message='Lean error:\nno goals to be solved') - Line 2047
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2048
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2049
LeanError(message='Lean error:\ninternal exception #5') - Line 2050
LeanError(message='Lean error:\nrcases tactic failed: A₁ : sorry is not an inductive datatype') - Line 2052
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 2053
LeanError(message='Lean error:\ninternal exception #5') - Line 2054
LeanError(message='Lean error:\ninternal exception #5') - Line 2055
LeanError(message="Lean error:\nunknown free variable '_fvar.11616'") - Line 2060
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ Y') - Line 2062
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.Cofan.inj ?c ?i)\n      (CategoryTheory.Limits.Cofan.IsColimit.desc ?hc ?f) =\n    ?f ?i\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = F A\nIndexSet : ?m.6953\nSplitting : ?m.8878\nC✝ : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C✝\nΔ✝¹ : SimplexCategoryᵒᵖ\nA✝ : sorry\nΔ' : SimplexCategoryᵒᵖ\nθ : Δ✝¹ ⟶ Δ'\nN : ℕ → C✝\nΔ✝ : SimplexCategoryᵒᵖ\nX✝ : CategoryTheory.SimplicialObject C✝\nφ : (n : ℕ) → N n ⟶ X✝.obj (Opposite.op (SimplexCategory.mk n))\nX Y : CategoryTheory.SimplicialObject C✝\ns : sorry\nC : Type u_1\ninst✝ : CategoryTheory.Category.{u_3, u_1} C\nZ : C\nΔ : SimplexCategoryᵒᵖ\nF : sorry → (sorry ⟶ Z)\nA : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = F A") - Line 2063
LeanError(message="Lean error:\nunknown free variable '_fvar.11616'") - Line 2064
LeanError(message='Lean error:\nrcases tactic failed: Φ₁ : sorry is not an inductive datatype') - Line 2065
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.23687 Split\nargument\n  Split\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.20992 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nIndexSet : ?m.16319\nSplitting : ?m.18244\nC : Type u_1\ninst✝ : CategoryTheory.Category.{?u.18251, u_1} C\nΔ✝ : SimplexCategoryᵒᵖ\nA : sorry\nΔ' : SimplexCategoryᵒᵖ\nθ : Δ✝ ⟶ Δ'\nN : ℕ → C\nΔ : SimplexCategoryᵒᵖ\nX✝ : CategoryTheory.SimplicialObject C\nφ : (n : ℕ) → N n ⟶ X✝.obj (Opposite.op (SimplexCategory.mk n))\nX Y : CategoryTheory.SimplicialObject C\ns : sorry\nx✝ : Sort u_2\nSplit : x✝\nS₁ : sorry\nS₂ : sorry\nΦ₁ Φ₂ : S₁ ⟶ S₂\nh : Φ₁ = Φ₂\n⊢ sorry = sorry") - Line 2067
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.23689 Split\nargument\n  Split\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.20992 : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nIndexSet : ?m.16319\nSplitting : ?m.18244\nC : Type u_1\ninst✝ : CategoryTheory.Category.{?u.18251, u_1} C\nΔ✝ : SimplexCategoryᵒᵖ\nA : sorry\nΔ' : SimplexCategoryᵒᵖ\nθ : Δ✝ ⟶ Δ'\nN : ℕ → C\nΔ : SimplexCategoryᵒᵖ\nX✝ : CategoryTheory.SimplicialObject C\nφ : (n : ℕ) → N n ⟶ X✝.obj (Opposite.op (SimplexCategory.mk n))\nX Y : CategoryTheory.SimplicialObject C\ns : sorry\nx✝ : Sort u_2\nSplit : x✝\nS₁ : sorry\nS₂ : sorry\nΦ₁ Φ₂ : S₁ ⟶ S₂\nh : Φ₁ = Φ₂\nn : ℕ\n⊢ sorry = sorry") - Line 2068
LeanError(message='Lean error:\ninternal exception #5') - Line 2073
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X.obj (Opposite.op (SimplexCategory.mk n)) ≅ X.obj (Opposite.op (SimplexCategory.mk n))') - Line 2075
LeanError(message='Lean error:\ndsimp made no progress') - Line 2076
LeanError(message='Lean error:\nsimp made no progress') - Line 2077
LeanError(message='Lean error:\nsimp made no progress') - Line 2078
LeanError(message='Lean error:\ndsimp made no progress') - Line 2079
LeanError(message='Lean error:\ninternal exception #5') - Line 2080
LeanError(message='Lean error:\ndsimp made no progress') - Line 2081
LeanError(message='Lean error:\ndsimp made no progress') - Line 2082
LeanError(message='Lean error:\ninternal exception #5') - Line 2083
LeanError(message='Lean error:\ndsimp made no progress') - Line 2084
LeanError(message='Lean error:\ninternal exception #5') - Line 2085
LeanError(message='Lean error:\ndsimp made no progress') - Line 2086
LeanError(message="Lean error:\nunknown constant '_private.0._proof_1'") - Line 2087
LeanError(message='Lean error:\ndsimp made no progress') - Line 2088
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.11254\nargument\n  ?m.11254\nhas type\n  (CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry) =\n    (CategoryTheory.NatTrans.app ?convert_5 (Opposite.op (SimplexCategory.mk 0)) =\n      CategoryTheory.NatTrans.app ?convert_6 (Opposite.op (SimplexCategory.mk 0))) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2092
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X.obj (SimplexCategory.mk n) ≅ X.obj (SimplexCategory.mk n)') - Line 2095
LeanError(message='Lean error:\ndsimp made no progress') - Line 2096
LeanError(message="Lean error:\nunknown constant '_private.0._proof_1'") - Line 2097
LeanError(message='Lean error:\nsimp made no progress') - Line 2098
LeanError(message='Lean error:\ndsimp made no progress') - Line 2099
LeanError(message='Lean error:\ninternal exception #5') - Line 2100
LeanError(message='Lean error:\ndsimp made no progress') - Line 2102
LeanError(message='Lean error:\ninternal exception #5') - Line 2103
LeanError(message='Lean error:\ndsimp made no progress') - Line 2104
LeanError(message='Lean error:\ninternal exception #5') - Line 2105
LeanError(message='Lean error:\ndsimp made no progress') - Line 2106
LeanError(message="Lean error:\nunknown constant '_private.0._proof_1'") - Line 2107
LeanError(message='Lean error:\ndsimp made no progress') - Line 2108
LeanError(message='Lean error:\n<input>:1:12: expected token') - Line 2131
LeanError(message='Lean error:\n<input>:1:12: expected token') - Line 2132
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.459 n') - Line 2133
LeanError(message="Lean error:\ntactic 'constructor' failed, target is not an inductive datatype\nx✝ : Sort u_1\nI : x✝\nn : ℕ\n⊢ sorry") - Line 2134
LeanError(message='Lean error:\nsimp made no progress') - Line 2135
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry f✝ is not an inductive datatype') - Line 2136
LeanError(message='Lean error:\nsimp made no progress') - Line 2137
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HomotopicalAlgebra.Cofibration ?f\nX Y : SSet\nf : X ⟶ Y\n⊢ sorry ↔ CategoryTheory.Mono f") - Line 2140
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HomotopicalAlgebra.Fibration ?f\n⊢ sorry ↔ sorry") - Line 2141
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HomotopicalAlgebra.Cofibration ?f\nX Y : SSet\nf : X ⟶ Y\ninst✝ : CategoryTheory.Mono f\n⊢ sorry") - Line 2142
LeanError(message='Lean error:\ninternal exception #5') - Line 2143
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ntactic 'induction' failed, recursor 'Exists.casesOn' can only eliminate into Prop\nStrictSegal : ?m.421\nX✝ : SSet\nsx : sorry\nX : SSet\nx✝² : Sort u_1\nlift : x✝²\nx✝¹ : Sort u_2\nstrArrowMk₂ : x✝¹\nn : ℕ\ns :\n  CategoryTheory.Limits.Cone\n    ((CategoryTheory.StructuredArrow.proj (Opposite.op (SimplexCategory.mk n))\n          (SimplexCategory.Truncated.inclusion 2).op).comp\n      ((SimplexCategory.Truncated.inclusion 2).op.comp X))\nx : s.pt\ni j : ℕ\nhij : i ≤ j\nhj : j ≤ n\nx✝ : ∃ k, i + k = j\n⊢ sorry") - Line 2144
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ntactic 'induction' failed, recursor 'Exists.casesOn' can only eliminate into Prop\nStrictSegal : ?m.421\nX✝ : SSet\nsx : sorry\nX : SSet\nx✝² : Sort u_1\nlift : x✝²\nx✝¹ : Sort u_2\nstrArrowMk₂ : x✝¹\nn : ℕ\ns :\n  CategoryTheory.Limits.Cone\n    ((CategoryTheory.StructuredArrow.proj (Opposite.op (SimplexCategory.mk n))\n          (SimplexCategory.Truncated.inclusion 2).op).comp\n      ((SimplexCategory.Truncated.inclusion 2).op.comp X))\nx : s.pt\nφ : SimplexCategory.mk 1 ⟶ SimplexCategory.mk n\nx✝ : ∃ i j, ∃ (hij : i ≤ j), φ = SimplexCategory.mkOfLe i j hij\n⊢ sorry") - Line 2145
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.691 n i') - Line 2148
LeanError(message='Lean error:\ninternal exception #5') - Line 2149
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1319 n i') - Line 2150
LeanError(message='Lean error:\nsimp made no progress') - Line 2152
LeanError(message='Lean error:\nsimp made no progress') - Line 2157
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 2159
LeanError(message='Lean error:\n<input>:2:28: expected end of input') - Line 2160
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2161
LeanError(message='Lean error:\ninternal exception #5') - Line 2162
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 2163
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 2165
LeanError(message='Lean error:\ntype mismatch\n  sorry\nhas type\n  ?m.16676 : Sort ?u.16675\nbut is expected to have type\n  sorry ⟶ sorry : Sort u_5') - Line 2172
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  sorry') - Line 2192
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  sorry') - Line 2193
LeanError(message='Lean error:\napplyExtTheorem only applies to equations, not\n  sorry') - Line 2194
LeanError(message='Lean error:\nno goals to be solved') - Line 2195
LeanError(message='Lean error:\nno goals to be solved') - Line 2197
LeanError(message='Lean error:\n<input>:1:17: expected token') - Line 2198
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.1670\nwith\n  SSet.oneTruncation₂.map sorry =\n    sorry ⋙rq (SSet.Truncated.HomotopyCategory.quotientFunctor X).toReflPrefunctor ⋙rq sorry\nX : SSet.Truncated 2\n⊢ SSet.oneTruncation₂.map sorry =\n    sorry ⋙rq (SSet.Truncated.HomotopyCategory.quotientFunctor X).toReflPrefunctor ⋙rq sorry") - Line 2199
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (CategoryTheory.Functor.toPrefunctor ?F).map ?g ((CategoryTheory.Functor.toPrefunctor ?F).map ?f ?a)\nn : ℕ\nX : SSet.Truncated (n + 1)\nm : ℕ\nhₘ : m ≤ n + 1\nΔ : X.obj (Opposite.op { obj := SimplexCategory.mk m, property := hₘ })\na : ℕ\nhₐ : a ≤ n + 1\nφ : { obj := SimplexCategory.mk a, property := hₐ } ⟶ { obj := SimplexCategory.mk m, property := hₘ }\ni : Fin (a + 1)\n⊢ (X.spine a hₐ (X.map φ.op Δ)).vertex i = (X.spine m hₘ Δ).vertex ((SimplexCategory.Hom.toOrderHom φ) i)") - Line 2211
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2212
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry\nx✝ : Sort u_1\nface : x✝\nn : ℕ\nS : Finset (Fin (n + 1))\nm : ℕ\ne : Fin (m + 1) ≃o { x // x ∈ S }\n⊢ sorry = sorry") - Line 2248
LeanError(message='Lean error:\ninternal exception #5') - Line 2250
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2253
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2254
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2255
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2256
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2257
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2258
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2259
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2260
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2261
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2262
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2263
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2264
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2265
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2266
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2267
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2268
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2269
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2270
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2271
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2272
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2273
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2274
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2275
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2276
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2277
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2278
LeanError(message='Lean error:\ninternal exception #5') - Line 2282
LeanError(message='Lean error:\ninternal exception #5') - Line 2283
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 2290
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2291
LeanError(message='Lean error:\n<input>:2:44: expected end of input') - Line 2292
LeanError(message='Lean error:\n<input>:7:4: expected end of input') - Line 2293
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2294
LeanError(message='Lean error:\n<input>:2:11: expected end of input') - Line 2295
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1034 is not an inductive datatype') - Line 2302
LeanError(message='Lean error:\ntype mismatch\n  CompleteSpace.complete sorry\nhas type\n  ∃ x, ?m.83859 ≤ nhds x : Prop\nbut is expected to have type\n  ∃ y, Filter.Tendsto u Filter.atTop sorry : Prop') - Line 2303
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2308
LeanError(message='Lean error:\nno goals to be solved') - Line 2311
LeanError(message='Lean error:\ntype mismatch\n  NNReal.rpow_le_self_of_le_one ?m.4590 hp1\nhas type\n  ?m.4575 ^ p ≤ ?m.4575 : Prop\nbut is expected to have type\n  sorry : Sort ?u.1665') - Line 2314
LeanError(message='Lean error:\ninternal exception #5') - Line 2315
LeanError(message='Lean error:\ninternal exception #5') - Line 2317
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2325
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2326
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2327
LeanError(message='Lean error:\n<input>:1:23: expected token') - Line 2328
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x • ?y • ?z\nE : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℂ E\nx : ℝ\ns : ℂ\nf : E\n⊢ sorry") - Line 2333
LeanError(message='Lean error:\ninternal exception #5') - Line 2334
LeanError(message='Lean error:\ninternal exception #5') - Line 2335
LeanError(message='Lean error:\ninternal exception #5') - Line 2336
LeanError(message='Lean error:\ninternal exception #5') - Line 2340
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  InnerProductSpace ℝ (?m.2041 a)') - Line 2341
LeanError(message='Lean error:\nno goals to be solved') - Line 2343
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℍ') - Line 2349
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℍ') - Line 2350
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℍ') - Line 2353
LeanError(message='Lean error:\ntype mismatch, term\n  Continuous.sub continuous_id sorry\nafter simplification has type\n  Continuous fun x => id x - ?m.1637 x : Prop\nbut is expected to have type\n  sorry : Prop') - Line 2363
LeanError(message='Lean error:\napplication type mismatch\n  Summable.map_iff_of_leftInverse sorry\n    (let_fun this := ?m.12542;\n    this)\n    (continuous_algebraMap ?m.12546 ?m.12547)\nargument\n  continuous_algebraMap ?m.12546 ?m.12547\nhas type\n  Continuous ⇑(algebraMap ?m.12546 ?m.12547) : Prop\nbut is expected to have type\n  Continuous ⇑sorry : Prop') - Line 2365
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2368
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 2369
LeanError(message='Lean error:\ninternal exception #5') - Line 2370
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2371
LeanError(message='Lean error:\ninternal exception #5') - Line 2372
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3424\nR : Type u_1\ninst✝⁵ : AddCommGroup R\ninst✝⁴ : UniformSpace R\ninst✝³ : IsUniformAddGroup R\ninst✝² : CompleteSpace R\ninst✝¹ : T0Space R\nf : ℕ → R\nhf : Summable f\nN : ℕ\ninst✝ : NeZero N\n⊢ ∑' (n : ℕ), f n = ∑ j, ∑' (m : ℕ), f (j.val + N * m)") - Line 2373
LeanError(message='Lean error:\ntype mismatch\n  Set.le_indicator (fun t x => ?m.37511) (fun t ht => ?m.37527) t\nhas type\n  (fun t => ‖sorry‖) t ≤ Set.indicator ?m.37272 ?m.37504 t : Prop\nbut is expected to have type\n  ‖sorry‖ ≤ u.indicator (fun t_1 => sorry * ‖?m.27929‖ * C) t : Prop') - Line 2374
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2375
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2378
LeanError(message='Lean error:\n<input>:1:10: expected token') - Line 2412
LeanError(message="Lean error:\napplication type mismatch\n  MeasureTheory.dist_convolution_le' (ContinuousLinearMap.lsmul ℝ ℝ) hε hif hf\nargument\n  hf\nhas type\n  Function.support f ⊆\n    Metric.ball\n      (@OfNat.ofNat G 0\n        (@Zero.toOfNat0 G\n          (@NegZeroClass.toZero G\n            (@SubNegZeroMonoid.toNegZeroClass G\n              (@SubtractionMonoid.toSubNegZeroMonoid G\n                (@SubtractionCommMonoid.toSubtractionMonoid G (@AddCommGroup.toDivisionAddCommMonoid G inst✝¹⁴)))))))\n      R : Prop\nbut is expected to have type\n  Function.support f ⊆\n    Metric.ball\n      (@OfNat.ofNat G 0\n        (@Zero.toOfNat0 G\n          (@NegZeroClass.toZero G\n            (@SubNegZeroMonoid.toNegZeroClass G\n              (@SubtractionMonoid.toSubNegZeroMonoid G\n                (@SubtractionCommMonoid.toSubtractionMonoid G\n                  (@AddCommGroup.toDivisionAddCommMonoid G SeminormedAddCommGroup.toAddCommGroup)))))))\n      R : Prop") - Line 2431
LeanError(message='Lean error:\nsimp made no progress') - Line 2432
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_5\ninst✝⁵ inst✝⁴ inst✝³ : SeminormedAddCommGroup α\ninst✝² : NonUnitalSeminormedRing α\ninst✝¹ : NormedDivisionRing α\ninst✝ : NormedAlgebra ℝ α\nx✝ : Sort u_8\nunitOf : x✝\na : α\n⊢ ‖sorry‖₊ = 1") - Line 2491
LeanError(message='Lean error:\nsimp made no progress') - Line 2492
LeanError(message='Lean error:\ninternal exception #5') - Line 2493
LeanError(message='Lean error:\nsimp made no progress') - Line 2496
LeanError(message="Lean error:\nunknown free variable '_fvar.1056'") - Line 2498
LeanError(message='Lean error:\ninternal exception #5') - Line 2500
LeanError(message="Lean error:\nunknown free variable '_fvar.1056'") - Line 2506
LeanError(message="Lean error:\nunknown free variable '_fvar.1056'") - Line 2508
LeanError(message="Lean error:\nunknown free variable '_fvar.1256'") - Line 2511
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2513
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2514
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2515
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2516
LeanError(message='Lean error:\ninternal exception #5') - Line 2517
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2518
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 2519
LeanError(message='Lean error:\n<input>:3:72: expected end of input') - Line 2520
LeanError(message='Lean error:\ntype mismatch\n  ENNReal.add_thirds 1\nhas type\n  1 / 3 + 1 / 3 + 1 / 3 = 1 : Prop\nbut is expected to have type\n  sorry + sorry + sorry = 1 : Prop') - Line 2528
LeanError(message="Lean error:\n<input>:1:22: expected ',' or 'in'") - Line 2529
LeanError(message='Lean error:\ninternal exception #5') - Line 2530
LeanError(message='Lean error:\ntype mismatch, term\n  NNReal.geom_mean_le_arith_mean2_weighted sorry sorry sorry sorry sorry\nafter simplification has type\n  sorry () ^ ↑(sorry ()) * sorry () ^ ↑(sorry ()) ≤ sorry () * sorry () + sorry () * sorry () : Prop\nbut is expected to have type\n  a * b ≤ p⁻¹ * a ^ p + q⁻¹ * b ^ q : Prop') - Line 2531
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2535
LeanError(message='Lean error:\nsimp made no progress') - Line 2537
LeanError(message='Lean error:\nno goals to be solved') - Line 2538
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 2539
LeanError(message='Lean error:\ntype mismatch, term\n  NNReal.rpow_le_rpow (NNReal.inner_le_Lp_mul_Lq s 1 f (Real.HolderConjugate.symm hpq)) (Real.HolderTriple.nonneg hpq)\nafter simplification has type\n  (∑ x ∈ s, f x) ^ p ≤ (s.card • 1 ^ q) ^ (p - 1) * (∑ i ∈ s, f i ^ p) ^ 1 : Prop\nbut is expected to have type\n  (∑ i ∈ s, f i) ^ p ≤ ↑s.card ^ (p - 1) * ∑ i ∈ s, f i ^ p : Prop') - Line 2544
LeanError(message='Lean error:\n<input>:2:14: expected end of input') - Line 2545
LeanError(message='Lean error:\ninternal exception #5') - Line 2551
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2554
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ℝ) (ι → sorry) ?m.863 ?m.864\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2555
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (?x / ?y) ^ ?z\nι : Type u\ns : Finset ι\np : ℝ\nhp : 1 ≤ p\nw f : ι → ℝ\nhw : ∀ (i : ι), 0 ≤ w i\nhf : ∀ (i : ι), 0 ≤ f i\n⊢ (∑ i ∈ s, w i * f i) / ↑s.card ≤ ((∑ i ∈ s, w i) / ↑s.card) ^ (1 - p⁻¹) * ((∑ i ∈ s, w i * f i ^ p) / ↑s.card) ^ p⁻¹") - Line 2556
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ℝ) (ι → sorry) ?m.1954 ?m.1955\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2557
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ℝ) (ι → sorry) ?m.1821 ?m.1822\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2560
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2561
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 2562
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ℝ) (ι → sorry) ?m.2091 ?m.2092\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2563
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ℝ) (ι → sorry) ?m.2182 ?m.2183\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2566
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 2567
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2568
LeanError(message='Lean error:\ntype mismatch, term\n  ENNReal.rpow_le_rpow (ENNReal.inner_le_Lp_mul_Lq s 1 f (Real.HolderConjugate.symm hpq)) (Real.HolderTriple.nonneg hpq)\nafter simplification has type\n  (∑ x ∈ s, f x) ^ p ≤ (s.card • 1 ^ q) ^ (p - 1) * (∑ i ∈ s, f i ^ p) ^ 1 : Prop\nbut is expected to have type\n  (∑ i ∈ s, f i) ^ p ≤ ↑s.card ^ (p - 1) * ∑ i ∈ s, f i ^ p : Prop') - Line 2569
LeanError(message='Lean error:\nno goals to be solved') - Line 2572
LeanError(message='Lean error:\ninternal exception #5') - Line 2573
LeanError(message='Lean error:\ninternal exception #5') - Line 2574
LeanError(message='Lean error:\nno goals to be solved') - Line 2575
LeanError(message='Lean error:\n<input>:1:91: unterminated comment') - Line 2578
LeanError(message='Lean error:\ninternal exception #5') - Line 2579
LeanError(message='Lean error:\ninternal exception #5') - Line 2584
LeanError(message='Lean error:\n<input>:13:4: expected end of input') - Line 2585
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 2586
LeanError(message='Lean error:\ninternal exception #5') - Line 2588
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Norm ?m.4390') - Line 2589
LeanError(message="Lean error:\n<input>:1:16: expected ':' or term") - Line 2590
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2591
LeanError(message='Lean error:\ntype mismatch\n  hf sorry\nhas type\n  EMetric.ball (f x) ?m.6551 ∈ Filter.map f (nhdsWithin x D) : Prop\nbut is expected to have type\n  sorry ∈ sorry : Prop') - Line 2599
LeanError(message='Lean error:\ninternal exception #5') - Line 2600
LeanError(message='Lean error:\ninternal exception #5') - Line 2602
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2605
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.28061\nargument\n  ?m.28061\nhas type\n  (∑ k ∈ sorry, ?m.3332 ≤ ∑ k ∈ sorry, 2 ^ k • ?m.4111) = ?m.28057 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2606
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.54544\nargument\n  ?m.54544\nhas type\n  (∑ k ∈ sorry, ?m.4165 ≤ ∑ k ∈ sorry, ?m.4666 + ∑ k ∈ sorry, (u (k + 1) - u k) • ?m.5960) =\n    (∑ k ∈ sorry, sorry + ?convert_4 ≤ ∑ k ∈ sorry, sorry + ?convert_5) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2607
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.32195\nargument\n  ?m.32195\nhas type\n  (∑ k ∈ sorry, ?m.2072 ≤ sorry + ∑ k ∈ sorry, 2 ^ k • ?m.2857) = (sorry + ?convert_5 ≤ sorry + ?convert_6) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2608
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2609
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.27734\nargument\n  ?m.27734\nhas type\n  (∑ k ∈ sorry, 2 ^ k • ?m.3496 ≤ ∑ k ∈ sorry, ?m.4078) = ?m.27730 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2610
LeanError(message='Lean error:\ninternal exception #5') - Line 2611
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.46373\nargument\n  ?m.46373\nhas type\n  (∑ k ∈ sorry, 2 ^ k • ?m.3518 ≤ sorry + 2 • ∑ k ∈ sorry, ?m.4122) =\n    (sorry + 2 • ?convert_8 ≤ sorry + 2 • ?convert_9) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2612
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∑' (i : ℕ), ?m.12213 i\nhf : ⦃m n : ℕ⦄ → 1 < m → m ≤ n → sorry\n⊢ sorry") - Line 2616
LeanError(message='Lean error:\nsimp made no progress') - Line 2617
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.10076\nargument\n  ?m.10076\nhas type\n  ((Summable fun k => sorry) ↔ sorry) = ?m.10072 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2618
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ℕ → ℝ) (ℕ → sorry) ?m.5165 ?m.5166\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2619
LeanError(message='Lean error:\n<input>:2:44: unexpected end of input') - Line 2621
LeanError(message='Lean error:\nsimp made no progress') - Line 2624
LeanError(message='Lean error:\nno goals to be solved') - Line 2626
LeanError(message='Lean error:\ninternal exception #5') - Line 2627
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2630
LeanError(message='Lean error:\nno goals to be solved') - Line 2634
LeanError(message='Lean error:\nfailed to synthesize\n  IsOrderedAddMonoid α\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2635
LeanError(message='Lean error:\nsimp made no progress') - Line 2636
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2637
LeanError(message='Lean error:\ntype mismatch, term\n  summable_nat_add_iff k\nafter simplification has type\n  (Summable fun n => ‖1 / sorry ()‖) ↔ Summable fun x => ‖1 / sorry ()‖ : Prop\nbut is expected to have type\n  Summable fun x => ‖(↑x + ↑k) ^ q‖⁻¹ : Prop') - Line 2639
LeanError(message='Lean error:\nsimp made no progress') - Line 2667
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2668
LeanError(message='Lean error:\nrcases tactic failed: property✝ : ∀ ε > 0, ∃ i_1, ∀ j ≥ i_1, |i j - i i_1| < ε is not an inductive datatype') - Line 2669
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.38664 _fvar.24843 _fvar.24845 p s C') - Line 2671
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2672
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.33091 ?m.33092\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2673
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.33091 ?m.33092\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2675
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.69750 _fvar.57077 _fvar.57079 r p q') - Line 2681
LeanError(message='Lean error:\ninternal exception #5') - Line 2690
LeanError(message="Lean error:\nunknown free variable '_fvar.111428'") - Line 2693
LeanError(message="Lean error:\nunknown free variable '_fvar.111428'") - Line 2694
LeanError(message='Lean error:\ninternal exception #5') - Line 2695
LeanError(message='Lean error:\ninternal exception #5') - Line 2696
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2700
LeanError(message='Lean error:\ninternal exception #5') - Line 2703
LeanError(message='Lean error:\ninternal exception #5') - Line 2704
LeanError(message="Lean error:\nunknown free variable '_fvar.109767'") - Line 2705
LeanError(message="Lean error:\nunknown free variable '_fvar.109767'") - Line 2706
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2707
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2708
LeanError(message='Lean error:\ninternal exception #5') - Line 2713
LeanError(message='Lean error:\ninternal exception #5') - Line 2714
LeanError(message='Lean error:\nsimp made no progress') - Line 2715
LeanError(message='Lean error:\nsimp made no progress') - Line 2716
LeanError(message='Lean error:\nsimp made no progress') - Line 2721
LeanError(message='Lean error:\nsimp made no progress') - Line 2722
LeanError(message='Lean error:\ninternal exception #5') - Line 2723
LeanError(message='Lean error:\ninternal exception #5') - Line 2724
LeanError(message='Lean error:\ninternal exception #5') - Line 2727
LeanError(message='Lean error:\ninternal exception #5') - Line 2728
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ y, ↑y = r) → sorry = ⋂ i, ⋂ (h : i ∈ s), ?m.166713\n𝕜 : Type u_3\nE : Type u_4\ninst✝¹⁰ : AddCommGroup E\ninst✝⁹ : SeminormedRing 𝕜\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : NormedField 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : SeminormedRing 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 E\nι : Type u_1\nx✝ : Sort u_2\nball : x✝\np : ι → Seminorm 𝕜 E\ns : Finset ι\nx : E\nr : ℝ\nhr : 0 < r\n⊢ sorry = ⋂ i, ⋂ (h : i ∈ s), ?m.166713") - Line 2729
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ y, ↑y = r) → sorry = ⋂ i, ⋂ (h : i ∈ s), ?m.166713\n𝕜 : Type u_3\nE : Type u_4\ninst✝¹⁰ : AddCommGroup E\ninst✝⁹ : SeminormedRing 𝕜\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : NormedField 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : SeminormedRing 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 E\nι : Type u_1\nx✝ : Sort u_2\nclosedBall : x✝\np : ι → Seminorm 𝕜 E\ns : Finset ι\nx : E\nr : ℝ\nhr : 0 ≤ r\n⊢ sorry = ⋂ i, ⋂ (h : i ∈ s), ?m.166713") - Line 2730
LeanError(message="Lean error:\nunknown free variable '_fvar.159434'") - Line 2731
LeanError(message="Lean error:\nunknown free variable '_fvar.159434'") - Line 2732
LeanError(message='Lean error:\nsimp made no progress') - Line 2735
LeanError(message='Lean error:\nsimp made no progress') - Line 2736
LeanError(message='Lean error:\nsimp made no progress') - Line 2738
LeanError(message="Lean error:\nunknown free variable '_fvar.161095'") - Line 2739
LeanError(message="Lean error:\nunknown free variable '_fvar.161095'") - Line 2740
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℤ') - Line 2741
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℤ') - Line 2742
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  IsEmpty ι ∨ Nonempty ι → sorry = ⋂ i, ?m.181569\n𝕜 : Type u_3\nE : Type u_4\ninst✝¹³ : AddCommGroup E\ninst✝¹² : SeminormedRing 𝕜\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : SeminormedRing 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : SMul 𝕜 E\ninst✝³ : Module 𝕜 E\ninst✝² : NormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx✝ : Sort u_2\nclosedBall : x✝\nι : Sort u_1\np : ι → Seminorm 𝕜 E\nhp : BddAbove (Set.range p)\ne : E\nr : ℝ\nhr : 0 < r\n⊢ sorry = ⋂ i, ?m.181569") - Line 2743
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2744
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.181931 • ?A\ncase h\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹³ : AddCommGroup E\ninst✝¹² : SeminormedRing 𝕜\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : SeminormedRing 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : SMul 𝕜 E\ninst✝³ : Module 𝕜 E\ninst✝² : NormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\np : Seminorm 𝕜 E\nk : 𝕜\nr : ℝ\nhk : k ≠ 0\nx✝ : E\n⊢ x✝ ∈ k • p.ball 0 r ↔ x✝ ∈ p.ball 0 (‖k‖ * r)") - Line 2745
LeanError(message='Lean error:\ninternal exception #5') - Line 2747
LeanError(message='Lean error:\nno goals to be solved') - Line 2748
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.260353\nargument\n  ?m.260353\nhas type\n  Convex ℝ sorry = ?m.260336 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 2756
LeanError(message='Lean error:\ninternal exception #5') - Line 2757
LeanError(message='Lean error:\nno goals to be solved') - Line 2762
LeanError(message='Lean error:\nno goals to be solved') - Line 2775
LeanError(message='Lean error:\nno goals to be solved') - Line 2777
LeanError(message='Lean error:\n<input>:1:43: expected end of input') - Line 2778
LeanError(message='Lean error:\ninternal exception #5') - Line 2779
LeanError(message='Lean error:\napplication type mismatch\n  Seminorm.rescale_to_shell ?m.349745 hc ε_pos hx\nargument\n  hx\nhas type\n  p x ≠ 0 : Prop\nbut is expected to have type\n  ?m.349745 ?m.349758 ≠ 0 : Prop') - Line 2781
LeanError(message='Lean error:\napplication type mismatch\n  ne_of_gt (LT.lt.trans_le (Ne.lt_of_le (Ne.symm hjx) sorry) sorry)\nargument\n  LT.lt.trans_le (Ne.lt_of_le (Ne.symm hjx) sorry) sorry\nhas type\n  (0 : ℝ) < ?m.362432 : Prop\nbut is expected to have type\n  (0 : ℕ) < sorry : Prop') - Line 2783
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  BddAbove (Set.range ?m.377217)\n𝕜 : Type u_3\nE : Type u_4\ninst✝²⁷ : AddCommGroup E\ninst✝²⁶ : SeminormedRing 𝕜\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : NormedField 𝕜\ninst✝²² : AddCommGroup E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : NormedField 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : NormedSpace ℝ 𝕜\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nι : Sort u_2\np : ι → Seminorm 𝕜 E\ns : Set E\nhs : Absorbent 𝕜 s\nh : ∀ x ∈ s, BddAbove (Set.range fun x_1 => (p x_1) x)\n⊢ BddAbove (Set.range p)") - Line 2784
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.376617 → ℝ → Set ?m.376617') - Line 2786
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.376617 → ℝ → Set ?m.376617') - Line 2787
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball\n𝕜 : Type u_2\nE : Type u_3\ninst✝²⁷ : AddCommGroup E\ninst✝²⁶ : SeminormedRing 𝕜\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : NormedField 𝕜\ninst✝²² : AddCommGroup E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : NormedField 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\nr : ℝ\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : NormedSpace ℝ 𝕜\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nhr : 0 < r\n⊢ Absorbent 𝕜 sorry") - Line 2788
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball\n𝕜 : Type u_2\nE : Type u_3\ninst✝²⁷ : AddCommGroup E\ninst✝²⁶ : SeminormedRing 𝕜\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : NormedField 𝕜\ninst✝²² : AddCommGroup E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : NormedField 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\nr : ℝ\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : NormedSpace ℝ 𝕜\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nhx : sorry < r\n⊢ Absorbent 𝕜 sorry") - Line 2789
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball\n𝕜 : Type u_2\nE : Type u_3\ninst✝²⁷ : AddCommGroup E\ninst✝²⁶ : SeminormedRing 𝕜\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : NormedField 𝕜\ninst✝²² : AddCommGroup E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : NormedField 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : NormedSpace ℝ 𝕜\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\n⊢ Balanced 𝕜 sorry") - Line 2790
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.closedBall\n𝕜 : Type u_2\nE : Type u_3\ninst✝²⁷ : AddCommGroup E\ninst✝²⁶ : SeminormedRing 𝕜\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : NormedField 𝕜\ninst✝²² : AddCommGroup E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : NormedField 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : NormedSpace ℝ 𝕜\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\n⊢ Balanced 𝕜 sorry") - Line 2791
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2797
LeanError(message='Lean error:\n<input>:1:87: unexpected end of input') - Line 2798
LeanError(message='Lean error:\n<input>:6:4: expected end of input') - Line 2799
LeanError(message='Lean error:\n<input>:1:37: expected end of input') - Line 2800
LeanError(message='Lean error:\nsimp made no progress') - Line 2803
LeanError(message='Lean error:\nsimp made no progress') - Line 2805
LeanError(message='Lean error:\n<input>:2:29: expected end of input') - Line 2810
LeanError(message='Lean error:\n<input>:2:29: expected end of input') - Line 2811
LeanError(message='Lean error:\nno goals to be solved') - Line 2813
LeanError(message='Lean error:\nno goals to be solved') - Line 2814
LeanError(message='Lean error:\nno goals to be solved') - Line 2815
LeanError(message="Lean error:\nunknown free variable '_fvar.5385'") - Line 2828
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.40292\nwith\n  AnalyticAt 𝕜 (fun x => sorry) z\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nx✝ : Sort u_5\nf : x✝\nE✝ : Type u_6\nz : E✝\nσ : Type u_7\nhf : ∀ (i : ?m.40260), AnalyticAt 𝕜 (fun x => ?m.2045) z\np : sorry\n⊢ AnalyticAt 𝕜 (fun x => sorry) z") - Line 2893
LeanError(message='Lean error:\ninternal exception #5') - Line 2935
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 2976
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  AnalyticAt ?m.22099 ?m.22107 ?m.22108\nhf : sorry\n⊢ sorry") - Line 2977
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 2979
LeanError(message='Lean error:\nno goals to be solved') - Line 2980
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 2990
LeanError(message='Lean error:\n<input>:1:37: expected end of input') - Line 3034
LeanError(message='Lean error:\n<input>:1:37: expected end of input') - Line 3078
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Continuous ?m.28787\np : sorry\nn : ℕ\nhn : ∀ (m : ℕ), n ≤ m → sorry = 0\n⊢ Continuous sorry") - Line 3083
LeanError(message='Lean error:\ninternal exception #5') - Line 3084
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\np : sorry\nn : ℕ\nhn : ∀ (m : ℕ), n ≤ m → sorry = 0\nk m✝ : ℕ\nm : n ≤ k + m✝\n⊢ sorry = 0") - Line 3085
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.20589 p hn k') - Line 3086
LeanError(message='Lean error:\ninternal exception #5') - Line 3087
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3089
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry is not an inductive datatype') - Line 3094
LeanError(message='Lean error:\ntype mismatch\n  ENNReal.le_of_forall_pos_nnreal_lt fun r _h0 hr => ?m.10199\nhas type\n  ?m.10182 ≤ ?m.10183 : Prop\nbut is expected to have type\n  sorry - ‖x‖₊ ≤ sorry : Prop') - Line 3110
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ∑ x ∈ ?m.10222, ?m.10224 x = 0\nwith\n  sorry = 0\nn : ℕ\nhp : sorry = 0\n⊢ sorry = 0") - Line 3112
LeanError(message='Lean error:\napplication type mismatch\n  lt_of_le_of_lt (zero_le ?m.16567) h\nargument\n  h\nhas type\n  ↑‖x‖₊ + ↑‖y‖₊ < sorry : Prop\nbut is expected to have type\n  ?m.16567 < sorry : Prop') - Line 3114
LeanError(message='Lean error:\nno goals to be solved') - Line 3126
LeanError(message='Lean error:\nno goals to be solved') - Line 3127
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3129
LeanError(message='Lean error:\n<input>:1:62: expected end of input') - Line 3130
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 3133
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 3135
LeanError(message='Lean error:\nsimp made no progress') - Line 3136
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ContinuousMultilinearMap 𝕜 (fun i => E) G') - Line 3137
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 3138
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖?m.153258‖ * ?m.153251 ≤ ‖?m.153258‖ * ?m.153252\nwith\n  sorry * ∏ i, ‖sorry‖ ≤ sorry * ∏ i, ‖sorry‖ * ∏ j, ‖(v ∘ ⇑(c.embedding i)) j‖\nE : Type u_2\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : TopologicalSpace E\ninst✝³ inst✝² inst✝¹ : IsTopologicalAddGroup E\ninst✝ : NormedAddCommGroup E\nn : ℕ\np : sorry\nc : Composition n\nf : sorry\nv : Fin n → E\n⊢ sorry * ∏ i, ‖sorry‖ ≤ sorry * ∏ i, ‖sorry‖ * ∏ j, ‖(v ∘ ⇑(c.embedding i)) j‖") - Line 3139
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 3141
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3143
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3145
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3146
LeanError(message='Lean error:\n<input>:3:90: unexpected end of input') - Line 3148
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.127608 ?m.127610') - Line 3149
LeanError(message='Lean error:\nsimp made no progress') - Line 3150
LeanError(message='Lean error:\nsimp made no progress') - Line 3151
LeanError(message='Lean error:\nsimp made no progress') - Line 3152
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3153
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 3155
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3156
LeanError(message='Lean error:\ninternal exception #5') - Line 3158
LeanError(message='Lean error:\nno goals to be solved') - Line 3161
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  y\nE : Type u_2\nF : Type u_3\nG : Type u_4\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : AddCommGroup F\ninst✝¹³ : AddCommGroup G\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : TopologicalSpace F\ninst✝¹⁰ : TopologicalSpace G\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : IsTopologicalAddGroup F\ninst✝⁷ : IsTopologicalAddGroup G\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : IsTopologicalAddGroup F\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : IsTopologicalAddGroup F\ninst✝² : IsTopologicalAddGroup G\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedAddCommGroup F\ng : F → G\nf : E → F\ny : F\nx : E\nt : Set F\ns : Set E\nhg : sorry\nhf : sorry\nh : Set.MapsTo f s t\nhy : f x = y\n⊢ sorry") - Line 3162
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  AnalyticAt ?m.115042 ?m.115050 ?m.115051\nE : Type u_2\nF : Type u_3\nG : Type u_4\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : AddCommGroup F\ninst✝¹³ : AddCommGroup G\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : TopologicalSpace F\ninst✝¹⁰ : TopologicalSpace G\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : IsTopologicalAddGroup F\ninst✝⁷ : IsTopologicalAddGroup G\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : IsTopologicalAddGroup F\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : IsTopologicalAddGroup F\ninst✝² : IsTopologicalAddGroup G\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedAddCommGroup F\ng : F → G\nf : E → F\nx : E\nhg : sorry\nhf : sorry\n⊢ sorry") - Line 3164
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  y\nE : Type u_2\nF : Type u_3\nG : Type u_4\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : AddCommGroup F\ninst✝¹³ : AddCommGroup G\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : TopologicalSpace F\ninst✝¹⁰ : TopologicalSpace G\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : IsTopologicalAddGroup F\ninst✝⁷ : IsTopologicalAddGroup G\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : IsTopologicalAddGroup F\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : IsTopologicalAddGroup F\ninst✝² : IsTopologicalAddGroup G\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedAddCommGroup F\ng : F → G\nf : E → F\ny : F\nx : E\nhg : sorry\nhf : sorry\nhy : f x = y\n⊢ sorry") - Line 3166
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  AnalyticAt ?m.115050 ?m.115058 ?m.115059\nE : Type u_2\nF : Type u_3\nG : Type u_4\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : AddCommGroup F\ninst✝¹³ : AddCommGroup G\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : TopologicalSpace F\ninst✝¹⁰ : TopologicalSpace G\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : IsTopologicalAddGroup F\ninst✝⁷ : IsTopologicalAddGroup G\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : IsTopologicalAddGroup F\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : IsTopologicalAddGroup F\ninst✝² : IsTopologicalAddGroup G\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedAddCommGroup F\ng : F → G\nf : E → F\nx : E\ns : Set E\nhg : sorry\nhf : sorry\n⊢ sorry") - Line 3168
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  y\nE : Type u_2\nF : Type u_3\nG : Type u_4\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : AddCommGroup F\ninst✝¹³ : AddCommGroup G\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : TopologicalSpace F\ninst✝¹⁰ : TopologicalSpace G\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : IsTopologicalAddGroup F\ninst✝⁷ : IsTopologicalAddGroup G\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : IsTopologicalAddGroup F\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : IsTopologicalAddGroup F\ninst✝² : IsTopologicalAddGroup G\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedAddCommGroup F\ng : F → G\nf : E → F\nx : E\ny : F\ns : Set E\nhg : sorry\nhf : sorry\nh : f x = y\n⊢ sorry") - Line 3169
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3174
LeanError(message="Lean error:\nunknown identifier 'sigmaCompositionAux'") - Line 3177
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3178
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.142102 r q p') - Line 3179
LeanError(message='Lean error:\nno goals to be solved') - Line 3180
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry ⊓ sorry\np : sorry\nq : sorry\n⊢ sorry = sorry ⊓ sorry") - Line 3220
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 3225
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 3226
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3273
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 3293
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 3294
LeanError(message='Lean error:\nsimp made no progress') - Line 3297
LeanError(message='Lean error:\nno goals to be solved') - Line 3300
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3304
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  GroupWithZero ?m.37404') - Line 3306
LeanError(message='Lean error:\napplication type mismatch\n  analyticAt_inverse (Units.mk0 ?m.32101 ?m.32558)\nargument\n  Units.mk0 ?m.32101 ?m.32558\nhas type\n  @Units ?m.32099 (@MonoidWithZero.toMonoid ?m.32099 GroupWithZero.toMonoidWithZero) : Type ?u.32098\nbut is expected to have type\n  @Units ?m.32094 (@MonoidWithZero.toMonoid ?m.32094 Semiring.toMonoidWithZero) : Type ?u.32090') - Line 3308
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3309
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3319
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3321
LeanError(message='Lean error:\nno goals to be solved') - Line 3329
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 3331
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 3332
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3336
LeanError(message='Lean error:\nsimp made no progress') - Line 3337
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3340
LeanError(message='Lean error:\nsimp made no progress') - Line 3341
LeanError(message='Lean error:\ninternal exception #5') - Line 3347
LeanError(message='Lean error:\ninternal exception #5') - Line 3348
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5716 p i x') - Line 3349
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.12009 p i x h') - Line 3350
LeanError(message='Lean error:\ninternal exception #5') - Line 3351
LeanError(message='Lean error:\ninternal exception #5') - Line 3352
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5716 p i x') - Line 3353
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3354
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddCommMonoid ?m.11321') - Line 3355
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5930 p i x h') - Line 3356
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 3357
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3358
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 3359
LeanError(message='Lean error:\nsimp made no progress') - Line 3360
LeanError(message="Lean error:\n<input>:14:23: expected ':' or term") - Line 3361
LeanError(message='Lean error:\ninternal exception #5') - Line 3362
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 3363
LeanError(message='Lean error:\ninternal exception #5') - Line 3370
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∀ᶠ (x : ?m.28948) in nhdsWithin ?m.28950 ?m.28951, ?m.28952 x\nE✝ : Type u_3\nf : E✝ → ℕ\nα✝ : Type u_4\nself✝² : NontriviallyNormedField α✝\ninst✝¹ : NormedAddCommGroup E✝\nself✝¹ : NormedSpace α✝ E✝\ninst✝ : NormedAddCommGroup ℕ\nself✝ : NormedSpace α✝ ℕ\np : FormalMultilinearSeries α✝ E✝ ℕ\nz₀ : E✝\nhp : HasFPowerSeriesAt f p z₀\nh : p ≠ 0\n⊢ ∀ᶠ (z : E✝) in nhdsWithin z₀ {z₀}ᶜ, f z ≠ 0") - Line 3372
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∀ᶠ (z : E✝) in nhds z₀, f z = 0) ∨ ∀ᶠ (z : E✝) in nhdsWithin z₀ {z₀}ᶜ, f z ≠ 0\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nE✝ : Type u_3\nf : E✝ → ℕ\nz₀ : E✝\nhf : AnalyticAt 𝕜 f z₀\n⊢ (∀ᶠ (z : E✝) in nhds z₀, f z = 0) ∨ ∀ᶠ (z : E✝) in nhdsWithin z₀ {z₀}ᶜ, f z ≠ 0") - Line 3374
LeanError(message='Lean error:\nno goals to be solved') - Line 3378
LeanError(message='Lean error:\nsimp made no progress') - Line 3379
LeanError(message='Lean error:\n<input>:4:7: expected end of input') - Line 3380
LeanError(message='Lean error:\nno goals to be solved') - Line 3382
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3390
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3424 ⁻¹' (?m.3425 ∪ ?m.3426)\n𝕜 : Type u_1\ninst✝¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝ : NormedAddCommGroup E\nU : Set 𝕜\ns : Set E\nf : 𝕜 → E\nhfU : sorry\nh₂f : ∀ x ∈ U, ¬Filter.EventuallyConst f (nhds x)\nhs : ∀ x ∈ f '' U, s ∪ (f '' U)ᶜ ∈ nhdsWithin x {x}ᶜ\nx : 𝕜\nhx : x ∈ U\n⊢ ?m.3210 ⊆ f ⁻¹' s ∪ Uᶜ") - Line 3392
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3395
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∑ i, ?g i\nE : Type u_2\nF : Type u_3\nn : ℕ\nf : sorry\nx : E\nv : Fin n → E\n⊢ sorry = ∑ σ, sorry") - Line 3397
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝¹ : Sort u_3\nc : x✝¹\nx✝ : Sort u_4\nofScalars : x✝\nn : ℕ\nhc : sorry = 0\n⊢ sorry = 0") - Line 3408
LeanError(message='Lean error:\nsimp made no progress') - Line 3411
LeanError(message='Lean error:\ntype mismatch\n  Function.mtr fun h => ?m.1090\nhas type\n  ?m.1084 → ?m.1083 : Prop\nbut is expected to have type\n  sorry a₁✝ = sorry a₂✝ → a₁✝ = a₂✝ : Prop') - Line 3412
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nE : Type u_2\ninst✝¹ : Ring E\ninst✝ : TopologicalSpace E\nx✝¹ : Sort u_3\nofScalars : x✝¹\nx✝ : Sort u_4\nc : x✝\nn : ℕ\n⊢ sorry = Pi.single 0 (sorry • 1) n") - Line 3414
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'ofScalars' has no definition") - Line 3416
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'ofScalars' has no definition") - Line 3417
LeanError(message="Lean error:\nunknown free variable '_fvar.1254'") - Line 3418
LeanError(message="Lean error:\nunknown free variable '_fvar.1254'") - Line 3419
LeanError(message="Lean error:\nunknown free variable '_fvar.1254'") - Line 3424
LeanError(message="Lean error:\nunknown free variable '_fvar.1254'") - Line 3425
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\n𝕜 : Type u_3\nE : Type u_4\ninst✝¹ : NontriviallyNormedField 𝕜\ninst✝ : SeminormedRing E\nx✝¹ : Sort u_5\nofScalars : x✝¹\nx✝ : Sort u_6\nc : x✝\nn : ℕ\n⊢ ‖sorry‖ = ‖sorry‖ * ‖sorry‖") - Line 3426
LeanError(message='Lean error:\nsimp made no progress') - Line 3427
LeanError(message='Lean error:\nsimp made no progress') - Line 3429
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ↑?r ≤ FormalMultilinearSeries.radius ?p\nwith\n  ↑r' ≤ sorry\ncase neg\nx✝¹ : Sort u_7\nc : x✝¹\nx✝ : Sort u_8\nofScalars : x✝\nr : NNReal\nhr : r ≠ 0\nhc : Filter.Tendsto (fun n => ‖?m.2626‖ / ‖?m.2704‖) Filter.atTop (nhds ↑r)\nr' : NNReal\nhr' : r' * r < 1\nhrz : ¬r' = 0\n⊢ ↑r' ≤ sorry") - Line 3430
LeanError(message="Lean error:\napplication type mismatch\n  FormalMultilinearSeries.summable_norm_mul_pow ?m.7121 hr'\nargument\n  hr'\nhas type\n  ↑r' < sorry : Prop\nbut is expected to have type\n  ↑?m.7122 < FormalMultilinearSeries.radius ?m.7121 : Prop") - Line 3431
LeanError(message='Lean error:\ninternal exception #5') - Line 3432
LeanError(message='Lean error:\nno goals to be solved') - Line 3433
LeanError(message='Lean error:\ntype mismatch\n  ENNReal.le_of_forall_nnreal_lt fun r hr => ?m.10616\nhas type\n  ?m.10602 ≤ ?m.10603 : Prop\nbut is expected to have type\n  sorry ≤ 0 : Prop') - Line 3434
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3435
LeanError(message="Lean error:\nunknown identifier 'order'") - Line 3436
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  0\n𝕜 : Type u_1\nx✝ : Type u_2\nf : x✝ → ℕ\nz₀ : x✝\nhf : sorry\n⊢ sorry = 0 ↔ f z₀ ≠ 0") - Line 3439
LeanError(message='Lean error:\ninternal exception #5') - Line 3440
LeanError(message="Lean error:\nunknown identifier 'order'") - Line 3441
LeanError(message='Lean error:\ntype mismatch\n  ENat.eq_of_forall_natCast_le_iff fun n => ?m.2690\nhas type\n  ?m.2656 = ?m.2657 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 3442
LeanError(message='Lean error:\n`sorry` is not a `fun_prop` goal! Maybe you forgot marking `sorryAx` with `@[fun_prop]`.') - Line 3443
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  AnalyticAt.order ?hf = ↑?m.473\n𝕜 : Sort u_1\nx✝ : Sort u_2\nanalyticAt_centeredMonomial : x✝\nz₀ : 𝕜\nn : ℕ\n⊢ sorry = n") - Line 3444
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Decidable (sorry = ⊤)') - Line 3445
LeanError(message='Lean error:\ntype mismatch\n  ENat.forall_natCast_le_iff_le.mp fun n => ?m.3814\nhas type\n  ?m.3643 ≤ ?m.3644 : Prop\nbut is expected to have type\n  sorry ⊓ sorry ≤ sorry : Prop') - Line 3448
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ?m.1702 ℕ ?m.1705 ?m.1706\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3449
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  min sorry sorry = sorry ∧ sorry ≤ sorry ∨ min sorry sorry = sorry ∧ sorry < sorry → sorry = sorry ⊓ sorry\n𝕜 : Type u_1\nx✝² : Type u_2\nx✝¹ : Type u_3\nf₁ : x✝² → x✝¹\nz₀ : x✝²\nx✝ : Type u_4\nf₂ : x✝² → x✝\nhf₁ : sorry\nhf₂ : sorry\nh : sorry ≠ sorry\n⊢ sorry = sorry ⊓ sorry") - Line 3450
LeanError(message="Lean error:\ntactic 'constructor' failed, target is not an inductive datatype\n𝕜 : Type ?u.368\nf : 𝕜 → ?m.382\nU : Set 𝕜\nhf : sorry\n⊢ sorry") - Line 3451
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  Nonempty ↑U → ((∃ u, ?m.1306 ≠ ⊤) ↔ ∀ (u : ↑U), ?m.1729 ≠ ⊤)\n𝕜✝ : Type u_1\nf : 𝕜✝ → ?m.382\nU✝ : Set 𝕜✝\nhf : sorry\n𝕜 : Type u_1\nU : Set 𝕜\nhU : sorry\nthis : sorry\n⊢ (∃ u, ?m.1306 ≠ ⊤) ↔ ∀ (u : ↑U), ?m.1729 ≠ ⊤") - Line 3452
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.10248 ∈ Filter.codiscrete ↑?m.10247\n𝕜✝ : Type u_1\nf : 𝕜✝ → ?m.382\nU✝ : Set 𝕜✝\nhf : sorry\n𝕜 : Type u_1\nU : Set 𝕜\n⊢ {u | sorry = 0 ∨ ?m.8423 = ⊤} ∈ sorry") - Line 3454
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Norm ?m.6968') - Line 3455
LeanError(message='Lean error:\ntype mismatch\n  UniformSpace.Completion.toComplL\nhas type\n  ?m.7850 →L[?m.7849] UniformSpace.Completion ?m.7850 : Type ?u.7847\nbut is expected to have type\n  sorry : Type u_3') - Line 3464
LeanError(message='Lean error:\ninternal exception #5') - Line 3465
LeanError(message='Lean error:\napplication type mismatch\n  mem_nhdsWithin.mp h\nargument\n  h\nhas type\n  {x} ∈ sorry : Prop\nbut is expected to have type\n  ?m.1467 ∈ nhdsWithin ?m.1468 ?m.1469 : Prop') - Line 3467
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nE : Type u_2\nF : Type u_3\nf : E → F\ns : Set E\nh : ∀ x ∈ s, ∃ u, IsOpen u ∧ x ∈ u ∧ sorry\n⊢ sorry") - Line 3468
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.1043 ?m.1045') - Line 3469
LeanError(message='Lean error:\nsimp made no progress') - Line 3511
LeanError(message='Lean error:\nsimp made no progress') - Line 3512
LeanError(message='Lean error:\ntype mismatch, term\n  Iff.comm\nafter simplification has type\n  (?m.9948 ↔ ?m.9949) ↔ (?m.9949 ↔ ?m.9948) : Prop\nbut is expected to have type\n  sorry ↔ (c₁ = 0 ↔ c₂ = 0) : Prop') - Line 3524
LeanError(message='Lean error:\nsimp made no progress') - Line 3525
LeanError(message='Lean error:\nsimp made no progress') - Line 3535
LeanError(message='Lean error:\nsimp made no progress') - Line 3536
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.1158 =o[?m.1157] ?m.1159\nα : Type u_3\nβ : Type u_4\ninst✝ : NormedField β\nu v : α → β\nl : Filter α\n⊢ (u - v) =o[l] v ↔ ∃ φ, ∃ (_ : Filter.Tendsto φ l (nhds 1)), u =ᶠ[l] φ * v") - Line 3560
LeanError(message='Lean error:\ntype mismatch\n  Eq.symm (div_mul_cancel_of_imp ?m.3075)\nhas type\n  ?m.3106 = ?m.3106 / ?m.2937 * ?m.2937 : Prop\nbut is expected to have type\n  u x = (sorry * v) x : Prop') - Line 3562
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3564
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1888 is not an inductive datatype') - Line 3565
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3567
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1\ncase intro.intro\nα : Type u_5\nβ : Type u_7\ninst✝ : NormedField β\nu v : α → β\nl : Filter α\nφ : α → β\nhφ : Filter.Tendsto φ l (nhds 1)\nh : u =ᶠ[l] φ * v\n⊢ ∃ φ, ∃ (_ : Filter.Tendsto φ l (nhds 1)), (fun x => (u x)⁻¹) =ᶠ[l] φ * fun x => (v x)⁻¹") - Line 3570
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3572
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 3573
LeanError(message='Lean error:\ninternal exception #5') - Line 3587
LeanError(message='Lean error:\ninternal exception #5') - Line 3588
LeanError(message='Lean error:\nsimp made no progress') - Line 3589
LeanError(message='Lean error:\ninternal exception #5') - Line 3597
LeanError(message='Lean error:\nsimp made no progress') - Line 3598
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 3602
LeanError(message='Lean error:\nsimp made no progress') - Line 3614
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3615
LeanError(message='Lean error:\nno goals to be solved') - Line 3620
LeanError(message='Lean error:\nsimp made no progress') - Line 3626
LeanError(message='Lean error:\nsimp made no progress') - Line 3631
LeanError(message='Lean error:\nno goals to be solved') - Line 3643
LeanError(message='Lean error:\nsimp made no progress') - Line 3644
LeanError(message='Lean error:\nsimp made no progress') - Line 3645
LeanError(message='Lean error:\nsimp made no progress') - Line 3649
LeanError(message='Lean error:\nsimp made no progress') - Line 3651
LeanError(message='Lean error:\nsimp made no progress') - Line 3653
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11668 is not an inductive datatype') - Line 3668
LeanError(message='Lean error:\nno goals to be solved') - Line 3682
LeanError(message='Lean error:\nsimp made no progress') - Line 3684
LeanError(message='Lean error:\nno goals to be solved') - Line 3686
LeanError(message='Lean error:\nsimp made no progress') - Line 3688
LeanError(message='Lean error:\nsimp made no progress') - Line 3690
LeanError(message='Lean error:\nno goals to be solved') - Line 3692
LeanError(message='Lean error:\nsimp made no progress') - Line 3694
LeanError(message='Lean error:\nsimp made no progress') - Line 3696
LeanError(message='Lean error:\nsimp made no progress') - Line 3705
LeanError(message='Lean error:\nsimp made no progress') - Line 3706
LeanError(message='Lean error:\nno goals to be solved') - Line 3707
LeanError(message='Lean error:\nsimp made no progress') - Line 3708
LeanError(message='Lean error:\nsimp made no progress') - Line 3709
LeanError(message='Lean error:\nsimp made no progress') - Line 3722
LeanError(message='Lean error:\nsimp made no progress') - Line 3723
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 3728
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the current goal\nx✝ : Sort u_8\nIsBigOWith : x✝\nh₁ : sorry\nh₂ : sorry\n⊢ sorry") - Line 3743
LeanError(message='Lean error:\nsimp made no progress') - Line 3780
LeanError(message='Lean error:\nsimp made no progress') - Line 3783
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  c' = sorry ∨ c' ≠ sorry → (sorry ↔ c' = 0 → c = 0)\nE'' : Type u_9\nF'' : Type u_8\nα : Type u_1\nc : E''\nc' : F''\nl : Filter α\ninst✝ : l.NeBot\n⊢ sorry ↔ c' = 0 → c = 0") - Line 3785
LeanError(message="Lean error:\nunknown free variable '_fvar.23729'") - Line 3815
LeanError(message="Lean error:\nunknown free variable '_fvar.23729'") - Line 3816
LeanError(message='Lean error:\n<input>:1:55: expected end of input') - Line 3822
LeanError(message='Lean error:\nno goals to be solved') - Line 3824
LeanError(message='Lean error:\ntype mismatch when assigning motive\n  fun {s} => ((i : ι) → i ∈ s → sorry) → sorry\nhas type\n  {s : Finset ι} → Sort (imax (imax (u_8 + 1) u_10) u_11) : Type (max u_8 (imax (imax (u_8 + 1) u_10) u_11))\nbut is expected to have type\n  Finset ι → Prop : Type u_8') - Line 3827
LeanError(message='Lean error:\nsimp made no progress') - Line 3829
LeanError(message='Lean error:\ntype mismatch\n  (fun h => Filter.liminf_le_limsup_of_frequently_le h ?m.2100 ?m.2101) (Filter.Frequently.mono h fun n u_v => ?m.2579)\nhas type\n  Filter.liminf ?m.2094 Filter.atTop ≤ Filter.limsup ?m.2095 Filter.atTop : Prop\nbut is expected to have type\n  sorry ≤ sorry : Prop') - Line 3840
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nu : ℕ → ENNReal\na : EReal\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ sorry ≤ a ↔ ∀ b > a, ∃ᶠ (n : ℕ) in Filter.atTop, u n ≤ (b * ↑n).exp") - Line 3841
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nu : ℕ → ENNReal\na : EReal\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ a ≤ sorry ↔ ∀ b < a, ∀ᶠ (n : ℕ) in Filter.atTop, (b * ↑n).exp ≤ u n") - Line 3842
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nu : ℕ → ENNReal\na : EReal\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ sorry ≤ a ↔ ∀ b > a, ∀ᶠ (n : ℕ) in Filter.atTop, u n ≤ (b * ↑n).exp") - Line 3843
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nu : ℕ → ENNReal\na : EReal\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ a ≤ sorry ↔ ∀ b < a, ∃ᶠ (n : ℕ) in Filter.atTop, (b * ↑n).exp ≤ u n") - Line 3844
LeanError(message='Lean error:\nno goals to be solved') - Line 3849
LeanError(message='Lean error:\nno goals to be solved') - Line 3850
LeanError(message='Lean error:\nno goals to be solved') - Line 3851
LeanError(message='Lean error:\nno goals to be solved') - Line 3852
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⊥\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ sorry = ⊥") - Line 3853
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.1825 = ⊥\nwith\n  sorry = ⊥\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ sorry = ⊥") - Line 3854
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⊤\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ sorry = ⊤") - Line 3855
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.1797 = ⊤\nwith\n  sorry = ⊤\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ sorry = ⊤") - Line 3856
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ sorry = b.log") - Line 3859
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ sorry = b.log") - Line 3860
LeanError(message='Lean error:\ntype mismatch\n  LE.le.trans_eq EReal.le_liminf_add (Filter.liminf_congr (Filter.Eventually.of_forall fun n => ?m.3655))\nhas type\n  Filter.liminf ?m.3405 ?m.3644 + Filter.liminf ?m.3406 ?m.3644 ≤ Filter.liminf ?m.3613 ?m.3644 : Prop\nbut is expected to have type\n  sorry + sorry ≤ sorry : Prop') - Line 3863
LeanError(message='Lean error:\nno goals to be solved') - Line 3864
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nx✝¹ : Sort u_1\nexpGrowthInf : x✝¹\nx✝ : Sort u_2\nexpGrowthSup : x✝\nh : sorry ≠ ⊥ ∨ sorry ≠ ⊤\nh' : sorry ≠ ⊤ ∨ sorry ≠ ⊥\n⊢ sorry ≤ sorry + sorry") - Line 3865
LeanError(message='Lean error:\ntype mismatch\n  LE.le.trans_eq EReal.le_limsup_add (Filter.limsup_congr (Filter.Eventually.of_forall fun n => ?m.3667))\nhas type\n  Filter.limsup ?m.3422 ?m.3656 + Filter.liminf ?m.3423 ?m.3656 ≤ Filter.limsup ?m.3625 ?m.3656 : Prop\nbut is expected to have type\n  sorry + sorry ≤ sorry : Prop') - Line 3866
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nx✝¹ : Sort u_1\nexpGrowthInf : x✝¹\nx✝ : Sort u_2\nexpGrowthSup : x✝\n⊢ sorry + sorry ≤ sorry") - Line 3867
LeanError(message='Lean error:\nno goals to be solved') - Line 3868
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝¹ : Sort u_1\nexpGrowthInf : x✝¹\nx✝ : Sort u_2\nexpGrowthSup : x✝\n⊢ sorry = -sorry") - Line 3869
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝¹ : Sort u_1\nexpGrowthSup : x✝¹\nx✝ : Sort u_2\nexpGrowthInf : x✝\n⊢ sorry = -sorry") - Line 3870
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.3155\nwith\n  sorry ≤ sorry\nu v : ℕ → ENNReal\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthInf : x✝\nhb : b ≠ ⊤\nh : ∀ᶠ (n : ℕ) in Filter.atTop, u n ≤ b * v n\n⊢ sorry ≤ sorry") - Line 3871
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.3155\nwith\n  sorry ≤ sorry\nu v : ℕ → ENNReal\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthSup : x✝\nhb : b ≠ ⊤\nh : ∀ᶠ (n : ℕ) in Filter.atTop, u n ≤ b * v n\n⊢ sorry ≤ sorry") - Line 3872
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.2951\nwith\n  sorry ≤ sorry\nu v : ℕ → ENNReal\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthInf : x✝\nhb : b ≠ 0\nh : ∀ᶠ (n : ℕ) in Filter.atTop, b * u n ≤ v n\n⊢ sorry ≤ sorry") - Line 3873
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.2951\nwith\n  sorry ≤ sorry\nu v : ℕ → ENNReal\nb : ENNReal\nx✝ : Sort u_1\nexpGrowthSup : x✝\nhb : b ≠ 0\nh : ∀ᶠ (n : ℕ) in Filter.atTop, b * u n ≤ v n\n⊢ sorry ≤ sorry") - Line 3874
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nexpGrowthInf : x✝\n⊢ sorry = sorry ⊓ sorry") - Line 3875
LeanError(message='Lean error:\ninternal exception #5') - Line 3876
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⨅ x, ?m.1735 x\nx✝ : Sort u_2\nexpGrowthInf : x✝\nι : Type u_1\ninst✝ : Finite ι\nu : ι → ℕ → ENNReal\n⊢ sorry = ⨅ i, ?m.75") - Line 3877
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nexpGrowthSup : x✝\n⊢ sorry = sorry ⊔ sorry") - Line 3878
LeanError(message='Lean error:\ninternal exception #5') - Line 3879
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⨆ x, ?m.1365 x\nx✝ : Sort u_2\nexpGrowthSup : x✝\nι : Type u_1\ninst✝ : Finite ι\nu : ι → ℕ → ENNReal\n⊢ sorry = ⨆ i, ?m.75") - Line 3880
LeanError(message='Lean error:\ninternal exception #5') - Line 3882
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3883
LeanError(message='Lean error:\nno goals to be solved') - Line 3885
LeanError(message='Lean error:\napplication type mismatch\n  EReal.mul_le_of_forall_lt_of_nonneg sorry uv_exp_0\nargument\n  uv_exp_0\nhas type\n  (0 : ℕ) ≤ sorry : Prop\nbut is expected to have type\n  (0 : EReal) ≤ sorry : Prop') - Line 3889
LeanError(message='Lean error:\ntype mismatch\n  Eventually.expGrowthSup_le ?m.5328\nhas type\n  ExpGrowth.expGrowthSup ?m.5326 ≤ ?m.5327 : Prop\nbut is expected to have type\n  sorry ≤ a * b : Prop') - Line 3890
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3891
LeanError(message='Lean error:\nno goals to be solved') - Line 3893
LeanError(message='Lean error:\napplication type mismatch\n  LE.le.trans_lt (Monotone.expGrowthInf_nonneg h u_0) u_b\nargument\n  u_b\nhas type\n  b > sorry : Prop\nbut is expected to have type\n  ExpGrowth.expGrowthInf u < ?m.6033 : Prop') - Line 3895
LeanError(message='Lean error:\nno goals to be solved') - Line 3896
LeanError(message='Lean error:\ninternal exception #5') - Line 3897
LeanError(message='Lean error:\ninternal exception #5') - Line 3898
LeanError(message='Lean error:\napplication type mismatch\n  Monotone.expGrowthInf_comp hu h\nargument\n  h\nhas type\n  Filter.Tendsto (fun n => ↑(m * n) / ↑n) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => ↑(?m.2078 n) / ↑n) Filter.atTop (nhds ↑m) : Prop') - Line 3899
LeanError(message='Lean error:\napplication type mismatch\n  Monotone.expGrowthSup_comp hu h\nargument\n  h\nhas type\n  Filter.Tendsto (fun n => ↑(m * n) / ↑n) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => ↑(?m.2078 n) / ↑n) Filter.atTop (nhds ↑m) : Prop') - Line 3900
LeanError(message='Lean error:\nsimp made no progress') - Line 3902
LeanError(message='Lean error:\napplication type mismatch\n  Iff.intro fun h x hx => norm_le_zero_iff.mp ?m.3433\nargument\n  fun h x hx => norm_le_zero_iff.mp ?m.3433\nhas type\n  ∀ (h : ?m.3393) (x : ?m.3434 h) (hx : ?m.3435 h x), ?m.3438 h x hx = 0 : Prop\nbut is expected to have type\n  ?m.3393 → ?m.3394 : Prop') - Line 3903
LeanError(message='Lean error:\ninternal exception #5') - Line 3904
LeanError(message='Lean error:\nsimp made no progress') - Line 3905
LeanError(message='Lean error:\nsimp made no progress') - Line 3906
LeanError(message="Lean error:\nunknown free variable '_fvar.2918'") - Line 3910
LeanError(message='Lean error:\nsimp made no progress') - Line 3911
LeanError(message='Lean error:\nsimp made no progress') - Line 3912
LeanError(message='Lean error:\nsimp made no progress') - Line 3915
LeanError(message="Lean error:\ntype mismatch\n  { mp := fun h => ?m.7884, mpr := ?m.7887 }\nhas type\n  ?m.7877 ↔ ?m.7878 : Prop\nbut is expected to have type\n  sorry ↔ (c = 0 → f'' =ᶠ[l] sorry) ∧ Filter.IsBoundedUnder (fun x1 x2 => x1 ≤ x2) l fun x => sorry : Prop") - Line 3922
LeanError(message='Lean error:\nsimp made no progress') - Line 3923
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 3924
LeanError(message='Lean error:\napplication type mismatch\n  Asymptotics.IsBigOWith.of_pow hC\nargument\n  hC\nhas type\n  @Asymptotics.IsBigOWith ?m.22712 ?m.22713 ?m.22714 ?m.22715 SeminormedAddCommGroup.toNorm C ?m.22719 ?m.22717\n    ?m.22718 : Prop\nbut is expected to have type\n  @Asymptotics.IsBigOWith ?m.24852 ?m.24853 ?m.24854 NormedRing.toNorm SeminormedRing.toNorm C ?m.24860 (?m.24858 ^ n)\n    (?m.24859 ^ n) : Prop') - Line 3929
LeanError(message='Lean error:\ntype mismatch\n  norm_ne_zero_iff.mpr ?m.67858\nhas type\n  ‖?m.67624‖ ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop') - Line 3935
LeanError(message='Lean error:\ntype mismatch\n  norm_ne_zero_iff.mpr ?m.67858\nhas type\n  ‖?m.67624‖ ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop') - Line 3936
LeanError(message='Lean error:\ntype mismatch\n  norm_ne_zero_iff.mpr ?m.67860\nhas type\n  ‖?m.67626‖ ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop') - Line 3937
LeanError(message='Lean error:\ntype mismatch\n  norm_ne_zero_iff.mpr ?m.67860\nhas type\n  ‖?m.67626‖ ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop') - Line 3938
LeanError(message='Lean error:\nsimp made no progress') - Line 3939
LeanError(message="Lean error:\nunknown free variable '_fvar.37795'") - Line 3940
LeanError(message="Lean error:\nunknown free variable '_fvar.37795'") - Line 3941
LeanError(message="Lean error:\nunknown free variable '_fvar.37795'") - Line 3942
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3944
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3947
LeanError(message='Lean error:\nsimp made no progress') - Line 3954
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  c = sorry ∨ c ≠ sorry → (sorry ↔ c = 0 ∨ Filter.Tendsto (norm ∘ g'') l Filter.atTop)\nE'' : Type u_8\nF'' : Type u_9\nα : Type u_1\ng'' : α → F''\nl : Filter α\nc : E''\n⊢ sorry ↔ c = 0 ∨ Filter.Tendsto (norm ∘ g'') l Filter.atTop") - Line 3955
LeanError(message='Lean error:\nsimp made no progress') - Line 3956
LeanError(message='Lean error:\nsimp made no progress') - Line 3961
LeanError(message='Lean error:\n<input>:4:10: expected end of input') - Line 3962
LeanError(message='Lean error:\n<input>:2:27: expected end of input') - Line 3964
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3965
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SeminormedAddCommGroup ?m.39945') - Line 3966
LeanError(message='Lean error:\nno goals to be solved') - Line 3967
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto.isBigO_one 𝕜 hv\nargument\n  hv\nhas type\n  Filter.Tendsto v l\n    (@nhds 𝕜\n      (@UniformSpace.toTopologicalSpace 𝕜 (@PseudoMetricSpace.toUniformSpace 𝕜 SeminormedRing.toPseudoMetricSpace))\n      y) : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.42350 ?m.42351\n    (@nhds ?m.42347\n      (@UniformSpace.toTopologicalSpace ?m.42347\n        (@PseudoMetricSpace.toUniformSpace ?m.42347 SeminormedAddCommGroup.toPseudoMetricSpace))\n      ?m.42354) : Prop') - Line 3969
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ c > 0, n = m + c) → (fun x => sorry) =o[nhds 0] fun x => sorry\n𝕜 : Type u_8\ninst✝ : NormedDivisionRing 𝕜\nm n : ℕ\nh : m < n\n⊢ (fun x => sorry) =o[nhds 0] fun x => sorry") - Line 3970
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.70599\nargument\n  ?m.70599\nhas type\n  ((fun x => sorry) =o[nhds 0] fun x => x) = ?m.70595 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 3972
LeanError(message='Lean error:\ninternal exception #5') - Line 3973
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nhds ?a\nE'' : Type u_9\nF'' : Type u_8\nf : E'' → F''\nx₀ : E''\nn : ℕ\nh : sorry\nhn : n ≠ 0\n⊢ f x₀ = 0") - Line 3975
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Filter.Tendsto ((fun a => ‖a‖) ∘ ?m.41593) ?m.41595 (nhds 0)\nwith\n  Filter.Tendsto (fun x => ‖x - x₀‖) (nhds x₀) (nhds 0)\nE' : Type u_6\ninst✝ : SeminormedAddCommGroup E'\nx₀ : E'\nn m : ℕ\nh : n < m\n⊢ Filter.Tendsto (fun x => ‖x - x₀‖) (nhds x₀) (nhds 0)") - Line 3976
LeanError(message="Lean error:\nrcases tactic failed: x✝ : F'' is not an inductive datatype") - Line 3983
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3984
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.atTop\nE'' : Type u_9\nF'' : Type u_8\nf : ℕ → E''\ng : ℕ → F''\nh : ∀ (x : ℕ), g x = 0 → f x = 0\n⊢ sorry ↔ ∃ C, ∀ (x : ℕ), sorry ≤ C * sorry") - Line 3986
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 3988
LeanError(message='Lean error:\ninternal exception #5') - Line 3989
LeanError(message='Lean error:\nsimp made no progress') - Line 3990
LeanError(message='Lean error:\nsimp made no progress') - Line 3991
LeanError(message='Lean error:\ninternal exception #5') - Line 3994
LeanError(message='Lean error:\nsimp made no progress') - Line 3995
LeanError(message='Lean error:\ninternal exception #5') - Line 3996
LeanError(message='Lean error:\ninternal exception #5') - Line 4010
LeanError(message='Lean error:\nno goals to be solved') - Line 4011
LeanError(message='Lean error:\nno goals to be solved') - Line 4012
LeanError(message='Lean error:\nno goals to be solved') - Line 4013
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Filter.Tendsto\n    (fun x => @HPow.hPow ?α ℤ ?α (@instHPow ?α ℤ (@DivInvMonoid.toZPow ?α GroupWithZero.toDivInvMonoid)) x ?n)\n    Filter.atTop Filter.atTop\nwith\n  Filter.Tendsto\n    (fun x => @HPow.hPow 𝕜 ℤ 𝕜 (@instHPow 𝕜 ℤ (@DivInvMonoid.toZPow 𝕜 DivisionRing.toDivInvMonoid)) x (↑p - ↑q))\n    Filter.atTop Filter.atTop\n𝕜 : Type u_1\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\np q : ℕ\nhpq : q < p\n⊢ Filter.Tendsto (fun x => x ^ (↑p - ↑q)) Filter.atTop Filter.atTop") - Line 4014
LeanError(message='Lean error:\nfailed to synthesize\n  OrderTopology 𝕜\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4015
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 4016
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SeminormedAddCommGroup ?m.1464') - Line 4017
LeanError(message='Lean error:\ninternal exception #4') - Line 4018
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedAddCommGroup ?m.3290') - Line 4019
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.Tendsto ?m.5208 ?m.5205 (nhds 0)\nE : Type u_3\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nu : ℕ → E\nl : E\nh : Filter.Tendsto u Filter.atTop (nhds l)\n⊢ Filter.Tendsto (fun x => (↑x)⁻¹ • ∑ i ∈ Finset.range x, u i - l) Filter.atTop (nhds 0)") - Line 4020
LeanError(message='Lean error:\napplication type mismatch\n  Asymptotics.isEquivalent_of_tendsto_one ?m.2593 tendsto_nat_floor_div_atTop\nargument\n  tendsto_nat_floor_div_atTop\nhas type\n  Filter.Tendsto (fun x => ↑⌊x⌋₊ / x) Filter.atTop (nhds 1) : Prop\nbut is expected to have type\n  Filter.Tendsto ((fun x => sorry) / fun x => x) Filter.atTop (nhds 1) : Prop') - Line 4022
LeanError(message='Lean error:\napplication type mismatch\n  Asymptotics.isEquivalent_of_tendsto_one ?m.2593 tendsto_nat_ceil_div_atTop\nargument\n  tendsto_nat_ceil_div_atTop\nhas type\n  Filter.Tendsto (fun x => ↑⌈x⌉₊ / x) Filter.atTop (nhds 1) : Prop\nbut is expected to have type\n  Filter.Tendsto ((fun x => sorry) / fun x => x) Filter.atTop (nhds 1) : Prop') - Line 4023
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4033
LeanError(message='Lean error:\ninternal exception #5') - Line 4040
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 4044
LeanError(message='Lean error:\n<input>:2:11: expected end of input') - Line 4045
LeanError(message='Lean error:\ninternal exception #5') - Line 4046
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4052
LeanError(message='Lean error:\nno goals to be solved') - Line 4056
LeanError(message='Lean error:\nno goals to be solved') - Line 4057
LeanError(message='Lean error:\nno goals to be solved') - Line 4058
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nα : Type u_1\nG : Type u_6\nk : α → G\nhfg : sorry\nhgk : sorry\n⊢ sorry") - Line 4063
LeanError(message='Lean error:\ntype mismatch\n  Iff.trans (Filter.HasBasis.forall_iff sorry ?m.10873)\n    (forall₂_congr fun x x_1 => Filter.HasBasis.exists_iff sorry ?m.10957)\nhas type\n  (∀ s ∈ ?m.10832, Exists s) ↔\n    ∀ (a : ?m.10890) (b : ?m.10891 a), ∃ i, ?m.10973 a b i ∧ ?m.10963 a (?m.10974 a b i) : Prop\nbut is expected to have type\n  sorry ↔ ∀ (i : ιE), pE i → ∃ j, pF j ∧ ∀ (ε : NNReal), ε ≠ 0 → ∀ᶠ (x : α) in l, sorry ≤ ε * sorry : Prop') - Line 4064
LeanError(message='Lean error:\nsimp made no progress') - Line 4069
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nα : Type u_1\nF : Type u_5\ng : α → F\nl : Filter α\n⊢ sorry") - Line 4071
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nhdsWithin ?a (insert ?a ?s)\nα : Type u_1\nE : Type u_4\nf : α → E\ninst✝ : TopologicalSpace α\nx : α\ns : Set α\nh : f x = 0\n⊢ sorry ↔ sorry") - Line 4072
LeanError(message="Lean error:\nTactic 'peel' could not match quantifiers in\n  sorry\nand\n  ∀ U ∈ nhds 0,\n    ∃ V ∈ nhds 0,\n      ∀ (ε : NNReal), ε ≠ 0 → ∀ᶠ (x : α) in l, egauge 𝕜 U ((fun x => sorry) x) ≤ ↑ε * egauge 𝕜 V ((fun x => sorry) x)") - Line 4076
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4968 is not an inductive datatype') - Line 4080
LeanError(message='Lean error:\n<input>:7:25: unexpected end of input') - Line 4081
LeanError(message='Lean error:\n<input>:3:40: unexpected end of input') - Line 4082
LeanError(message='Lean error:\nno goals to be solved') - Line 4083
LeanError(message='Lean error:\ninternal exception #5') - Line 4099
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto.smul ?m.12463\nargument\n  ?m.12463\nhas type\n  Filter.Tendsto ?m.11948 ?m.11949 sorry : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.12488 ?m.12490 (nhds ?m.12491) : Prop') - Line 4120
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 4123
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 4127
LeanError(message='Lean error:\ninternal exception #5') - Line 4128
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.20405 → dist sorry sorry ≤ ε₁ + ε₂\nIntegrationParams : Sort ?u.14278\nTaggedPrepartition : ?m.14166\nι : Type u\nE : Type v\nF : Type w\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace ℝ E\ninst✝ : Fintype ι\nl : IntegrationParams\nf g : (ι → ℝ) → E\nvol : sorry\ny y' : F\nc c₁ c₂ : NNReal\nε ε₁✝ ε₂✝ : ℝ\nπ₁ : sorry\nπ₂ : sorry\nε₁ ε₂ : ℝ\nx✝¹ : Sort u_1\nIntegrable : x✝¹\nx✝ : Sort u_2\nintegralSum : x✝\nh : sorry\nhpos₁ : 0 < ε₁\nhpos₂ : 0 < ε₂\nh₁ : sorry\nh₂ : sorry\nHU : sorry = sorry\n⊢ dist sorry sorry ≤ ε₁ + ε₂") - Line 4129
LeanError(message='Lean error:\nno goals to be solved') - Line 4130
LeanError(message='Lean error:\ntype mismatch\n  ⟨sorry, ?m.20297⟩\nhas type\n  ?m.20293 ∧ ?m.20289 : Prop\nbut is expected to have type\n  Cauchy sorry : Prop') - Line 4131
LeanError(message='Lean error:\ntype mismatch\n  Exists.imp (fun y hy => ?m.31450) (cauchy_map_iff_exists_tendsto.mp sorry)\nhas type\n  ∃ a, ?m.31439 a : Prop\nbut is expected to have type\n  ∃ y, sorry ∧ Filter.Tendsto ?m.28646 sorry (nhds y) : Prop') - Line 4132
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddLeftReflectLT ?m.33392') - Line 4135
LeanError(message='Lean error:\nno goals to be solved') - Line 4137
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Filter.NeBot ?m.35086') - Line 4138
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 4145
LeanError(message='Lean error:\n<input>:2:99: unexpected end of input') - Line 4146
LeanError(message='Lean error:\ntype mismatch\n  sub_eq_zero.mpr (Eq.symm hx)\nhas type\n  g x - f x = 0 : Prop\nbut is expected to have type\n  sorry x = 0 x : Prop') - Line 4147
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4148
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3658 is not an inductive datatype') - Line 4150
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3196 is not an inductive datatype') - Line 4151
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3646 is not an inductive datatype') - Line 4152
LeanError(message='Lean error:\nsimp made no progress') - Line 4156
LeanError(message='Lean error:\nsimp made no progress') - Line 4157
LeanError(message='Lean error:\ntype mismatch\n  fun x x_1 h => funext_iff.mpr fun i => ?m.922\nhas type\n  ∀ (x x_1 : ι → ℤ), ?m.932 x x_1 → x = x_1 : Prop\nbut is expected to have type\n  Function.Injective fun ν => ?m.462 : Prop') - Line 4159
LeanError(message='Lean error:\nno goals to be solved') - Line 4160
LeanError(message='Lean error:\nsimp made no progress') - Line 4162
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ¬?m.4204 ↔ ?m.4205\nι : Type u_1\nx✝ : Sort u_2\nbox : x✝\nν ν' : ι → ℤ\n⊢ ν ≠ ν' ↔ Disjoint sorry sorry") - Line 4164
LeanError(message='Lean error:\ntype mismatch\n  Mathlib.Tactic.Contrapose.mtr ?m.907\nhas type\n  ?m.905 → ?m.906 : Prop\nbut is expected to have type\n  (fun ν => ?m.467) a₁✝ = (fun ν => ?m.467) a₂✝ → a₁✝ = a₂✝ : Prop') - Line 4165
LeanError(message='Lean error:\nsimp made no progress') - Line 4166
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => Metric.diam _a ≤ 1 / ↑n\nError: application type mismatch\n  @?m.5258 ι n box\nargument\n  box\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.5257 n : Sort u_2\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nι : Type u_1\nn : ℕ\nx✝ : Sort u_2\nbox : x✝\nν : ι → ℤ\n⊢ Metric.diam (BoxIntegral.Box.Icc sorry) ≤ 1 / ↑n") - Line 4167
LeanError(message='Lean error:\nsimp made no progress') - Line 4168
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nι : Type u_1\nx✝¹ : Sort u_2\nadmissibleIndex : x✝¹\nx✝ : Sort u_3\nbox : x✝\nB : BoxIntegral.Box ι\nν : ι → ℤ\n⊢ ν ∈ sorry ↔ sorry ≤ B") - Line 4170
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4171
LeanError(message='Lean error:\nno goals to be solved') - Line 4173
LeanError(message="Lean error:\ntactic 'subst' failed, invalid equality proof, it is not of the form (x = t) or (t = x)\n  ∀ (i : ι), ν i < hν i\ncase mk\nι : Type u_1\nx✝¹ : Sort u_2\nprepartition : x✝¹\nx✝ : Sort u_3\nbox : x✝\nB I : BoxIntegral.Box ι\nhI : I ∈ sorry\nν hν : ι → ℝ\nlower_lt_upper✝ : ∀ (i : ι), ν i < hν i\n⊢ { lower := ν, upper := hν, lower_lt_upper := lower_lt_upper✝ } = I") - Line 4174
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nι : Type u_1\nx✝ : Sort u_2\nprepartition : x✝\nB : BoxIntegral.Box ι\n⊢ sorry") - Line 4175
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nn : ℕ\nι : Type u_1\nx✝ : Sort u_2\nprepartition : x✝\nB : BoxIntegral.Box ι\nr : ℝ\nhr : 0 < r\nhn : 1 / ↑n ≤ r\n⊢ sorry") - Line 4176
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry ∈ sorry\nι : Type u_1\nx✝¹ : Sort u_2\nadmissibleIndex : x✝¹\nx✝ : Sort u_3\nindex : x✝\nB : BoxIntegral.Box ι\nhB : BoxIntegral.hasIntegralVertices B\nx : ι → ℝ\nhx : x ∈ B\n⊢ sorry ∈ sorry") - Line 4179
LeanError(message='Lean error:\ntype mismatch\n  fun x hx => ?m.906\nhas type\n  (x : ?m.899) → (hx : ?m.907 x) → ?m.908 x hx : Sort (imax ?u.898 ?u.901 ?u.904)\nbut is expected to have type\n  sorry : Sort u_3') - Line 4180
LeanError(message='Lean error:\nno goals to be solved') - Line 4182
LeanError(message='Lean error:\ninternal exception #5') - Line 4183
LeanError(message='Lean error:\ninternal exception #5') - Line 4184
LeanError(message='Lean error:\napplication type mismatch\n  tendsto_tsum_div_pow_atTop_integral s\nargument\n  s\nhas type\n  Set α✝ : Type u_2\nbut is expected to have type\n  Set (?m.16195 → ℝ) : Type ?u.16194') - Line 4187
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem (Filter.eventually_ge_atTop 1) ?m.33958\nhas type\n  ?m.33964 ∈ Filter.atTop : Prop\nbut is expected to have type\n  ∀ᶠ (x : ℝ) in Filter.atTop,\n    ↑(Nat.card ↑(s ∩ (↑⌊x⌋₊)⁻¹ • L)) / x ^ sorry ≤ ↑(Nat.card ↑(s ∩ x⁻¹ • L)) / x ^ sorry : Prop') - Line 4189
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem (Filter.eventually_gt_atTop 0) ?m.33588\nhas type\n  ?m.33594 ∈ Filter.atTop : Prop\nbut is expected to have type\n  ∀ᶠ (x : ℝ) in Filter.atTop,\n    ↑(Nat.card ↑(s ∩ x⁻¹ • L)) / x ^ sorry ≤ ↑(Nat.card ↑(s ∩ (↑⌈x⌉₊)⁻¹ • L)) / x ^ sorry : Prop') - Line 4190
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem (Filter.eventually_ge_atTop 1) ?m.14524\nhas type\n  ?m.14530 ∈ Filter.atTop : Prop\nbut is expected to have type\n  (fun x => ↑(Nat.card (s ∩ (↑⌊x⌋₊)⁻¹ • L)) / ↑⌊x⌋₊ ^ sorry * (↑⌊x⌋₊ / x) ^ sorry) =ᶠ[Filter.atTop] fun x =>\n    ↑(Nat.card sorry) / x ^ sorry : Prop') - Line 4191
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem (Filter.eventually_ge_atTop 1) ?m.14524\nhas type\n  ?m.14530 ∈ Filter.atTop : Prop\nbut is expected to have type\n  (fun x => ↑(Nat.card (s ∩ (↑⌈x⌉₊)⁻¹ • L)) / ↑⌈x⌉₊ ^ sorry * (↑⌈x⌉₊ / x) ^ sorry) =ᶠ[Filter.atTop] fun x =>\n    ↑(Nat.card sorry) / x ^ sorry : Prop') - Line 4192
LeanError(message='Lean error:\ninternal exception #5') - Line 4193
LeanError(message='Lean error:\nsimp made no progress') - Line 4194
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 4196
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : sorry is not an inductive datatype') - Line 4218
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.3211 → Bornology.IsBounded sorry\nBox : ?m.1681\nι✝ : Type u_1\nI✝ : sorry\nJ : sorry\nx y : ι✝ → ℝ\nι : Type u_1\ninst✝ : Finite ι\nI : sorry\n⊢ Bornology.IsBounded sorry") - Line 4231
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4237
LeanError(message='Lean error:\nsimp made no progress') - Line 4238
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nBox : ?m.1691\nι✝ : Sort u_3\nI : sorry\nJ : sorry\nx y : ι✝ → ℝ\nι : Sort u_3\nx✝ : Sort u_1\nmk' : x✝\nl u : ι → ℝ\n⊢ sorry = ⊥ ↔ ∃ i, u i ≤ l i") - Line 4239
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 4240
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 4241
LeanError(message='Lean error:\nsimp made no progress') - Line 4256
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.64491 i ≤ Finset.univ.sup ?m.64491\nwith\n  nndist sorry sorry / nndist sorry sorry ≤ sorry\ncase bc\nBox : ?m.2540\nι✝ : Type u_4\nI✝ : sorry\nJ : sorry\nx y : ι✝ → ℝ\ninst✝¹ : Fintype ι✝\nι : Type u_4\ninst✝ : Fintype ι\nI : sorry\ni : ι\n⊢ nndist sorry sorry / nndist sorry sorry ≤ sorry") - Line 4257
LeanError(message='Lean error:\ntype mismatch\n  sub_neg.mpr sorry\nhas type\n  @HSub.hSub ?m.4252 ?m.4252 ?m.4252 (@instHSub ?m.4252 SubNegMonoid.toSub) ?m.4452 ?m.4453 < 0 : Prop\nbut is expected to have type\n  @HSub.hSub ℕ ℕ ℕ (@instHSub ℕ instSubNat) sorry sorry < 0 : Prop') - Line 4258
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 4259
LeanError(message='Lean error:\ninternal exception #5') - Line 4265
LeanError(message='Lean error:\ninternal exception #5') - Line 4267
LeanError(message='Lean error:\ninternal exception #5') - Line 4268
LeanError(message='Lean error:\ninternal exception #5') - Line 4269
LeanError(message='Lean error:\nsimp made no progress') - Line 4270
LeanError(message='Lean error:\ninternal exception #5') - Line 4271
LeanError(message='Lean error:\nno goals to be solved') - Line 4275
LeanError(message='Lean error:\n<input>:2:17: expected end of input') - Line 4276
LeanError(message='Lean error:\ninternal exception #5') - Line 4277
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  DecidablePred ?m.4758') - Line 4296
LeanError(message='Lean error:\ninternal exception #5') - Line 4299
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4308
LeanError(message="Lean error:\nunknown free variable '_fvar.19671'") - Line 4318
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4328
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4329
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  DecidableEq ?m.26384') - Line 4332
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  DecidableEq ?m.26429') - Line 4333
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  OrderBot ?m.26850') - Line 4337
LeanError(message='Lean error:\ninternal exception #5') - Line 4342
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type u_5), ∑ J ∈ sorry, f J = ∑ J ∈ sorry, f J\nBox : ?m.877\nι✝ : Type u_1\nM : Type u_2\nn : ℕ\nN : Type u_3\ninst✝² : AddCommMonoid M\ninst✝¹ : AddCommMonoid N\nI₀ : WithTop sorry\nI : sorry\nι : Type u_1\nx✝ : Sort u_4\nPrepartition : x✝\ninst✝ : Finite ι\nf : ι → sorry\nhI : sorry\nπ₁ : sorry\nπ₂ : sorry\nh : sorry = sorry\n⊢ ∑ J ∈ sorry, f J = ∑ J ∈ sorry, f J") - Line 4343
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : sorry is not an inductive datatype') - Line 4354
LeanError(message='Lean error:\ninternal exception #5') - Line 4362
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => {J ∈ sorry | x ∈ sorry}.card ≤ _a\nError: unknown free variable '_fvar.5828'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nBox : ?m.2912\nPrepartition : ?m.2928\nι✝ : Type u_1\nI : sorry\nJ : sorry\nJ₁ : sorry\nJ₂ : sorry\nπ : sorry\nπ₁ : sorry\nπ₂ : sorry\nx✝ : ι✝ → ℝ\nι : Type u_1\ninst✝ : Fintype ι\nx : ι → ℝ\n⊢ {J ∈ sorry | x ∈ sorry}.card ≤ 2 ^ Fintype.card ι") - Line 4363
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 4379
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.11658 ⋯ hi') - Line 4380
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  DecidableEq ?m.11902') - Line 4383
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Decidable (?m.11852 ∈ sorry)') - Line 4385
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.11635 πi πi'") - Line 4389
LeanError(message='Lean error:\nfailed to synthesize\n  Nonempty (sorry ())\n(deterministic) timeout at `typeclass`, maximum number of heartbeats (20000) has been reached\nUse `set_option synthInstance.maxHeartbeats <num>` to set the limit.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4392
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nBox : ?m.6068\nPrepartition : ?m.6084\nι : Sort ?u.6134\nI : sorry\nJ : sorry\nJ₁ : sorry\nJ₂ : sorry\nπ : sorry\nπ₁ : sorry\nπ₂ : sorry\nx : ι → ℝ\nπi : sorry → sorry\nπi₁ : sorry → sorry\nπi₂ : sorry → sorry\nx✝ : Sort u_1\nofWithBot : x✝\nboxes : Finset (WithBot sorry)\nle_of_mem : (J : WithBot sorry) → J ∈ boxes → sorry\npairwise_disjoint : (↑boxes).Pairwise sorry\nH : WithBot sorry → sorry → ∃ J' ∈ boxes, sorry\n⊢ sorry") - Line 4393
LeanError(message="Lean error:\napplication type mismatch\n  [anonymous].left\nargument\n  [anonymous]\nhas type\n  sorry () ∧ ↑J₁ = ↑J ⊓ J' : Prop\nbut is expected to have type\n  ?a ∧ ?b : Prop") - Line 4396
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4398
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4400
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nBox : ?m.6068\nPrepartition : ?m.6084\nι : Sort ?u.6134\nI : sorry\nJ : sorry\nJ₁ : sorry\nJ₂ : sorry\nπ : sorry\nπ₁ : sorry\nπ₂ : sorry\nx : ι → ℝ\nπi✝ : sorry → sorry\nπi₁ : sorry → sorry\nπi₂ : sorry → sorry\nπi : ?m.11938 → sorry\nπ' : sorry\n⊢ sorry ↔ ?m.11938 → sorry → sorry") - Line 4404
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun H => ?m.12301, mpr := ?m.12304 }\nhas type\n  ?m.12294 ↔ ?m.12295 : Prop\nbut is expected to have type\n  sorry ↔ sorry ∧ (?m.11987 → sorry → sorry) : Prop') - Line 4405
LeanError(message='Lean error:\nsimp made no progress') - Line 4407
LeanError(message='Lean error:\nsimp made no progress') - Line 4408
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4409
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 4411
LeanError(message='Lean error:\nsimp made no progress') - Line 4413
LeanError(message='Lean error:\napplication type mismatch\n  @Finset.mem_image_of_mem sorry ?m.11924 ?m.12468 ?m.11927 f\nargument\n  f\nhas type\n  sorry → α : Sort (imax u_4 u_1)\nbut is expected to have type\n  sorry → ?m.11924 : Type (max ?u.11921 u_5)') - Line 4414
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  DecidableEq ?m.16969') - Line 4420
LeanError(message='Lean error:\nsimp made no progress') - Line 4425
LeanError(message='Lean error:\ntype mismatch\n  if hD : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.17910 : Sort ?u.17909\nbut is expected to have type\n  ∃ π_1, sorry = I \\ sorry ∧ (sorry → sorry ≤ c₁) ∧ (sorry → sorry ≤ c₂) : Prop') - Line 4446
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4448
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4449
LeanError(message="Lean error:\nunknown free variable '_fvar.17135'") - Line 4454
LeanError(message='Lean error:\ninternal exception #5') - Line 4457
LeanError(message='Lean error:\ntype mismatch, term\n  Filter.hasBasis_iSup sorry\nafter simplification has type\n  (⨆ i, ?m.17264 i).HasBasis (fun f => ∀ (i : ?m.17262), ?m.17265 i (f i)) fun f => ⋃ i, ?m.17266 i (f i) : Prop\nbut is expected to have type\n  sorry : Sort u_3') - Line 4459
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 4460
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Prop), ∃ π, x ∧ sorry ≤ π₀ ∧ ?m.17888 = ?m.17891\nBox : ?m.13381\nIntegrationParams✝ : Sort u_6\nTaggedPrepartition : ?m.14258\nι✝ : Type u_1\ninst✝¹ : Fintype ι✝\nI : sorry\nJ : sorry\nc✝ c₁ c₂ : NNReal\nl✝ l₁ l₂ : IntegrationParams✝\nr₁ r₂ : (ι✝ → ℝ) → ↑(Set.Ioi 0)\nπ : sorry\nπ₁ : sorry\nπ₂ : sorry\nIntegrationParams : Sort u_6\nι : Type u_1\ninst✝ : Fintype ι\nc : NNReal\nx✝ : Sort u_2\nPrepartition : x✝\nl : IntegrationParams\nπ₀ : sorry\nhc₁ : sorry ≤ c\nhc₂ : sorry ≤ c\nr : (ι → ℝ) → ↑(Set.Ioi 0)\n⊢ ∃ π, sorry ∧ sorry ≤ π₀ ∧ ?m.17888 = ?m.17891") - Line 4461
LeanError(message='Lean error:\ninternal exception #5') - Line 4462
LeanError(message='Lean error:\ninternal exception #5') - Line 4475
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  x ≤ sorry ∨ sorry < x → sorry ≠ sorry\nBox : ?m.438\nι✝ : Sort u_3\nI✝ : sorry\ni✝ : ι✝\nx✝ : ℝ\ny : ι✝ → ℝ\nι : Sort u_3\nI : sorry\ni : ι\nx : ℝ\n⊢ sorry ≠ sorry") - Line 4476
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4481
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 4482
LeanError(message='Lean error:\nno goals to be solved') - Line 4485
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nBox : ?m.954\nι✝ : Type u_4\nI✝¹ : sorry\ni✝ : ι✝\nx✝² : ℝ\ny : ι✝ → ℝ\nI✝ : sorry\nJ : sorry\ni : ι✝\nx : ℝ\nι : Type u_4\nx✝¹ : Sort u_1\nsplitMany : x✝¹\nx✝ : Sort u_2\nsplit : x✝\nI : sorry\ns : Finset (ι × ℝ)\np : ι × ℝ\n⊢ sorry = sorry ⊓ sorry") - Line 4488
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4490
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4492
LeanError(message="Lean error:\nunknown free variable '_fvar.2203'") - Line 4493
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4494
LeanError(message='Lean error:\nno goals to be solved') - Line 4495
LeanError(message='Lean error:\nno goals to be solved') - Line 4497
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Sort u_3), ∃ π', sorry = I \\ sorry\nBox : ?m.2215\nι : Sort ?u.2227\nI✝¹ : sorry\ni✝ : ι\nx✝¹ : ℝ\ny : ι → ℝ\nI✝ : sorry\nJ : sorry\ni : ι\nx : ℝ\ninst✝ : Finite ι\nI : sorry\nx✝ : Sort u_1\nPrepartition : x✝\nπ : sorry\n⊢ ∃ π', sorry = I \\ sorry") - Line 4498
LeanError(message='Lean error:\nno goals to be solved') - Line 4500
LeanError(message='Lean error:\ninternal exception #5') - Line 4503
LeanError(message='Lean error:\ninternal exception #5') - Line 4504
LeanError(message='Lean error:\ninternal exception #5') - Line 4506
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5689 is not an inductive datatype') - Line 4510
LeanError(message='Lean error:\ninternal exception #5') - Line 4511
LeanError(message="Lean error:\nTactic 'peel' could not match quantifiers in\n  ?m.4109\nand\n  ∃ k, (sorry ∧ sorry < 1) ∧ {x | sorry} ⊆ {x | sorry} ∩ {x | sorry}") - Line 4512
LeanError(message='Lean error:\ninternal exception #5') - Line 4514
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  RegularNormedAlgebra ℂ (?m.14459 z hx₀ hxy hy₁ hc h)') - Line 4516
LeanError(message='Lean error:\ninternal exception #5') - Line 4517
LeanError(message='Lean error:\ntype mismatch\n  norm_pos_iff.mpr one_ne_zero\nhas type\n  (0 : ℝ) < ‖1‖ : Prop\nbut is expected to have type\n  (0 : ℕ) < sorry : Prop') - Line 4532
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.11024‖ = 1\nE : Type u_2\ninst✝⁹ : SeminormedAddCommGroup E\ninst✝⁸ : StarAddMonoid E\ninst✝⁷ : NormedStarGroup E\ninst✝⁶ : NonUnitalNormedRing E\ninst✝⁵ : StarRing E\ninst✝⁴ : CStarRing E\ninst✝³ : NormedRing E\ninst✝² : StarRing E\ninst✝¹ : CStarRing E\ninst✝ : Nontrivial E\nU : ↥(unitary E)\n⊢ ‖↑U‖ = 1") - Line 4533
LeanError(message='Lean error:\nCould not prove goal assuming `Subsingleton E`\nE : Type u_2\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : StarAddMonoid E\ninst✝⁶ : NormedStarGroup E\ninst✝⁵ : NonUnitalNormedRing E\ninst✝⁴ : StarRing E\ninst✝³ : CStarRing E\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nU : ↥(unitary E)\nA : E\na✝ : Subsingleton E\n⊢ ‖↑U * A‖ = ‖A‖') - Line 4535
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4540
LeanError(message="Lean error:\ntactic 'unfold' failed to unfold 'Ideal.toCharacterSpace' at\n  sorry = 0") - Line 4545
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2514 is not an inductive datatype') - Line 4546
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 4547
LeanError(message='Lean error:\n<input>:4:46: unexpected end of input') - Line 4550
LeanError(message='Lean error:\n<input>:3:25: unexpected end of input') - Line 4551
LeanError(message='Lean error:\ninternal exception #5') - Line 4556
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.opNorm_le_bound ((ContinuousLinearMap.mul 𝕜 E).flip a) (norm_nonneg ?m.8717)\nargument\n  norm_nonneg ?m.8717\nhas type\n  0 ≤ @norm ?m.8715 SeminormedAddGroup.toNorm ?m.8717 : Prop\nbut is expected to have type\n  0 ≤ @norm E NonUnitalNormedRing.toNorm a : Prop') - Line 4560
LeanError(message='Lean error:\n<input>:1:83: unterminated comment') - Line 4563
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4571
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1940 a') - Line 4587
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4590
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 4595
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4596
LeanError(message='Lean error:\nno goals to be solved') - Line 4597
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddMonoidHomClass ?m.2816 ?m.2817 ?m.2818') - Line 4599
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddMonoidHomClass ?m.4121 ?m.4122 ?m.4123') - Line 4600
LeanError(message='Lean error:\ninternal exception #5') - Line 4603
LeanError(message='Lean error:\ninternal exception #5') - Line 4608
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.1108‖ ≤ 1\n𝕜 : Type u_1\nn : Type u_3\ninst✝² : RCLike 𝕜\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nU : Matrix n n 𝕜\nhU : U ∈ Matrix.unitaryGroup n 𝕜\n| sorry ≤ 1") - Line 4609
LeanError(message='Lean error:\ninternal exception #5') - Line 4615
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4617
LeanError(message='Lean error:\nsimp made no progress') - Line 4621
LeanError(message='Lean error:\nno goals to be solved') - Line 4666
LeanError(message='Lean error:\ninternal exception #5') - Line 4672
LeanError(message='Lean error:\nsimp made no progress') - Line 4674
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1\n𝕜 : Type u_1\nA : Type u_2\ninst✝⁸ : NontriviallyNormedField 𝕜\ninst✝⁷ : NonUnitalNormedRing A\ninst✝⁶ : NormedSpace 𝕜 A\ninst✝⁵ : SMulCommClass 𝕜 A A\ninst✝⁴ : IsScalarTower 𝕜 A A\ninst✝³ : StarRing 𝕜\ninst✝² : StarRing A\ninst✝¹ : StarModule 𝕜 A\ninst✝ : NormedStarGroup A\na : DoubleCentralizer 𝕜 A\n⊢ ‖a.toProd.2‖ = ‖a‖") - Line 4675
LeanError(message='Lean error:\ninternal exception #5') - Line 4678
LeanError(message='Lean error:\ntry rfl') - Line 4679
LeanError(message='Lean error:\n<input>:2:46: unexpected end of input') - Line 4681
LeanError(message='Lean error:\nCould not prove goal assuming `Subsingleton E`\n𝕜 : Type u_1\ninst✝³ : NormedField 𝕜\nE : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nu : ↥(unitary E)\na✝ : Subsingleton E\n⊢ sorry ⊆ Metric.sphere 0 1') - Line 4682
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  Prop\nA : Type u_1\ninst✝ : NonUnitalCStarAlgebra A\na : A\nx : sorry\nhx : sorry\n⊢ sorry") - Line 4684
LeanError(message='Lean error:\n<input>:1:48: expected token') - Line 4685
LeanError(message='Lean error:\nsimp made no progress') - Line 4686
LeanError(message='Lean error:\n<input>:2:22: expected token') - Line 4687
LeanError(message='Lean error:\ninternal exception #5') - Line 4688
LeanError(message='Lean error:\ninternal exception #5') - Line 4690
LeanError(message="Lean error:\nCase tag 'nonempty' not found.\n\nThe only available case tag is 'refine_2'.") - Line 4693
LeanError(message='Lean error:\ninternal exception #5') - Line 4694
LeanError(message='Lean error:\n<input>:1:76: expected end of input') - Line 4697
LeanError(message='Lean error:\nno goals to be solved') - Line 4707
LeanError(message='Lean error:\ninternal exception #5') - Line 4708
LeanError(message='Lean error:\ninternal exception #5') - Line 4709
LeanError(message='Lean error:\ninternal exception #5') - Line 4710
LeanError(message='Lean error:\ninternal exception #5') - Line 4711
LeanError(message='Lean error:\nno goals to be solved') - Line 4712
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4713
LeanError(message='Lean error:\ninternal exception #5') - Line 4714
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  C(↑(spectrum S a), S)') - Line 4729
LeanError(message='Lean error:\nfailed to synthesize\n  ContinuousMap.UniqueHom R A\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4732
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 4733
LeanError(message='Lean error:\nfailed to synthesize\n  ContinuousMapZero.UniqueHom R A\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4737
LeanError(message='Lean error:\n<input>:7:11: expected end of input') - Line 4738
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  C(X, NNReal)') - Line 4741
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  C(X, NNReal)') - Line 4742
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4743
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4744
LeanError(message='Lean error:\nsimp made no progress') - Line 4747
LeanError(message='Lean error:\nsimp made no progress') - Line 4748
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1783') - Line 4749
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Continuous ?m.8105\nx✝ : Sort u_8\ntoNNReal : x✝\n⊢ Continuous sorry") - Line 4751
LeanError(message='Lean error:\nsimp made no progress') - Line 4757
LeanError(message='Lean error:\nsimp made no progress') - Line 4758
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.7549') - Line 4759
LeanError(message='Lean error:\ninternal exception #5') - Line 4765
LeanError(message='Lean error:\napplication type mismatch\n  And.intro (IsSelfAdjoint.isStarNormal ?m.22522)\nargument\n  IsSelfAdjoint.isStarNormal ?m.22522\nhas type\n  @IsStarNormal ?m.20860 Semigroup.toMul InvolutiveStar.toStar ?m.20863 : Prop\nbut is expected to have type\n  @IsStarNormal A Distrib.toMul InvolutiveStar.toStar a : Prop') - Line 4773
LeanError(message='Lean error:\napplication type mismatch\n  And.intro (IsSelfAdjoint.isStarNormal ?m.24668)\nargument\n  IsSelfAdjoint.isStarNormal ?m.24668\nhas type\n  @IsStarNormal ?m.23006 Semigroup.toMul InvolutiveStar.toStar ?m.23009 : Prop\nbut is expected to have type\n  @IsStarNormal A Distrib.toMul InvolutiveStar.toStar a : Prop') - Line 4775
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4779
LeanError(message='Lean error:\napplication type mismatch\n  And.intro (IsSelfAdjoint.of_nonneg ?m.53758)\nargument\n  IsSelfAdjoint.of_nonneg ?m.53758\nhas type\n  @IsSelfAdjoint ?m.51181\n    (@InvolutiveStar.toStar ?m.51181\n      (@StarAddMonoid.toInvolutiveStar ?m.51181\n        (@AddCommMonoid.toAddMonoid ?m.51181\n          (@NonUnitalNonAssocSemiring.toAddCommMonoid ?m.51181 NonUnitalSemiring.toNonUnitalNonAssocSemiring))\n        StarRing.toStarAddMonoid))\n    ?m.51186 : Prop\nbut is expected to have type\n  @IsSelfAdjoint A\n    (@InvolutiveStar.toStar A\n      (@StarAddMonoid.toInvolutiveStar A\n        (@AddCommMonoid.toAddMonoid A\n          (@NonUnitalNonAssocSemiring.toAddCommMonoid A NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring))\n        StarRing.toStarAddMonoid))\n    a : Prop') - Line 4780
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4782
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.78307 is not an inductive datatype') - Line 4783
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.195154\nwith\n  cfcHom ha = sorry\nA : Type u_9\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : PartialOrder A\ninst✝ : StarRing A\na : A\nha : 0 ≤ a\n⊢ cfcHom ha = sorry") - Line 4788
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.216057\nwith\n  cfcₙHom ha = sorry\nA : Type u_10\ninst✝³ : TopologicalSpace A\ninst✝² : NonUnitalRing A\ninst✝¹ : PartialOrder A\ninst✝ : StarRing A\na : A\nha : 0 ≤ a\n⊢ cfcₙHom ha = sorry") - Line 4790
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4807
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4808
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4809
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4810
LeanError(message='Lean error:\nno goals to be solved') - Line 4819
LeanError(message='Lean error:\nno goals to be solved') - Line 4821
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4827
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4828
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4829
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4830
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4834
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4836
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4838
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4839
LeanError(message='Lean error:\nno goals to be solved') - Line 4843
LeanError(message='Lean error:\nno goals to be solved') - Line 4845
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4882
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4883
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4884
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4885
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4886
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4887
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4888
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4889
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4890
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4891
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4892
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4893
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4894
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4895
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4896
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4897
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4898
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4899
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4900
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4902
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4903
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4904
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4905
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4906
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4907
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4908
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4909
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4910
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4911
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4912
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4913
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4914
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4915
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4916
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4917
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4920
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4922
LeanError(message='Lean error:\ntype mismatch\n  IsSelfAdjoint.le_algebraMap_norm_self sorry\nhas type\n  ?m.6041 ≤ (algebraMap ℝ ?m.6037) ‖?m.6041‖ : Prop\nbut is expected to have type\n  sorry : Sort ?u.2210') - Line 4927
LeanError(message='Lean error:\ntype mismatch\n  IsSelfAdjoint.le_algebraMap_norm_self sorry\nhas type\n  ?m.6041 ≤ (algebraMap ℝ ?m.6037) ‖?m.6041‖ : Prop\nbut is expected to have type\n  sorry : Sort ?u.2210') - Line 4928
LeanError(message='Lean error:\nsimp made no progress') - Line 4929
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4930
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4931
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4932
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4933
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4934
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4935
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4936
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4937
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4938
LeanError(message='Lean error:\ninternal exception #5') - Line 4939
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.4634 : Sort ?u.4633\nbut is expected to have type\n  x ∈ sorry ↔ 0 ≤ x ∧ ‖x‖ ≤ 1 : Prop') - Line 4941
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift A sorry ?m.8862 ?m.8863\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4945
LeanError(message='Lean error:\ninternal exception #5') - Line 4946
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift A sorry ?m.6823 ?m.6824\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4955
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift A sorry ?m.6059 ?m.6060\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4956
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4957
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4958
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4959
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4960
LeanError(message="Lean error:\n<input>:1:25: expected '//', '|' or '}'") - Line 4961
LeanError(message='Lean error:\nsimp made no progress') - Line 4962
LeanError(message='Lean error:\ninternal exception #5') - Line 4966
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4967
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4981
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4982
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4983
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4984
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4985
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4986
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4987
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4988
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4989
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4990
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4991
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4992
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4993
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4994
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4995
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4996
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4997
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4998
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4999
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5000
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5002
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5003
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5004
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5005
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5006
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5007
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5008
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5009
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5010
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5011
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5012
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5013
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5014
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5015
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5016
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5017
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5018
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5019
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5020
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5021
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5022
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5023
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5024
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5025
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5026
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5027
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5028
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5029
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5030
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5031
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5032
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5033
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5034
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5035
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5036
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5037
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5038
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5039
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5040
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5041
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5042
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5043
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5044
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5045
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5046
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5047
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5048
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5049
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5050
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5051
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5052
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5053
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5054
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5055
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5056
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5057
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5058
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5059
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5060
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5061
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5062
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5063
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5064
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5065
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5066
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5067
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5068
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5069
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5070
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5071
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5072
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5073
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5074
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5075
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5076
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5077
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5078
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5079
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5080
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5081
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5082
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5083
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5084
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5085
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Submodule ?m.23190 ?m.23191') - Line 5096
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  instCStarModuleComplex\nA : Type ?u.15357\nE✝¹ : Type u_1\nF : Type u_2\ninst✝¹¹ : NormedAddCommGroup E✝¹\ninst✝¹⁰ : Module ℂ E✝¹\ninst✝⁹ : SMul A E✝¹\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : Module ℂ F\ninst✝⁶ : SMul A F\nι : Type u_3\nE✝ : ι → Type u_4\ninst✝⁵ : Fintype ι\ninst✝⁴ : (i : ι) → NormedAddCommGroup (E✝ i)\ninst✝³ : (i : ι) → Module ℂ (E✝ i)\ninst✝² : (i : ι) → SMul A (E✝ i)\nE : Type u_5\ninst✝¹ : NormedAddCommGroup E\ninst✝ : InnerProductSpace ℂ E\nx✝ : Sort u_6\ninstCStarModule : x✝\nα✝ : Sort u_7\ninstCStarModuleComplex : α✝\n⊢ sorry = instCStarModuleComplex") - Line 5143
LeanError(message='Lean error:\ninternal exception #5') - Line 5166
LeanError(message='Lean error:\ninternal exception #5') - Line 5167
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  r = 0 ∨ r ≠ 0 → ContinuousOn f (Metric.closedBall x r)\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\nY✝ : Type u_5\nf : E → Y✝\ninst✝ : NormedSpace ℝ E\nx : E\nr : ℝ\nh : sorry\n⊢ ContinuousOn f (Metric.closedBall x r)") - Line 5177
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5228
LeanError(message='Lean error:\ninternal exception #5') - Line 5229
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5230
LeanError(message='Lean error:\ninternal exception #5') - Line 5231
LeanError(message='Lean error:\ninternal exception #5') - Line 5232
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5234
LeanError(message="Lean error:\n<input>:1:16: expected ':' or term") - Line 5238
LeanError(message="Lean error:\n<input>:1:16: expected ':' or term") - Line 5239
LeanError(message="Lean error:\n<input>:1:21: expected ':' or term") - Line 5244
LeanError(message="Lean error:\n<input>:1:21: expected ':' or term") - Line 5245
LeanError(message='Lean error:\nsimp made no progress') - Line 5251
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 5253
LeanError(message='Lean error:\nsimp made no progress') - Line 5254
LeanError(message='Lean error:\nsimp made no progress') - Line 5255
LeanError(message='Lean error:\nno goals to be solved') - Line 5256
LeanError(message='Lean error:\nno goals to be solved') - Line 5257
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5258
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 5259
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x * (1 / ?y)\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nn : ℤ\n⊢ ↑n * (1 / x) = ↑n / x") - Line 5261
LeanError(message='Lean error:\nsimp made no progress') - Line 5263
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5264
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5265
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ntactic 'induction' failed, recursor 'Or.casesOn' can only eliminate into Prop\n𝕜 : Type ?u.203\nE : Type ?u.902\nf : 𝕜 → E\na b : 𝕜\nx✝ : b = a ∨ b ≠ a\n⊢ sorry") - Line 5270
LeanError(message='Lean error:\ninternal exception #5') - Line 5271
LeanError(message='Lean error:\nno goals to be solved') - Line 5274
LeanError(message='Lean error:\ninternal exception #5') - Line 5275
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.1297 ?m.1298') - Line 5278
LeanError(message='Lean error:\nno goals to be solved') - Line 5279
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.2959 ?m.2960') - Line 5280
LeanError(message='Lean error:\ntype mismatch, term\n  DifferentiableWithinAt.add_const sorry\n    (DifferentiableWithinAt.smul (DifferentiableWithinAt.sub_const differentiableWithinAt_id sorry) sorry)\nafter simplification has type\n  DifferentiableWithinAt ?m.7775 (fun y => (y - sorry) • ?m.5178 y + sorry) ?m.7785 ?m.7784 : Prop\nbut is expected to have type\n  sorry : Prop') - Line 5281
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.2668 ?m.2669') - Line 5284
LeanError(message='Lean error:\nno goals to be solved') - Line 5286
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 5287
LeanError(message='Lean error:\n<input>:3:12: expected end of input') - Line 5289
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  ?m.5136 p h\nargument\n  h\nhas type\n  0 < n : Prop\nbut is expected to have type\n  0 < _a : Prop\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\np : sorry\nn : ℕ\nh : 0 < n\n⊢ sorry = sorry") - Line 5311
LeanError(message='Lean error:\nno goals to be solved') - Line 5312
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5313
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 5317
LeanError(message='Lean error:\ntype mismatch, term\n  or_comm\nafter simplification has type\n  ?m.77675 ∨ ?m.77676 ↔ ?m.77676 ∨ ?m.77675 : Prop\nbut is expected to have type\n  sorry () = 0 ↔ p = 0 ∨ ¬sorry () = 0 : Prop') - Line 5324
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.104983\nargument\n  ?m.104983\nhas type\n  (sorry = (∏ i, ?m.99121) • sorry) = ?m.104966 : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 5330
LeanError(message='Lean error:\ninternal exception #5') - Line 5331
LeanError(message='Lean error:\ninternal exception #5') - Line 5333
LeanError(message="Lean error:\nunknown free variable '_fvar.115057'") - Line 5334
LeanError(message="Lean error:\nunknown identifier 'p'") - Line 5335
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  FormalMultilinearSeries 𝕜 sorry F') - Line 5337
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ f, f ≠ 0 ∧ ?m.88805 ≤ LinearMap.ker f) → ∃ Λ Λ₀, (Λ, Λ₀) ≠ sorry ∧ ∀ (x : X✝²), sorry + Λ₀ • φ' x = 0\nX✝² : Type u_3\nX✝¹ : Type u_4\nφ : X✝² → X✝¹\nX✝ : Type u_5\nf : X✝² → X✝\nx₀ : X✝²\nα✝¹ : Type u_6\nself✝⁵ : NontriviallyNormedField α✝¹\ninst✝⁷ : TopologicalSpace X✝²\nself✝⁴ : AddCommGroup X✝²\ninst✝⁶ : TopologicalSpace X✝\nself✝³ : AddCommGroup X✝\ninst✝⁵ : Module α✝¹ X✝²\ninst✝⁴ : Module α✝¹ X✝\nf' : X✝² →L[α✝¹] X✝\nα✝ : Type u_7\nself✝² : NontriviallyNormedField α✝\ninst✝³ : TopologicalSpace X✝²\nself✝¹ : AddCommGroup X✝²\ninst✝² : TopologicalSpace X✝¹\nself✝ : AddCommGroup X✝¹\ninst✝¹ : Module α✝ X✝²\ninst✝ : Module α✝ X✝¹\nφ' : X✝² →L[α✝] X✝¹\nhextr : IsLocalExtrOn φ {x | f x = f x₀} x₀\nhf' : HasStrictFDerivAt f f' x₀\nhφ' : HasStrictFDerivAt φ φ' x₀\n⊢ ∃ Λ Λ₀, (Λ, Λ₀) ≠ sorry ∧ ∀ (x : X✝²), sorry + Λ₀ • φ' x = 0") - Line 5342
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.29002 is not an inductive datatype') - Line 5343
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.32051 is not an inductive datatype') - Line 5344
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.21408\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nE : Type u_1\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : CompleteSpace E\nφ : E → ℝ\nx₀ : E\nφ' : E →L[ℝ] ℝ\nι : Type u_3\ninst✝ : Finite ι\nf : ι → E → ℝ\nf' : ι → E →L[ℝ] ℝ\nhextr : IsLocalExtrOn φ {x | ∀ (i : ι), f i x = f i x₀} x₀\nhf' : ∀ (i : ι), HasStrictFDerivAt (f i) (f' i) x₀\nhφ' : HasStrictFDerivAt φ φ' x₀\nx✝ : ?m.21408\n⊢ ¬LinearIndependent ℝ (Option.elim' φ' f')") - Line 5345
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5346
LeanError(message='Lean error:\ninternal exception #5') - Line 5357
LeanError(message='Lean error:\nno goals to be solved') - Line 5358
LeanError(message='Lean error:\nno goals to be solved') - Line 5359
LeanError(message='Lean error:\ntype mismatch\n  Eq.le norm_zero\nhas type\n  ‖@OfNat.ofNat ?m.7128 0\n        (@Zero.toOfNat0 ?m.7128\n          (@NegZeroClass.toZero ?m.7128\n            (@SubNegZeroMonoid.toNegZeroClass ?m.7128\n              (@SubtractionMonoid.toSubNegZeroMonoid ?m.7128 AddGroup.toSubtractionMonoid))))‖ ≤\n    0 : Prop\nbut is expected to have type\n  ‖@OfNat.ofNat E 0\n        (@Zero.toOfNat0 E\n          (@NegZeroClass.toZero E\n            (@SubNegZeroMonoid.toNegZeroClass E\n              (@SubtractionMonoid.toSubNegZeroMonoid E SubtractionCommMonoid.toSubtractionMonoid))))‖ ≤\n    ?m.6910 : Prop') - Line 5362
LeanError(message='Lean error:\napplication type mismatch\n  norm_image_sub_le_of_norm_deriv_le_segment hdiff H\nargument\n  H\nhas type\n  ∀ x ∈ Set.Ico a b, sorry ≤ 0 : Prop\nbut is expected to have type\n  ∀ x ∈ Set.Ico a b, ‖derivWithin f (Set.Icc a b) x‖ ≤ ?m.5804 : Prop') - Line 5363
LeanError(message='Lean error:\nsimp made no progress') - Line 5364
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  LipschitzWith ?m.6295 ?m.6296\n𝕜 : Type u_3\nG : Type u_4\ninst✝³ : NontriviallyNormedField 𝕜\ninst✝² : IsRCLikeNormedField 𝕜\nE : Type u_5\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : E → G\nC : NNReal\nhf : sorry\nbound : ∀ (x : E), ‖sorry‖₊ ≤ C\nthis : RCLike 𝕜 := sorry\nA : sorry := sorry\n⊢ sorry") - Line 5374
LeanError(message='Lean error:\napplication type mismatch\n  Convex.norm_image_sub_le_of_norm_fderivWithin_le sorry bound\nargument\n  bound\nhas type\n  ∀ x ∈ s, ‖sorry‖ ≤ 0 : Prop\nbut is expected to have type\n  ∀ x ∈ s, ‖fderivWithin ?m.12433 ?m.12440 s x‖ ≤ ?m.12441 : Prop') - Line 5378
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.8295 ?m.8296') - Line 5381
LeanError(message='Lean error:\ninternal exception #5') - Line 5382
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5383
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.7724 ?m.7725') - Line 5384
LeanError(message='Lean error:\nno goals to be solved') - Line 5385
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.5442 ?m.5443') - Line 5386
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5389
LeanError(message='Lean error:\n<input>:7:70: unexpected end of input') - Line 5406
LeanError(message='Lean error:\n<input>:4:22: unexpected end of input') - Line 5407
LeanError(message='Lean error:\n<input>:3:74: unexpected end of input') - Line 5409
LeanError(message='Lean error:\napplication type mismatch\n  Function.comp L\nargument\n  L\nhas type\n  sorry : Type (max (max u_3 u_2) u_3)\nbut is expected to have type\n  E → ?m.21115 : Type (max u_3 ?u.20862)') - Line 5416
LeanError(message='Lean error:\ntype mismatch\n  Metric.mem_ball_self ε_pos\nhas type\n  ?m.9005 ∈ Metric.ball ?m.9005 ε : Prop\nbut is expected to have type\n  x₀ ∈ sorry : Prop') - Line 5417
LeanError(message='Lean error:\ninternal exception #5') - Line 5430
LeanError(message='Lean error:\ninternal exception #5') - Line 5431
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  LipschitzWith ?m.12227 ?m.12228\nE : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nF : Type u_2\nC : NNReal\nF✝ : Type u_3\nμ : F✝\nf : E → F\nh : sorry\n⊢ ∀ᵐ (x : E) ∂μ, sorry") - Line 5432
LeanError(message='Lean error:\nsimp made no progress') - Line 5436
LeanError(message='Lean error:\nsimp made no progress') - Line 5438
LeanError(message='Lean error:\nsimp made no progress') - Line 5444
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (x : E) → E →L[𝕜] F') - Line 5447
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  (y : 𝕜) → ?m.20281 hu hg hg' hg0 y") - Line 5448
LeanError(message='Lean error:\n<input>:2:12: expected end of input') - Line 5449
LeanError(message='Lean error:\ninternal exception #5') - Line 5450
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiff ?m.13758 ↑?m.13767 ?m.13766\nα : Type u_1\n𝕜 : Type u_3\nE : Type u_4\nF : Type u_5\ninst✝¹ : NontriviallyNormedField 𝕜\ninst✝ : IsRCLikeNormedField 𝕜\nv : ℕ → α → ℝ\nN : WithTop ℕ∞\nhf : α → sorry\nhv : ∀ (k : ℕ), ↑↑k ≤ N → Summable (v k)\nh'f : ∀ (k : ℕ) (i : α) (x : E), ↑k ≤ N → ‖sorry‖ ≤ v k i\n⊢ sorry") - Line 5451
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.13635 ?m.13838') - Line 5452
LeanError(message='Lean error:\napplication type mismatch\n  And.intro hs\nargument\n  hs\nhas type\n  ∀ᶠ (n : ℕ) in Filter.atTop, x + r ^ n • y ∈ s : Prop\nbut is expected to have type\n  ∀ᶠ (n : ℕ) in Filter.atTop, x + (fun n => sorry • y) n ∈ s : Prop') - Line 5453
LeanError(message='Lean error:\ntype mismatch\n  exists_seq_strictAnti_tendsto 0\nhas type\n  ∃ (u : ℕ → ℝ), StrictAnti u ∧ (∀ (n : ℕ), 0 < u n) ∧ Filter.Tendsto u Filter.atTop (nhds 0) : Prop\nbut is expected to have type\n  ∃ (u : ℕ → ℕ), StrictAnti u ∧ (∀ (n : ℕ), 0 < u n) ∧ Filter.Tendsto u Filter.atTop sorry : Prop') - Line 5456
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.comp (Continuous.tendsto continuous_norm ?m.15570) ?m.16197\nhas type\n  Filter.Tendsto ((fun a => ‖a‖) ∘ ?m.15782) ?m.15784 (nhds ‖?m.15570‖) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => ‖sorry‖) l sorry : Prop') - Line 5457
LeanError(message='Lean error:\napplication type mismatch\n  Filter.tendsto_inf.mp this\nargument\n  this\nhas type\n  Filter.Tendsto (fun n => sorry) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => x + d n) Filter.atTop (?m.13099 this ⊓ Filter.principal t) : Prop') - Line 5458
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5461
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5462
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 5463
LeanError(message='Lean error:\nno goals to be solved') - Line 5464
LeanError(message='Lean error:\n<input>:1:90: unterminated comment') - Line 5466
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5467
LeanError(message='Lean error:\n<input>:1:90: unterminated comment') - Line 5469
LeanError(message='Lean error:\n<input>:1:86: unterminated comment') - Line 5470
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5477
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.18908 ?m.18910') - Line 5485
LeanError(message="Lean error:\ntype mismatch\n  Submodule.span_mono (Set.union_subset sorry sorry)\nhas type\n  Submodule.span ?m.27159\n      (⇑(LinearMap.inl ?m.29212 ?m.29214 F) '' tangentConeAt ?m.29212 ?m.29221 ?m.29220 ∪\n        ⇑(LinearMap.inr ?m.29212 ?m.29214 F) '' tangentConeAt ?m.29212 t y) ≤\n    Submodule.span ?m.27159 (tangentConeAt ?m.29212 (?m.29221 ×ˢ t) (?m.29220, y)) : Prop\nbut is expected to have type\n  ?m.20666 ≤ sorry : Prop") - Line 5489
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5490
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5491
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.26807 ∈ interior ?m.26808\ncase intro\nG : Type u_5\ninst✝³ : NormedAddCommGroup G\ninst✝² : NormedSpace ℝ G\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace ℝ G\ns : Set G\nconv : Convex ℝ s\nx : G\nhx : x ∈ closure s\ny : G\nhy : y ∈ interior s\n⊢ sorry ∈ sorry") - Line 5495
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5514
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5515
LeanError(message='Lean error:\nno goals to be solved') - Line 5516
LeanError(message='Lean error:\n<input>:1:52: expected subscript character; expected term') - Line 5518
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5519
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry\nis not definitionally equal to target\n  HasDerivAt (taylorWithinEval f (n + 1) s x₀) (taylorWithinEval (derivWithin f s) n s x₀ x) x") - Line 5522
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5523
LeanError(message='Lean error:\ninternal exception #5') - Line 5524
LeanError(message='Lean error:\n<input>:2:22: expected no space before or term') - Line 5526
LeanError(message='Lean error:\nsimp made no progress') - Line 5527
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5529
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5530
LeanError(message='Lean error:\ninternal exception #5') - Line 5533
LeanError(message='Lean error:\nno goals to be solved') - Line 5534
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HasFDerivAt ?m.45758 ?m.45759 ?m.45760\nι : Type u_1\nl : Filter ι\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\nα✝ : Type u_4\nself✝¹ : NontriviallyNormedField α✝\nX✝ : Type u_5\ninst✝³ : TopologicalSpace X✝\nself✝ : AddCommGroup X✝\ninst✝² : Module α✝ E\ninst✝¹ : Module α✝ X✝\nf' : ι → E → E →L[α✝] X✝\ng' : E → E →L[α✝] X✝\nx : E\nx✝ : Sort u_6\nf : x✝\ng : E → X✝\ninst✝ : l.NeBot\nhf' : TendstoUniformlyOnFilter f' g' l (nhds x)\nhf : ∀ᶠ (n : ι × E) in l ×ˢ nhds x, HasFDerivAt ?m.8505 (f' n.1 n.2) n.2\nhfg : ∀ᶠ (y : E) in nhds x, Filter.Tendsto (fun n => ?m.14765) l (nhds (g y))\nthis : RCLike sorry := sorry\n⊢ HasFDerivAt g (g' x) x") - Line 5535
LeanError(message='Lean error:\ninternal exception #5') - Line 5536
LeanError(message="Lean error:\napplication type mismatch\n  hasFDerivAt_of_tendstoLocallyUniformlyOn hs ?m.28861 (fun n z hz => ?m.29163) hfg\nargument\n  hfg\nhas type\n  ∀ x_1 ∈ s, Filter.Tendsto (fun n => f n x_1) l (@nhds X✝ (?m.27361 hs hf' hf x_1) (g x_1)) : Prop\nbut is expected to have type\n  ∀ x ∈ s,\n    Filter.Tendsto (fun n => ?m.27441 n x) ?m.27431 (@nhds ?m.27438 UniformSpace.toTopologicalSpace (?m.27442 x)) : Prop") - Line 5537
LeanError(message='Lean error:\ninternal exception #5') - Line 5539
LeanError(message='Lean error:\ninternal exception #5') - Line 5543
LeanError(message='Lean error:\ninternal exception #5') - Line 5544
LeanError(message='Lean error:\ninternal exception #5') - Line 5547
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.861') - Line 5550
LeanError(message='Lean error:\nsimp made no progress') - Line 5553
LeanError(message='Lean error:\nsimp made no progress') - Line 5554
LeanError(message='Lean error:\nsimp made no progress') - Line 5555
LeanError(message='Lean error:\nsimp made no progress') - Line 5556
LeanError(message='Lean error:\nsimp made no progress') - Line 5557
LeanError(message='Lean error:\nsimp made no progress') - Line 5558
LeanError(message='Lean error:\nsimp made no progress') - Line 5559
LeanError(message='Lean error:\nsimp made no progress') - Line 5560
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 5561
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5563
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiffAt ?m.13484 ?m.13494 ?m.13492 ?m.13493\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nE✝ : Type u_2\nF✝¹ : Type u_3\nV : E✝ → F✝¹\nx : E✝\nF✝ : Type u_4\nW : E✝ → F✝\nx✝ : Sort u_5\nlieBracket : x✝\nm n : WithTop ℕ∞\nhV : ContDiffAt 𝕜 n V x\nhW : ContDiffAt 𝕜 n W x\nhmn : m + 1 ≤ n\n⊢ ContDiffAt 𝕜 m sorry x") - Line 5564
LeanError(message='Lean error:\ninternal exception #5') - Line 5570
LeanError(message='Lean error:\nsimp made no progress') - Line 5578
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem sorry ?m.13842\nhas type\n  ?m.13848 ∈ ?m.13846 : Prop\nbut is expected to have type\n  sorry =ᶠ[nhdsWithin x s] sorry : Prop') - Line 5580
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.88304\nwith\n  sorry = sorry\nα✝ : Type u_2\nx : α✝\ns : Set α✝\nβ✝¹ : Type u_3\nV₁ V : α✝ → β✝¹\nβ✝ : Type u_4\nW₁ W : α✝ → β✝\nx✝ : Sort u_5\nlieBracketWithin : x✝\nhV : V₁ =ᶠ[nhdsWithin x (insert x s)] V\nhW : W₁ =ᶠ[nhdsWithin x (insert x s)] W\n⊢ sorry = sorry") - Line 5582
LeanError(message='Lean error:\ninternal exception #5') - Line 5586
LeanError(message='Lean error:\ntype mismatch\n  Filter.mp_mem (Filter.EventuallyEq.eventuallyEq_nhds sorry) ?m.7708\nhas type\n  ?m.7714 ∈ nhds ?m.7742 : Prop\nbut is expected to have type\n  sorry =ᶠ[nhds x] sorry : Prop') - Line 5587
LeanError(message='Lean error:\nsimp made no progress') - Line 5588
LeanError(message='Lean error:\nsimp made no progress') - Line 5590
LeanError(message="Lean error:\nrcases tactic failed: h'f : sorry is not an inductive datatype") - Line 5596
LeanError(message="Lean error:\nrcases tactic failed: h'f : sorry is not an inductive datatype") - Line 5597
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5598
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 5599
LeanError(message='Lean error:\nsimp made no progress') - Line 5600
LeanError(message='Lean error:\nno goals to be solved') - Line 5602
LeanError(message='Lean error:\nsimp made no progress') - Line 5603
LeanError(message='Lean error:\ninternal exception #5') - Line 5607
LeanError(message='Lean error:\ninternal exception #5') - Line 5609
LeanError(message='Lean error:\nsimp made no progress') - Line 5612
LeanError(message='Lean error:\nno goals to be solved') - Line 5617
LeanError(message='Lean error:\nno goals to be solved') - Line 5618
LeanError(message='Lean error:\ntype mismatch\n  (MeasureTheory.integral_pos_iff_support_of_nonneg sorry sorry).mpr ?m.3095\nhas type\n  (0 : ℝ) < ∫ (x : ?m.3085), ?m.3088 x ∂?m.3087 : Prop\nbut is expected to have type\n  (0 : ℕ) < ∫ (x : α✝), sorry ∂μ : Prop') - Line 5621
LeanError(message='Lean error:\nsimp made no progress') - Line 5622
LeanError(message="Lean error:\ntactic 'unfold' failed to unfold 'ContDiffBump.normed' at\n  Function.support sorry = Metric.ball c sorry") - Line 5623
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'tsupport'.") - Line 5624
LeanError(message='Lean error:\nsimp made no progress') - Line 5625
LeanError(message='Lean error:\nsimp made no progress') - Line 5627
LeanError(message='Lean error:\ninternal exception #4') - Line 5628
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  ↑?m.11606 : ℝ\nbut previous right-hand side is\n  ∫ (x : α✝) in sorry, 1 ∂sorry : ℕ") - Line 5630
LeanError(message='Lean error:\ninternal exception #5') - Line 5631
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5632
LeanError(message='Lean error:\napplication type mismatch\n  @ContDiffBump.dist_normed_convolution_le E F ?m.5532 f inst✝² μ ?m.7213 ?m.7214 ?m.7215 ?m.7216 φ\nargument\n  φ\nhas type\n  ContDiffBump sorry : Type\nbut is expected to have type\n  ContDiffBump 0 : Type') - Line 5633
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 5635
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ContDiffBumpBase.toFun ?m.2587 ?m.2588 ?x = 1\nwith\n  sorry = 1\nα✝ : Type u_3\nc x : α✝\nx✝ : Sort u_4\nf : x✝\nhx : x ∈ Metric.closedBall c sorry\n⊢ sorry = 1") - Line 5642
LeanError(message='Lean error:\nsimp made no progress') - Line 5646
LeanError(message='Lean error:\nsimp made no progress') - Line 5647
LeanError(message='Lean error:\ninternal exception #5') - Line 5649
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry\nis not definitionally equal to target\n  ContDiffWithinAt ℝ n (fun x_1 => sorry) s x") - Line 5653
LeanError(message='Lean error:\nrcases: scrutinee has type\n  Euclidean.closedBall x d ⊆ s : Prop\nbut is expected to have type\n  sorry ⊆ s : Prop') - Line 5659
LeanError(message='Lean error:\n<input>:7:75: unexpected end of input') - Line 5660
LeanError(message='Lean error:\n<input>:2:59: expected end of input') - Line 5661
LeanError(message='Lean error:\ninternal exception #5') - Line 5665
LeanError(message='Lean error:\ntype mismatch\n  (MeasureTheory.integral_pos_iff_support_of_nonneg sorry ?m.7538).mpr ?m.7543\nhas type\n  (0 : ℝ) < ∫ (x : ?m.7533), ?m.7536 x ∂?m.7535 : Prop\nbut is expected to have type\n  (0 : ℕ) < ∫ (x : E), sorry ∂μ : Prop') - Line 5669
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 5670
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  0 ≤ ?m.6564 * ?m.6565\nwith\n  0 ≤ sorry\nE : Type u_1\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace ℝ E\ninst✝⁴ : FiniteDimensional ℝ E\ninst✝³ : NormedSpace ℝ E\ninst✝² : FiniteDimensional ℝ E\ninst✝¹ : MeasurableSpace E\ninst✝ : BorelSpace E\nx✝ : Sort u_2\nw : x✝\nD : ℝ\nx : E\n⊢ 0 ≤ sorry") - Line 5671
LeanError(message='Lean error:\nsimp made no progress') - Line 5673
LeanError(message='Lean error:\nsimp made no progress') - Line 5674
LeanError(message='Lean error:\ninternal exception #5') - Line 5675
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  MeasureTheory.convolution ?f ?g ?L ?μ (-?x) = MeasureTheory.convolution ?f ?g ?L ?μ ?x\nwith\n  sorry = sorry\nE : Type u_1\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace ℝ E\ninst✝⁴ : FiniteDimensional ℝ E\ninst✝³ : NormedSpace ℝ E\ninst✝² : FiniteDimensional ℝ E\ninst✝¹ : MeasurableSpace E\ninst✝ : BorelSpace E\nx✝ : Sort u_2\ny : x✝\nD : ℝ\nx : E\n⊢ sorry = sorry") - Line 5676
LeanError(message='Lean error:\n<input>:1:12: expected token') - Line 5677
LeanError(message='Lean error:\n<input>:1:12: expected token') - Line 5678
LeanError(message='Lean error:\n<input>:1:14: expected token') - Line 5680
LeanError(message='Lean error:\nsimp made no progress') - Line 5681
LeanError(message='Lean error:\nsimp made no progress') - Line 5685
LeanError(message='Lean error:\n<input>:2:8: expected end of input') - Line 5692
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 5695
LeanError(message='Lean error:\napplication type mismatch\n  Convex.exists_nhdsWithin_lipschitzOnWith_of_hasFDerivWithinAt_of_nnnorm_lt hs\n    (eventually_nhdsWithin_iff.mpr (Filter.Eventually.of_forall sorry)) sorry K hK\nargument\n  hK\nhas type\n  ‖p x 1‖₊ < K : Prop\nbut is expected to have type\n  ‖?m.18086 ?m.18458‖₊ < K : Prop') - Line 5719
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball ?m.5116 ε\ncase intro.intro.intro.intro.intro\nE : Type u_3\nF : Type u_4\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace ℝ F\nf : E → F\ns : Set E\nx : E\nhf : ContDiffWithinAt ℝ 1 f s x\nhs : Convex ℝ s\np : E → FormalMultilinearSeries ℝ E F\nε : ℝ\nε0 : ε > 0\nhp : sorry\n⊢ ∃ K, ∃ t ∈ nhdsWithin x s, LipschitzOnWith K f t") - Line 5721
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nE' : Type u_2\ninst✝ : NormedAddCommGroup E'\nF' : Type u_3\nf : E' → F'\nhf : sorry\n⊢ sorry") - Line 5724
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2769 is not an inductive datatype') - Line 5725
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5726
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5727
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5738
LeanError(message='Lean error:\nsimp made no progress') - Line 5739
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5782
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5786
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the current goal\nF : Type u_2\nG : Type u_3\nE : Type u_4\nn : WithTop ℕ∞\ns : Set F\ng : F → G\nf : E → F\nhg : sorry\nhf : sorry\nhs : ∀ (x : E), f x ∈ s\n⊢ sorry") - Line 5790
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5793
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5795
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5797
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5799
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ u, x ∈ u ∧ IsOpen u ∧ sorry ∧ sorry) → iteratedFDerivWithin 𝕜 i (g ∘ f) s x = sorry\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nF : Type u_2\nn : WithTop ℕ∞\nM₂✝ : Type u_3\ng : F → M₂✝\nα✝ : Type u_4\nf : α✝ → F\ns : Set α✝\nx : α✝\nt : Set F\nhg : sorry\nhf : ContDiffWithinAt 𝕜 n f s x\nht : sorry\nhs : UniqueDiffOn 𝕜 s\nhxs : x ∈ s\nhst : ∀ᶠ (y : α✝) in nhdsWithin x s, f y ∈ t\ni : ℕ\nhi : ↑i ≤ n\n⊢ iteratedFDerivWithin 𝕜 i (g ∘ f) s x = sorry") - Line 5804
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5847
LeanError(message='Lean error:\nsimp made no progress') - Line 5848
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5852
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  s\nE : Type u_5\nF : Type u_6\nG : Type u_7\nn : WithTop ℕ∞\ns : Set E\nx₀ : E\nm : WithTop ℕ∞\nf : E → F → G\ng : E → F\nt : Set F\nhf : sorry\nhg : sorry\nht : sorry\nhmn : m + 1 ≤ n\nhx₀ : x₀ ∈ s\nhst : s ⊆ g ⁻¹' t\n⊢ sorry") - Line 5854
LeanError(message='Lean error:\nsimp made no progress') - Line 5859
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiff ?m.9727 ?m.9736 ?m.9735\nE : Type u_5\nF : Type u_6\nn m : WithTop ℕ∞\nf : E → F\nhf : sorry\nhmn : m + 1 ≤ n\n⊢ sorry") - Line 5869
LeanError(message='Lean error:\ninternal exception #5') - Line 5870
LeanError(message='Lean error:\n<input>:1:9: expected token') - Line 5871
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiffOn 𝕜 (?m.4654 + 1) ?m.4655 s₂\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\ns₂ : Set 𝕜\nn : WithTop ℕ∞\nhs : IsOpen s₂\n⊢ sorry ↔ sorry ∧ (n = ⊤ → sorry) ∧ sorry") - Line 5872
LeanError(message='Lean error:\n<input>:1:9: expected token') - Line 5873
LeanError(message='Lean error:\nsimp made no progress') - Line 5878
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1\n⊢ sorry ↔ sorry ∧ sorry") - Line 5879
LeanError(message='Lean error:\n<input>:1:10: expected token') - Line 5880
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.4997 ?m.5000') - Line 5881
LeanError(message='Lean error:\n<input>:6:16: unexpected end of input') - Line 5884
LeanError(message='Lean error:\n<input>:3:98: unexpected end of input') - Line 5885
LeanError(message='Lean error:\nsimp made no progress') - Line 5886
LeanError(message='Lean error:\ntype mismatch\n  mul_le_of_le_one_left sorry sorry\nhas type\n  ?m.23400 * ?m.23401 ≤ ?m.23401 : Prop\nbut is expected to have type\n  sorry →\n    {f : D✝ → E✝} →\n      {g : D✝ → F✝} →\n        {N : WithTop ℕ∞} →\n          {s : Set D✝} →\n            {x : D✝} →\n              sorry →\n                sorry →\n                  sorry →\n                    x ∈ s →\n                      {n : ℕ} →\n                        ↑n ≤ N →\n                          sorry ≤ 1 →\n                            Type\n                              u_5 : Type (max (max (max (max (max (max uD (max u_4 u_3) u_2) u_2) u_3) 0) uD) (u_5 + 1))') - Line 5887
LeanError(message='Lean error:\nsimp made no progress') - Line 5888
LeanError(message='Lean error:\nsimp made no progress') - Line 5892
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5893
LeanError(message="Lean error:\nunknown free variable '_fvar.443'") - Line 5894
LeanError(message='Lean error:\n<input>:6:31: unexpected end of input') - Line 5895
LeanError(message='Lean error:\n<input>:3:98: unexpected end of input') - Line 5896
LeanError(message="Lean error:\nunknown free variable '_fvar.443'") - Line 5897
LeanError(message='Lean error:\ntype mismatch\n  sorry.flip\nhas type\n  ?m.19142 →SL[?m.19153] ?m.19141 →SL[?m.19154] ?m.19143 : Type (max ?u.19133 ?u.19132 ?u.19134)\nbut is expected to have type\n  sorry : Type (max u_7 u_6)') - Line 5898
LeanError(message="Lean error:\nunknown free variable '_fvar.443'") - Line 5899
LeanError(message='Lean error:\ninternal exception #5') - Line 5900
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5925
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ContDiffWithinAt ?m.3249 ?m.3260 ?m.3258 ?m.106322 ?m.3259\nwith\n  sorry\n𝕜 : Type u\ninst✝¹ : NontriviallyNormedField 𝕜\nE : Type uE\ninst✝ : NormedAddCommGroup E\nn : WithTop ℕ∞\nF✝ : Type u_1\nf : E → F✝\ns : Set E\nx : E\nh : ContDiffWithinAt 𝕜 n f s x\nt : Set E\nhst : nhdsWithin x s = nhdsWithin x t\n⊢ sorry") - Line 5928
LeanError(message='Lean error:\nno goals to be solved') - Line 5933
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiffWithinAt ?m.853 ?m.864 ?m.862 ?m.861 ?m.863\nE : Type uE\ninst✝ : NormedAddCommGroup E\nn : WithTop ℕ∞\nx✝ : Type u_1\nf : E → x✝\ns : Set E\nx y : E\n⊢ sorry ↔ sorry") - Line 5935
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 5965
LeanError(message='Lean error:\ninternal exception #5') - Line 42
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HasFDerivWithinAt (⇑?iso ∘ ?f) ?f' ?s ?x\nn : WithTop ℕ∞\nE✝¹ : Type u_1\nE✝ : Type u_2\nf : E✝¹ → E✝\nα✝ : Type u_3\nself✝² : NontriviallyNormedField α✝\ninst✝¹ : NormedAddCommGroup E✝¹\nself✝¹ : NormedSpace α✝ E✝¹\ninst✝ : NormedAddCommGroup E✝\nself✝ : NormedSpace α✝ E✝\np : E✝¹ → FormalMultilinearSeries α✝ E✝¹ E✝\ns : Set E✝¹\nx : E✝¹\nF : Type u_4\nh : HasFTaylorSeriesUpToOn n f p s\nhn : 1 ≤ n\nhx : x ∈ s\nA : ∀ y ∈ s, f y = sorry\n⊢ sorry") - Line 52
LeanError(message='Lean error:\nsimp made no progress') - Line 64
LeanError(message='Lean error:\nsimp made no progress') - Line 70
LeanError(message='Lean error:\nsimp made no progress') - Line 71
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 72
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 73
LeanError(message='Lean error:\nno goals to be solved') - Line 75
LeanError(message='Lean error:\nno goals to be solved') - Line 76
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 83
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 93
LeanError(message="Lean error:\ntype mismatch, term\n  iteratedFDerivWithin_comp_add_right' n sorry\nafter simplification has type\n  iteratedFDerivWithin ?m.4422 n (fun z => ?m.4431 (z + sorry ())) ?m.4430 = fun x =>\n    iteratedFDerivWithin ?m.4422 n ?m.4431 (sorry () +ᵥ ?m.4430) (x + sorry ()) : Prop\nbut is expected to have type\n  iteratedFDerivWithin 𝕜 n (fun z => f (z + -a)) s = fun x => sorry () : Prop") - Line 97
LeanError(message='Lean error:\ninternal exception #5') - Line 99
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  iteratedFDeriv ?m.5694 ?m.5703 ?m.5702\nE : Type uE\ninst✝¹ : NormedAddCommGroup E\nn : WithTop ℕ∞\nE✝ : Type u_1\nf : E → E✝\nα✝ : Type u_2\nself✝² : NontriviallyNormedField α✝\nself✝¹ : NormedSpace α✝ E\ninst✝ : NormedAddCommGroup E✝\nself✝ : NormedSpace α✝ E✝\np : E → FormalMultilinearSeries α✝ E E✝\nh : HasFTaylorSeriesUpTo n f p\nm : ℕ\nhmn : ↑m ≤ n\nx : E\n⊢ p x m = sorry") - Line 122
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  iteratedFDeriv ?m.12599 ?m.12608 ?m.12607\n𝕜 : Type u\ninst✝¹ : NontriviallyNormedField 𝕜\nE : Type uE\ninst✝ : NormedAddCommGroup E\nF : Type u_1\nf : E → F\nx : E\nn : ℕ\nm : Fin (n + 1) → E\n⊢ (iteratedFDerivWithin 𝕜 (n + 1) f Set.univ x) m = sorry") - Line 125
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 126
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (iteratedFDeriv ?m.3594 (?m.3604 + 1) ?m.3602 ?m.3603) ?m\nE : Type uE\ninst✝ : NormedAddCommGroup E\nx✝ : Type u_1\nf : E → x✝\nx : E\nm : Fin 1 → E\n⊢ sorry = sorry") - Line 128
LeanError(message='Lean error:\nsimp made no progress') - Line 129
LeanError(message="Lean error:\ntype mismatch, term\n  iteratedFDeriv_comp_add_right' n sorry\nafter simplification has type\n  (iteratedFDeriv ?m.3925 n fun z => ?m.3933 (z + sorry ())) = fun x =>\n    iteratedFDeriv ?m.3925 n ?m.3933 (x + sorry ()) : Prop\nbut is expected to have type\n  (iteratedFDeriv 𝕜 n fun z => f (z + -a)) = fun x => sorry () : Prop") - Line 134
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.453 n is not an inductive datatype') - Line 139
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  sorry\nn : ℕ\nc : OrderedFinpartition n\ninst✝ : NeZero n\n| 0") - Line 146
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 148
LeanError(message='Lean error:\n<input>:13:4: expected end of input') - Line 150
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  AnalyticWithinAt ?m.3426 (fun z => ∑ n ∈ ?m.3436, ?m.3434 n z) ?m.3435 ?x\nwith\n  sorry\nE : Type u_4\nF : Type u_2\nx✝¹ : Sort u_1\nq : x✝¹\nt : Set F\nx✝ : Sort u_3\np : x✝\ns : Set E\nhq : ℕ → sorry\nhp : ?m.3384 E F _fvar.42 hq → sorry\nf : E → F\nhf : sorry\nh : Set.MapsTo f s t\nn : ℕ\n⊢ sorry") - Line 159
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.8230 q p c') - Line 160
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.75701 q p c i') - Line 161
LeanError(message='Lean error:\n<input>:1:96: unterminated comment') - Line 162
LeanError(message='Lean error:\n<input>:1:65: expected end of input') - Line 164
LeanError(message='Lean error:\napplication type mismatch\n  Iff.intro fun h i => ?m.5333\nargument\n  fun h i => ?m.5333\nhas type\n  (h : ?m.5315) → (i : ?m.5334 h) → ?m.5335 h i : Sort (imax ?u.5328 ?u.5331)\nbut is expected to have type\n  ?m.5315 → ?m.5316 : Prop') - Line 165
LeanError(message='Lean error:\nsimp made no progress') - Line 168
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ContDiff ?m.1085 ?m.1090 ?m.1096\nι : Type u_2\ninst✝² : Fintype ι\nF' : ι → Type u_4\ninst✝¹ : (i : ι) → NormedAddCommGroup (F' i)\ninst✝ : DecidableEq ι\nk : WithTop ℕ∞\nx : (i : ι) → F' i\ni : ι\n⊢ sorry") - Line 169
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 176
LeanError(message='Lean error:\ninternal exception #5') - Line 179
LeanError(message='Lean error:\nsimp made no progress') - Line 181
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 185
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 188
LeanError(message='Lean error:\nsimp made no progress') - Line 189
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 195
LeanError(message='Lean error:\n<input>:1:34: expected end of input') - Line 197
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 198
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 220
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 225
LeanError(message='Lean error:\ntype mismatch\n  fun x => ?m.20568\nhas type\n  (x : ?m.20564) → ?m.20569 x : Sort (imax ?u.20563 ?u.20566)\nbut is expected to have type\n  sorry : Prop') - Line 236
LeanError(message="Lean error:\napplication type mismatch\n  Units.mk0 x hx\nargument\n  hx\nhas type\n  x ≠ @OfNat.ofNat 𝕜' 0 (@Zero.toOfNat0 𝕜' (@MulZeroClass.toZero 𝕜' NonUnitalNonAssocSemiring.toMulZeroClass)) : Prop\nbut is expected to have type\n  x ≠ @OfNat.ofNat 𝕜' 0 (@Zero.toOfNat0 𝕜' (@MulZeroClass.toZero 𝕜' MulZeroOneClass.toMulZeroClass)) : Prop") - Line 240
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 244
LeanError(message='Lean error:\nsimp made no progress') - Line 247
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5119\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nn : WithTop ℕ∞\nα✝ : Type u_5\nF✝ : Type u_6\nf : α✝ → F✝\nt : Set α✝\ny : α✝\n⊢ ContDiffWithinAt 𝕜 n f t y ↔ ∀ (i : ?m.4891), ContDiffWithinAt 𝕜 n (fun x => sorry) t y") - Line 261
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5097\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nn : WithTop ℕ∞\nE✝ : Type u_5\nF✝ : Type u_6\nf : E✝ → F✝\ny : E✝\n⊢ ContDiffAt 𝕜 n f y ↔ ∀ (i : ?m.4870), ContDiffAt 𝕜 n (fun x => sorry) y") - Line 262
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5097\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nn : WithTop ℕ∞\nα✝ : Type u_5\nF✝ : Type u_6\nf : α✝ → F✝\nt : Set α✝\n⊢ ContDiffOn 𝕜 n f t ↔ ∀ (i : ?m.4870), ContDiffOn 𝕜 n (fun x => sorry) t") - Line 263
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5076\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nn : WithTop ℕ∞\nE✝ : Type u_5\nF✝ : Type u_6\nf : E✝ → F✝\n⊢ ContDiff 𝕜 n f ↔ ∀ (i : ?m.4850), ContDiff 𝕜 n fun x => sorry") - Line 264
LeanError(message='Lean error:\ninternal exception #5') - Line 265
LeanError(message='Lean error:\ninternal exception #5') - Line 266
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.23491 : Sort ?u.23490\nbut is expected to have type\n  HasStrictDerivAt (sorry ()) (b - a) x : Prop') - Line 274
LeanError(message='Lean error:\ninternal exception #5') - Line 277
LeanError(message='Lean error:\ninternal exception #5') - Line 283
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  fderivWithin ?m.2807 Inv.inv ?m.2804 ?m.2812\n𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nx_ne_zero : x ≠ 0\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ fderivWithin 𝕜 (fun x => x⁻¹) s x = ContinuousLinearMap.smulRight 1 (-(x ^ 2)⁻¹)") - Line 288
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 293
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 294
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 311
LeanError(message='Lean error:\ninternal exception #5') - Line 313
LeanError(message='Lean error:\ninternal exception #5') - Line 314
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[ℝ] ℝ') - Line 398
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[ℝ] ℝ') - Line 399
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[ℝ] ℝ') - Line 400
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[ℝ] ℝ') - Line 402
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[ℝ] ℝ') - Line 403
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 444
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  ContinuousSMul ?m.7780 ?m.7782') - Line 451
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  ContinuousSMul ?m.7754 ?m.7756') - Line 452
LeanError(message='Lean error:\napplication type mismatch\n  DifferentiableAt.comp (-a) (Eq.symm (neg_neg a) ▸ H) (Differentiable.differentiableAt differentiable_neg)\nargument\n  Differentiable.differentiableAt differentiable_neg\nhas type\n  DifferentiableAt ?m.4929 (@Neg.neg ?m.4929 NegZeroClass.toNeg) ?m.4933 : Prop\nbut is expected to have type\n  DifferentiableAt 𝕜 (@Neg.neg 𝕜 InvolutiveNeg.toNeg) (-a) : Prop') - Line 471
LeanError(message='Lean error:\nsimp made no progress') - Line 472
LeanError(message='Lean error:\nsimp made no progress') - Line 475
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 481
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 483
LeanError(message='Lean error:\ninternal exception #5') - Line 510
LeanError(message='Lean error:\nsimp made no progress') - Line 553
LeanError(message="Lean error:\ntactic 'unfold' failed to unfold 'derivWithin' at\n  sorry = deriv f x") - Line 557
LeanError(message='Lean error:\nsimp made no progress') - Line 562
LeanError(message='Lean error:\nsimp made no progress') - Line 565
LeanError(message='Lean error:\ninternal exception #5') - Line 568
LeanError(message='Lean error:\ninternal exception #5') - Line 569
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 571
LeanError(message='Lean error:\ninternal exception #5') - Line 573
LeanError(message='Lean error:\ninternal exception #5') - Line 586
LeanError(message='Lean error:\ninternal exception #5') - Line 587
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.le_of_lipschitzOn sorry ?m.57543 hlip\nargument\n  hlip\nhas type\n  @LipschitzOnWith 𝕜 F (@EMetricSpace.toPseudoEMetricSpace 𝕜 (@MetricSpace.toEMetricSpace 𝕜 NormedField.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace C f s : Prop\nbut is expected to have type\n  @LipschitzOnWith ?m.52950 ?m.52953\n    (@EMetricSpace.toPseudoEMetricSpace ?m.52950\n      (@MetricSpace.toEMetricSpace ?m.52950 NormedAddCommGroup.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace ?m.57544 ?m.52956 ?m.57475 : Prop') - Line 641
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.le_of_lipschitz sorry hlip\nargument\n  hlip\nhas type\n  @LipschitzWith 𝕜 F (@EMetricSpace.toPseudoEMetricSpace 𝕜 (@MetricSpace.toEMetricSpace 𝕜 NormedField.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace C f : Prop\nbut is expected to have type\n  @LipschitzWith ?m.52525 ?m.52528\n    (@EMetricSpace.toPseudoEMetricSpace ?m.52525\n      (@MetricSpace.toEMetricSpace ?m.52525 NormedAddCommGroup.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace ?m.57050 ?m.52531 : Prop') - Line 642
LeanError(message='Lean error:\napplication type mismatch\n  norm_fderiv_le_of_lipschitzOn 𝕜 ?m.52964 hlip\nargument\n  hlip\nhas type\n  @LipschitzOnWith 𝕜 F (@EMetricSpace.toPseudoEMetricSpace 𝕜 (@MetricSpace.toEMetricSpace 𝕜 NormedField.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace C f s : Prop\nbut is expected to have type\n  @LipschitzOnWith ?m.52819 ?m.52822\n    (@EMetricSpace.toPseudoEMetricSpace ?m.52819\n      (@MetricSpace.toEMetricSpace ?m.52819 NormedAddCommGroup.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace ?m.52965 ?m.52825 ?m.52827 : Prop') - Line 644
LeanError(message='Lean error:\napplication type mismatch\n  norm_fderiv_le_of_lipschitz 𝕜 hlip\nargument\n  hlip\nhas type\n  @LipschitzWith 𝕜 F (@EMetricSpace.toPseudoEMetricSpace 𝕜 (@MetricSpace.toEMetricSpace 𝕜 NormedField.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace C f : Prop\nbut is expected to have type\n  @LipschitzWith ?m.52394 ?m.52397\n    (@EMetricSpace.toPseudoEMetricSpace ?m.52394\n      (@MetricSpace.toEMetricSpace ?m.52394 NormedAddCommGroup.toMetricSpace))\n    EMetricSpace.toPseudoEMetricSpace ?m.52402 ?m.52400 : Prop') - Line 645
LeanError(message="Lean error:\napplication type mismatch\n  HasFDerivAtFilter.comp x (HasFDerivAtFilter.restrictScalars 𝕜 sorry) hf\nargument\n  hf\nhas type\n  HasFDerivAtFilter f f' x L'' : Prop\nbut is expected to have type\n  HasFDerivAtFilter f ?m.31798 x L'' : Prop") - Line 660
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 661
LeanError(message="Lean error:\napplication type mismatch\n  HasStrictFDerivAt.comp x (HasStrictFDerivAt.restrictScalars 𝕜 ?m.37883) hf\nargument\n  hf\nhas type\n  HasStrictFDerivAt f f' x : Prop\nbut is expected to have type\n  HasStrictFDerivAt ?m.39943 ?m.39944 x : Prop") - Line 662
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 663
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 665
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 667
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 669
LeanError(message='Lean error:\ninternal exception #5') - Line 683
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 685
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 687
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 689
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 691
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 693
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 695
LeanError(message="Lean error:\n<input>:1:24: expected ':' or term") - Line 697
LeanError(message="Lean error:\n<input>:1:48: expected ':' or term") - Line 703
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 704
LeanError(message="Lean error:\n<input>:1:28: expected ':' or term") - Line 705
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 706
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivWithinAt.comp_hasDerivWithinAt t (hf (g t) (hmaps ht)) AffineMap.hasDerivWithinAt_lineMap\nargument\n  AffineMap.hasDerivWithinAt_lineMap\nhas type\n  HasDerivWithinAt (⇑(AffineMap.lineMap ?m.29346 ?m.29347)) (?m.29347 - ?m.29346) ?m.29348 ?m.29349 : Prop\nbut is expected to have type\n  HasDerivWithinAt g sorry I t : Prop') - Line 731
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 748
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * 0\ncase h.e'_9\n𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\n𝔸 : Type u_5\ninst✝¹ : NormedRing 𝔸\ninst✝ : NormedAlgebra 𝕜 𝔸\nc : 𝕜 → 𝔸\nc' : 𝔸\nhc : HasDerivWithinAt c c' s x\nd : 𝔸\n⊢ c' * d = c' * d + c x * 0") - Line 754
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * 0\ncase h.e'_9\n𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nx : 𝕜\n𝔸 : Type u_5\ninst✝¹ : NormedRing 𝔸\ninst✝ : NormedAlgebra 𝕜 𝔸\nc : 𝕜 → 𝔸\nc' : 𝔸\nhc : HasStrictDerivAt c c' x\nd : 𝔸\n⊢ c' * d = c' * d + c x * 0") - Line 757
LeanError(message='Lean error:\ninternal exception #5') - Line 759
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 761
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  0 * ?a\ncase h.e'_9\n𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\n𝔸 : Type u_5\ninst✝¹ : NormedRing 𝔸\ninst✝ : NormedAlgebra 𝕜 𝔸\nd : 𝕜 → 𝔸\nd' c : 𝔸\nhd : HasDerivWithinAt d d' s x\n⊢ c * d' = 0 * d x + c * d'") - Line 763
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  0 * ?a\ncase h.e'_9\n𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nx : 𝕜\n𝔸 : Type u_5\ninst✝¹ : NormedRing 𝔸\ninst✝ : NormedAlgebra 𝕜 𝔸\nd : 𝕜 → 𝔸\nd' c : 𝔸\nhd : HasStrictDerivAt d d' x\n⊢ c * d' = 0 * d x + c * d'") - Line 765
LeanError(message='Lean error:\nsimp made no progress') - Line 767
LeanError(message='Lean error:\nsimp made no progress') - Line 769
LeanError(message='Lean error:\nsimp made no progress') - Line 787
LeanError(message='Lean error:\ninternal exception #5') - Line 794
LeanError(message='Lean error:\ninternal exception #5') - Line 795
LeanError(message='Lean error:\ninternal exception #5') - Line 796
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.hasDerivAt (hasFDerivAt_update x y)\nargument\n  hasFDerivAt_update x y\nhas type\n  HasFDerivAt (Function.update x ?m.3543)\n    (ContinuousLinearMap.pi (Pi.single ?m.3543 (ContinuousLinearMap.id ?m.3530 𝕜))) y : Prop\nbut is expected to have type\n  HasFDerivAt ?m.4219 ?m.4222 ?m.4220 : Prop') - Line 799
LeanError(message='Lean error:\ntype mismatch\n  if f : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.16655 : Sort ?u.16654\nbut is expected to have type\n  deriv (fun x => f (-x)) x = -deriv f (-x) : Prop') - Line 807
LeanError(message="Lean error:\nunknown free variable '_fvar.487'") - Line 810
LeanError(message='Lean error:\nsimp made no progress') - Line 812
LeanError(message='Lean error:\nsimp made no progress') - Line 813
LeanError(message="Lean error:\n<input>:1:9: expected ':' or term") - Line 816
LeanError(message='Lean error:\n<input>:1:37: expected end of input') - Line 819
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 820
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 821
LeanError(message="Lean error:\napplication type mismatch\n  lt_of_le_of_lt sorry hr\nargument\n  hr\nhas type\n  @norm E NormedAddCommGroup.toNorm f' < r : Prop\nbut is expected to have type\n  @norm E SeminormedAddGroup.toNorm f' < r : Prop") - Line 827
LeanError(message='Lean error:\nno goals to be solved') - Line 828
LeanError(message='Lean error:\ninternal exception #5') - Line 830
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 836
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 842
LeanError(message='Lean error:\nsimp made no progress') - Line 847
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 849
LeanError(message='Lean error:\nsimp made no progress') - Line 855
LeanError(message='Lean error:\ninternal exception #5') - Line 861
LeanError(message='Lean error:\ninternal exception #5') - Line 876
LeanError(message='Lean error:\ninternal exception #5') - Line 885
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6486 is not an inductive datatype') - Line 888
LeanError(message='Lean error:\ninternal exception #5') - Line 889
LeanError(message='Lean error:\n<input>:2:21: expected end of input') - Line 891
LeanError(message='Lean error:\ntype mismatch\n  HasStrictFDerivAt.const_smul (hasStrictFDerivAt_id sorry) t⁻¹\nhas type\n  HasStrictFDerivAt (fun x => t⁻¹ • id x) (t⁻¹ • ContinuousLinearMap.id ?m.44501 ?m.44506) sorry : Prop\nbut is expected to have type\n  HasStrictFDerivAt (fun y => t⁻¹ • y) (t⁻¹ • sorry) sorry : Prop') - Line 892
LeanError(message='Lean error:\ntype mismatch\n  HasFDerivAt.const_smul (hasFDerivAt_id sorry) t⁻¹\nhas type\n  HasFDerivAt (fun x => t⁻¹ • id x) (t⁻¹ • ContinuousLinearMap.id ?m.44503 ?m.44508) sorry : Prop\nbut is expected to have type\n  HasFDerivAt (fun y => t⁻¹ • y) (t⁻¹ • sorry) sorry : Prop') - Line 895
LeanError(message='Lean error:\n<input>:2:21: expected end of input') - Line 899
LeanError(message='Lean error:\ninternal exception #5') - Line 900
LeanError(message='Lean error:\ntype mismatch\n  hx ▸ h\nhas type\n  DifferentiableAt ℝ (fun x => ‖x‖) sorry : Prop\nbut is expected to have type\n  DifferentiableAt ℝ (fun x => ‖x‖) 0 : Prop') - Line 904
LeanError(message="Lean error:\n<input>:2:21: expected '⟩'") - Line 916
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.28242\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nα✝ : Type u_5\nF✝ : Type u_6\nf : α✝ → F✝\nt : Set α✝\ny : α✝\n⊢ DifferentiableWithinAt 𝕜 f t y ↔ ∀ (i : ?m.28013), DifferentiableWithinAt 𝕜 (fun x => sorry) t y") - Line 918
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.28218\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nE✝ : Type u_5\nF✝ : Type u_6\nf : E✝ → F✝\ny : E✝\n⊢ DifferentiableAt 𝕜 f y ↔ ∀ (i : ?m.27990), DifferentiableAt 𝕜 (fun x => sorry) y") - Line 919
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.28218\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nα✝ : Type u_5\nF✝ : Type u_6\nf : α✝ → F✝\nt : Set α✝\n⊢ DifferentiableOn 𝕜 f t ↔ ∀ (i : ?m.27990), DifferentiableOn 𝕜 (fun x => sorry) t") - Line 920
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.28195\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nE✝ : Type u_5\nF✝ : Type u_6\nf : E✝ → F✝\n⊢ Differentiable 𝕜 f ↔ ∀ (i : ?m.27968), Differentiable 𝕜 fun x => sorry") - Line 921
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.59874\nX✝ : Type u_5\np✝ : ENNReal\nι✝ : Type u_6\nα✝¹ : ι✝ → Type u_7\nf : X✝ → PiLp p✝ α✝¹\nα✝ : Type u_8\nself✝¹ : NontriviallyNormedField α✝\ninst✝³ : TopologicalSpace X✝\nself✝ : AddCommGroup X✝\ninst✝² : (i : ι✝) → SeminormedAddCommGroup (α✝¹ i)\ninst✝¹ : Module α✝ X✝\ninst✝ : (i : ι✝) → Module α✝ (α✝¹ i)\nf' : X✝ →L[α✝] PiLp p✝ α✝¹\ny : X✝\n⊢ HasStrictFDerivAt f f' y ↔ ∀ (i : ι✝), HasStrictFDerivAt (fun x => sorry) ((PiLp.proj p✝ α✝¹ i).comp f') y") - Line 922
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.59923\nX✝ : Type u_5\np✝ : ENNReal\nι✝ : Type u_6\nα✝¹ : ι✝ → Type u_7\nf : X✝ → PiLp p✝ α✝¹\nα✝ : Type u_8\nself✝¹ : NontriviallyNormedField α✝\ninst✝³ : TopologicalSpace X✝\nself✝ : AddCommGroup X✝\ninst✝² : (i : ι✝) → SeminormedAddCommGroup (α✝¹ i)\ninst✝¹ : Module α✝ X✝\ninst✝ : (i : ι✝) → Module α✝ (α✝¹ i)\nf' : X✝ →L[α✝] PiLp p✝ α✝¹\nt : Set X✝\ny : X✝\n⊢ HasFDerivWithinAt f f' t y ↔ ∀ (i : ι✝), HasFDerivWithinAt (fun x => sorry) ((PiLp.proj p✝ α✝¹ i).comp f') t y") - Line 923
LeanError(message='Lean error:\nsimp made no progress') - Line 966
LeanError(message="Lean error:\napplication type mismatch\n  Asymptotics.IsLittleO.sum h\nargument\n  h\nhas type\n  ∀ i ∈ u,\n    @Asymptotics.IsLittleO (E × E) F E NormedAddCommGroup.toNorm NormedAddCommGroup.toNorm (nhds (x, x))\n      (fun p => A i p.1 - A i p.2 - (A' i) (p.1 - p.2)) fun p => p.1 - p.2 : Prop\nbut is expected to have type\n  ∀ i ∈ ?m.32575,\n    @Asymptotics.IsLittleO ?m.32566 ?m.32567 ?m.32568 SeminormedAddCommGroup.toNorm SeminormedAddCommGroup.toNorm\n      ?m.32572 (?m.32574 i) ?m.32571 : Prop") - Line 967
LeanError(message="Lean error:\napplication type mismatch\n  Asymptotics.IsLittleO.sum h\nargument\n  h\nhas type\n  ∀ i ∈ u,\n    @Asymptotics.IsLittleO E F E NormedAddCommGroup.toNorm NormedAddCommGroup.toNorm L\n      (fun x' => A i x' - A i x - (A' i) (x' - x)) fun x' => x' - x : Prop\nbut is expected to have type\n  ∀ i ∈ ?m.32531,\n    @Asymptotics.IsLittleO ?m.32522 ?m.32523 ?m.32524 SeminormedAddCommGroup.toNorm SeminormedAddCommGroup.toNorm\n      ?m.32528 (?m.32530 i) ?m.32527 : Prop") - Line 968
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 987
LeanError(message='Lean error:\nsimp made no progress') - Line 996
LeanError(message='Lean error:\nsimp made no progress') - Line 997
LeanError(message='Lean error:\nsimp made no progress') - Line 998
LeanError(message='Lean error:\nsimp made no progress') - Line 1002
LeanError(message='Lean error:\nsimp made no progress') - Line 1003
LeanError(message='Lean error:\nsimp made no progress') - Line 1006
LeanError(message='Lean error:\nsimp made no progress') - Line 1007
LeanError(message='Lean error:\nsimp made no progress') - Line 1008
LeanError(message='Lean error:\nsimp made no progress') - Line 1032
LeanError(message='Lean error:\ninternal exception #5') - Line 1034
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1036
LeanError(message='Lean error:\nsimp made no progress') - Line 1039
LeanError(message="Lean error:\ntype mismatch, term\n  hasFDerivWithinAt_comp_add_right sorry\nafter simplification has type\n  HasFDerivWithinAt (fun x => ?m.27657 (x + sorry ())) ?m.27658 ?m.27660 ?m.27659 ↔\n    HasFDerivWithinAt ?m.27657 ?m.27658 (sorry () +ᵥ ?m.27660) (?m.27659 + sorry ()) : Prop\nbut is expected to have type\n  HasFDerivWithinAt (fun x => f (x + -a)) f' s x ↔ HasFDerivWithinAt f f' (-a +ᵥ s) (x + -a) : Prop") - Line 1046
LeanError(message='Lean error:\ntype mismatch, term\n  fderivWithin_comp_add_right sorry\nafter simplification has type\n  fderivWithin ?m.27718 (fun x => ?m.27726 (x + sorry ())) ?m.27728 ?m.27727 =\n    fderivWithin ?m.27718 ?m.27726 (sorry () +ᵥ ?m.27728) (?m.27727 + sorry ()) : Prop\nbut is expected to have type\n  fderivWithin 𝕜 (fun x => f (x + -a)) s x = fderivWithin 𝕜 f (-a +ᵥ s) (x + -a) : Prop') - Line 1048
LeanError(message='Lean error:\nno goals to be solved') - Line 1052
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 1054
LeanError(message='Lean error:\ninternal exception #5') - Line 1063
LeanError(message='Lean error:\ninternal exception #5') - Line 1064
LeanError(message='Lean error:\n<input>:5:12: expected end of input') - Line 1068
LeanError(message='Lean error:\n<input>:3:10: expected end of input') - Line 1072
LeanError(message='Lean error:\n<input>:4:10: expected end of input') - Line 1073
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1077
LeanError(message='Lean error:\nno goals to be solved') - Line 1078
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.19532 is not an inductive datatype') - Line 1079
LeanError(message='Lean error:\n<input>:1:97: unterminated comment') - Line 1080
LeanError(message='Lean error:\nno goals to be solved') - Line 1081
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1083
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 1084
LeanError(message='Lean error:\ninternal exception #5') - Line 1086
LeanError(message='Lean error:\ninternal exception #5') - Line 1087
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1095
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.29098 is not an inductive datatype') - Line 1096
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1097
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1102
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  CPolynomialAt 𝕜 f y → CPolynomialAt 𝕜 sorry y\n𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : E → F\ns : Set E\nh : CPolynomialOn 𝕜 f s\ny : E\nhy : y ∈ s\n⊢ CPolynomialAt 𝕜 sorry y") - Line 1103
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1104
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1106
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1113
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ContinuousMultilinearMap 𝕜 (fun i => 𝕜) F') - Line 1118
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.344444 ?m.344450') - Line 1122
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.21914') - Line 1126
LeanError(message='Lean error:\ninternal exception #5') - Line 1129
LeanError(message='Lean error:\ninternal exception #5') - Line 1133
LeanError(message='Lean error:\ninternal exception #5') - Line 1136
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1147
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1152
LeanError(message='Lean error:\ninternal exception #5') - Line 1162
LeanError(message='Lean error:\nno goals to be solved') - Line 1164
LeanError(message='Lean error:\ninternal exception #5') - Line 1169
LeanError(message='Lean error:\ninternal exception #5') - Line 1171
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] F') - Line 1182
LeanError(message='Lean error:\nsimp made no progress') - Line 1189
LeanError(message='Lean error:\nsimp made no progress') - Line 1190
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1192
LeanError(message='Lean error:\ninternal exception #5') - Line 1204
LeanError(message='Lean error:\ninternal exception #5') - Line 1207
LeanError(message='Lean error:\ninternal exception #5') - Line 1208
LeanError(message='Lean error:\nsimp made no progress') - Line 1209
LeanError(message='Lean error:\ninternal exception #5') - Line 1212
LeanError(message='Lean error:\ninternal exception #5') - Line 1222
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1226
LeanError(message='Lean error:\nno goals to be solved') - Line 1230
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1258
LeanError(message='Lean error:\nno goals to be solved') - Line 1260
LeanError(message='Lean error:\ninternal exception #5') - Line 1266
LeanError(message='Lean error:\ninternal exception #5') - Line 1281
LeanError(message='Lean error:\ninternal exception #5') - Line 1351
LeanError(message='Lean error:\nno goals to be solved') - Line 1353
LeanError(message='Lean error:\nno goals to be solved') - Line 1354
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1356
LeanError(message='Lean error:\nno goals to be solved') - Line 1357
LeanError(message='Lean error:\ninternal exception #5') - Line 1367
LeanError(message='Lean error:\ninternal exception #5') - Line 1368
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 1378
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 1380
LeanError(message='Lean error:\ninternal exception #5') - Line 1381
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1392
LeanError(message='Lean error:\nno goals to be solved') - Line 1393
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'nhdsWithin'.") - Line 1394
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1395
LeanError(message='Lean error:\ninternal exception #5') - Line 1408
LeanError(message='Lean error:\nsimp made no progress') - Line 1409
LeanError(message='Lean error:\ninternal exception #5') - Line 1412
LeanError(message='Lean error:\nsimp made no progress') - Line 1413
LeanError(message='Lean error:\ninternal exception #5') - Line 1414
LeanError(message='Lean error:\nsimp made no progress') - Line 1415
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry = ?m.33738\nis not definitionally equal to target\n  fderivWithin 𝕜 (fun x => (↑L).comp (f x)) s x =\n    (↑((ContinuousLinearEquiv.refl 𝕜 F).arrowCongr L)).comp (fderivWithin 𝕜 f s x)") - Line 1418
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry = ?m.33723\nis not definitionally equal to target\n  fderiv 𝕜 (fun x => (↑L).comp (f x)) x = (↑((ContinuousLinearEquiv.refl 𝕜 F).arrowCongr L)).comp (fderiv 𝕜 f x)") - Line 1419
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 1421
LeanError(message='Lean error:\nsimp made no progress') - Line 1422
LeanError(message='Lean error:\ninternal exception #5') - Line 1423
LeanError(message='Lean error:\nsimp made no progress') - Line 1424
LeanError(message='Lean error:\ninternal exception #5') - Line 1425
LeanError(message='Lean error:\nsimp made no progress') - Line 1426
LeanError(message='Lean error:\ninternal exception #5') - Line 1427
LeanError(message='Lean error:\nsimp made no progress') - Line 1428
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 1429
LeanError(message='Lean error:\ninternal exception #5') - Line 1430
LeanError(message='Lean error:\ninternal exception #5') - Line 1452
LeanError(message='Lean error:\ninternal exception #5') - Line 1453
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1457
LeanError(message="Lean error:\ntype mismatch\n  Filter.tendsto_congr fun x' => ?m.29270\nhas type\n  Filter.Tendsto ?m.29194 ?m.29196 ?m.29197 ↔ Filter.Tendsto ?m.29195 ?m.29196 ?m.29197 : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x' => ‖x' - x‖⁻¹ • (f x' - f x - f' (x' - x))) L (nhds 0) ↔\n    Filter.Tendsto (fun e => ‖‖e - x‖⁻¹ * ‖f e - f x - f' (e - x)‖ - 0‖) L (nhds 0) : Prop") - Line 1459
LeanError(message='Lean error:\nno goals to be solved') - Line 1460
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry v is not an inductive datatype') - Line 1461
LeanError(message='Lean error:\nno goals to be solved') - Line 1462
LeanError(message='Lean error:\n<input>:4:19: unexpected end of input') - Line 1469
LeanError(message='Lean error:\n<input>:4:16: unexpected end of input') - Line 1470
LeanError(message="Lean error:\nunknown free variable '_fvar.3661'") - Line 1474
LeanError(message="Lean error:\nunknown free variable '_fvar.3661'") - Line 1475
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_4\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_5\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_6\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx✝ : Sort u_7\nA : x✝\nL : E →L[𝕜] F\nr ε δ : ℝ\nh : ε ≤ δ\n⊢ sorry ⊆ sorry") - Line 1476
LeanError(message='Lean error:\nrcases tactic failed: hx : (?m.8649 _fvar.5249).1 sorry x is not an inductive datatype') - Line 1477
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ R > 0, ∀ y ∈ sorry, ‖sorry‖ ≤ δ * ‖sorry‖) → ∃ R > 0, ∀ r ∈ Set.Ioo 0 R, x ∈ ?m.6386\n𝕜 : Type u_4\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_5\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_6\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : E → F\nx✝ : Sort u_7\nA : x✝\nε : ℝ\nhε : 0 < ε\nx : E\nhx : DifferentiableAt 𝕜 f x\nδ : ℝ := ε / 2 / 2\n⊢ ∃ R > 0, ∀ r ∈ Set.Ioo 0 R, x ∈ ?m.6386") - Line 1478
LeanError(message='Lean error:\nno goals to be solved') - Line 1479
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\n𝕜 : Type u_4\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_5\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_6\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : E → F\nK : Set (E →L[𝕜] F)\nx✝ : Sort u_7\nD : x✝\nx : E\nhx : x ∈ {x | DifferentiableAt 𝕜 f x ∧ fderiv 𝕜 f x ∈ K}\n⊢ x ∈ sorry") - Line 1480
LeanError(message='Lean error:\nrcases tactic failed: x✝ : E → Prop is not an inductive datatype') - Line 1481
LeanError(message='Lean error:\nsimp made no progress') - Line 1483
LeanError(message='Lean error:\nsimp made no progress') - Line 1484
LeanError(message='Lean error:\nno goals to be solved') - Line 1485
LeanError(message='Lean error:\nsimp made no progress') - Line 1502
LeanError(message='Lean error:\nno goals to be solved') - Line 1503
LeanError(message='Lean error:\ninternal exception #5') - Line 1504
LeanError(message='Lean error:\napplication type mismatch\n  IsBoundedBilinearMap.hasStrictFDerivAt isBoundedBilinearMap_comp\nargument\n  isBoundedBilinearMap_comp\nhas type\n  @IsBoundedBilinearMap ?m.62684 ?m.62685 (?m.62865 →L[?m.62684] ?m.63039) ContinuousLinearMap.toSeminormedAddCommGroup\n    ContinuousLinearMap.toNormedSpace (?m.62691 →L[?m.62684] ?m.62865) ContinuousLinearMap.toSeminormedAddCommGroup\n    ContinuousLinearMap.toNormedSpace (?m.62691 →L[?m.62684] ?m.63039) ContinuousLinearMap.toSeminormedAddCommGroup\n    ContinuousLinearMap.toNormedSpace fun p => p.1.comp p.2 : Prop\nbut is expected to have type\n  @IsBoundedBilinearMap ?m.63231 ?m.63232 (G →L[𝕜] H) NormedAddCommGroup.toSeminormedAddCommGroup ?m.63235 (F →L[𝕜] G)\n    NormedAddCommGroup.toSeminormedAddCommGroup ?m.63238 ?m.63239 NormedAddCommGroup.toSeminormedAddCommGroup ?m.63241\n    ?m.63242 : Prop') - Line 1522
LeanError(message="Lean error:\ntactic 'exact' failed, attempting to close the goal using\n  sorry\nthis is often due occurs-check failure\n𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nf : E → F\nf' : E →L[𝕜] F\nx : E\ns : Set E\n𝕜' : Type u_7\ninst✝² : NontriviallyNormedField 𝕜'\ninst✝¹ : NormedAlgebra 𝕜 𝕜'\ninst✝ : NormedSpace 𝕜' F\nc : E → 𝕜'\nc' : E →L[𝕜] 𝕜'\nhc : HasFDerivWithinAt c c' s x\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun y => c y • f y) sorry s x") - Line 1552
LeanError(message="Lean error:\ntactic 'exact' failed, attempting to close the goal using\n  sorry\nthis is often due occurs-check failure\n𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nf : E → F\nf' : E →L[𝕜] F\nx : E\n𝕜' : Type u_7\ninst✝² : NontriviallyNormedField 𝕜'\ninst✝¹ : NormedAlgebra 𝕜 𝕜'\ninst✝ : NormedSpace 𝕜' F\nc : E → 𝕜'\nc' : E →L[𝕜] 𝕜'\nhc : HasFDerivAt c c' x\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun y => c y • f y) sorry x") - Line 1553
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] 𝕜'") - Line 1570
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] 𝕜'") - Line 1572
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] 𝕜'") - Line 1574
LeanError(message="Lean error:\napplication type mismatch\n  Eq.mpr ?m.56513\nargument\n  ?m.56513\nhas type\n  HasStrictFDerivAt (fun y => sorry) sorry x = HasStrictFDerivAt (fun y => c y * sorry) (c'.smulRight sorry) x : Prop\nbut is expected to have type\n  ?α = ?β : Prop") - Line 1588
LeanError(message="Lean error:\napplication type mismatch\n  Eq.mpr ?m.56524\nargument\n  ?m.56524\nhas type\n  HasFDerivWithinAt (fun y => sorry) sorry s x =\n    HasFDerivWithinAt (fun y => c y * sorry) (c'.smulRight sorry) s x : Prop\nbut is expected to have type\n  ?α = ?β : Prop") - Line 1590
LeanError(message="Lean error:\napplication type mismatch\n  Eq.mpr ?m.56515\nargument\n  ?m.56515\nhas type\n  HasFDerivAt (fun y => sorry) sorry x = HasFDerivAt (fun y => c y * sorry) (c'.smulRight sorry) x : Prop\nbut is expected to have type\n  ?α = ?β : Prop") - Line 1592
LeanError(message="Lean error:\napplication type mismatch\n  HasStrictFDerivAt.congr_fderiv hasStrictFDerivAt_list_prod'\nargument\n  hasStrictFDerivAt_list_prod'\nhas type\n  HasStrictFDerivAt (fun x => (List.map x ?m.93392).prod)\n    (∑ i,\n      (List.map ?m.93393 (List.take ↑i ?m.93392)).prod •\n        (ContinuousLinearMap.proj ?m.93392[i]).smulRight (List.map ?m.93393 (List.drop (↑i).succ ?m.93392)).prod)\n    ?m.93393 : Prop\nbut is expected to have type\n  HasStrictFDerivAt ?m.93419 (∑ i ∈ ?m.95994, ?m.95996 i) ?m.93422 : Prop") - Line 1612
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.93093 ?m.93098') - Line 1615
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.110081 ?m.110086') - Line 1616
LeanError(message='Lean error:\nsimp made no progress') - Line 1619
LeanError(message='Lean error:\nsimp made no progress') - Line 1621
LeanError(message='Lean error:\nsimp made no progress') - Line 1622
LeanError(message='Lean error:\nsimp made no progress') - Line 1623
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1626
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1627
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1628
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1631
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1632
LeanError(message="Lean error:\nunknown free variable '_fvar.35813'") - Line 1633
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedAlgebra ?m.77237 ?m.77239') - Line 1646
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedAlgebra ?m.77239 ?m.77241') - Line 1647
LeanError(message='Lean error:\ninternal exception #5') - Line 1652
LeanError(message='Lean error:\nstuck at solving universe constraint\n  ?u.18406+1 =?= max (max (u_2+1) (u_3+1)) ?u.18407\nwhile trying to unify\n  ?m.18408 → (i : ι) → E i : Sort (max (max (u_2 + 1) (u_3 + 1)) ?u.18407)\nwith\n  ?m.18408 → (i : ι) → E i : Sort (max (max (u_2 + 1) (u_3 + 1)) ?u.18407)') - Line 1657
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  HasFDerivAt ?f ?f' ?x\nwith\n  sorry\nι : Type u_6\ninst✝¹ : Fintype ι\nF' : ι → Type u_7\ninst✝ : (i : ι) → NormedAddCommGroup (F' i)\ni : ι\nf : (i : ι) → F' i\n⊢ sorry") - Line 1718
LeanError(message="Lean error:\napplication type mismatch\n  @hasFDerivWithinAt_pi' ?m.72195 ?m.72196 ((i : ι) → F' i) ?m.72198 ?m.72199 f s' ι ?m.72203 F' ?m.72205 ?m.72206\n    (fun f i' => f i') id'\nargument\n  id'\nhas type\n  @ContinuousLinearMap sorry sorry ?refine_1 ?refine_1 (RingHom.id sorry) ((i : ι) → F' i) ?refine_2 ?refine_3\n    ((i : ι) → F' i) ?refine_2 ?refine_3 ?refine_4 ?refine_4 : Type (max u_6 u_7)\nbut is expected to have type\n  @ContinuousLinearMap ?m.72195 ?m.72195 DivisionSemiring.toSemiring DivisionSemiring.toSemiring (RingHom.id ?m.72195)\n    ((i : ι) → F' i) UniformSpace.toTopologicalSpace ENormedAddCommMonoid.toAddCommMonoid ((i : ι) → F' i)\n    Pi.topologicalSpace Pi.addCommMonoid NormedSpace.toModule (Pi.module ι F' ?m.72195) : Type (max u_6 u_7)") - Line 1722
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  DifferentiableWithinAt ?𝕜 ?f ?s ?x\nwith\n  sorry\nι : Type u_6\ninst✝¹ : Fintype ι\nF' : ι → Type u_7\ninst✝ : (i : ι) → NormedAddCommGroup (F' i)\ni : ι\nf : (i : ι) → F' i\ns' : Set ((i : ι) → F' i)\n⊢ sorry") - Line 1726
LeanError(message='Lean error:\ninternal exception #5') - Line 1729
LeanError(message='Lean error:\ninternal exception #5') - Line 1732
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 1735
LeanError(message='Lean error:\nsimp made no progress') - Line 1778
LeanError(message='Lean error:\napplication type mismatch\n  Asymptotics.IsLittleO.trans_isBigO (Asymptotics.isLittleO_iff.mpr fun ε εpos => ?m.59853)\n    (Asymptotics.isBigO_const_mul_self ((sorry + sorry) * sorry) ?m.60498 ?m.60499)\nargument\n  Asymptotics.isBigO_const_mul_self ((sorry + sorry) * sorry) ?m.60498 ?m.60499\nhas type\n  @Asymptotics.IsBigO ?m.60096 ?m.60097 ?m.60097 SeminormedRing.toNorm SeminormedRing.toNorm ?m.60499\n    (fun x => (sorry + sorry) * sorry * ?m.60498 x) ?m.60498 : Prop\nbut is expected to have type\n  @Asymptotics.IsBigO ?m.59670 ?m.59672 ?m.59419 ?m.59748 SeminormedAddCommGroup.toNorm ?m.59825 ?m.59824\n    ?m.59426 : Prop') - Line 1785
LeanError(message='Lean error:\napplication type mismatch\n  HAdd.hAdd x\nargument\n  x\nhas type\n  x✝² : Sort u_4\nbut is expected to have type\n  ?m.55516 : Type ?u.53849') - Line 1786
LeanError(message="Lean error:\n<input>:1:57: expected ':' or term") - Line 1787
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1795
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.8739\n𝕜 : Type u_1\nF : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace 𝕜 F\ninst✝ : CompleteSpace F\nf : F → 𝕜\nx : F\nfrechet : F →L[𝕜] 𝕜\ns : Set F\n⊢ HasFDerivWithinAt f frechet s x ↔\n    HasFDerivWithinAt f ((InnerProductSpace.toDual 𝕜 F) ((InnerProductSpace.toDual 𝕜 F).symm frechet)) s x") - Line 1799
LeanError(message='Lean error:\ninternal exception #5') - Line 1802
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.6954\n𝕜 : Type u_1\nF : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace 𝕜 F\ninst✝ : CompleteSpace F\nf : F → 𝕜\nx : F\nh : DifferentiableAt 𝕜 f x\n⊢ HasFDerivAt f ((InnerProductSpace.toDual 𝕜 F) ((InnerProductSpace.toDual 𝕜 F).symm (fderiv 𝕜 f x))) x") - Line 1804
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.6966\n𝕜 : Type u_1\nF : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace 𝕜 F\ninst✝ : CompleteSpace F\nf : F → 𝕜\nx : F\ns : Set F\nh : DifferentiableWithinAt 𝕜 f s x\n⊢ HasFDerivWithinAt f ((InnerProductSpace.toDual 𝕜 F) ((InnerProductSpace.toDual 𝕜 F).symm (fderivWithin 𝕜 f s x))) s x") - Line 1806
LeanError(message="Lean error:\ntype mismatch\n  hasFDerivWithinAt_univ\nhas type\n  HasFDerivWithinAt ?m.5701 ?m.5702 Set.univ ?m.5703 ↔ HasFDerivAt ?m.5701 ?m.5702 ?m.5703 : Prop\nbut is expected to have type\n  HasFDerivWithinAt f ((InnerProductSpace.toDual 𝕜 F) f') Set.univ x ↔\n    HasFDerivAt f ((InnerProductSpace.toDual 𝕜 F) f') x : Prop") - Line 1808
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.smulRight sorry\nargument\n  sorry\nhas type\n  sorry : Type u_1\nbut is expected to have type\n  ?m.4335 →L[?m.4341] ?m.4342 : Type (max ?u.4334 ?u.4331)') - Line 1812
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.smulRight sorry\nargument\n  sorry\nhas type\n  sorry : Type u_1\nbut is expected to have type\n  ?m.4335 →L[?m.4341] ?m.4342 : Type (max ?u.4334 ?u.4331)') - Line 1813
LeanError(message="Lean error:\ntype mismatch, term\n  h\nafter simplification has type\n  HasDerivAt g (1 * (starRingEnd 𝕜) g') u : Prop\nbut is expected to have type\n  HasDerivAt g ((starRingEnd 𝕜) g') u : Prop") - Line 1814
LeanError(message="Lean error:\ntactic 'assumption' failed\n𝕜 : Type u_1\ninst✝ : RCLike 𝕜\ng : 𝕜 → 𝕜\ng' u : 𝕜\nh : HasDerivAt g g' u\n⊢ HasDerivAt g (1 * g') u") - Line 1815
LeanError(message='Lean error:\ninternal exception #5') - Line 1832
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  fderiv ?m.3124 ?m.3133 ?m.3134\n𝕜 : Type u_1\nF : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace 𝕜 F\ninst✝ : CompleteSpace F\nf : F → 𝕜\nx : F\nf₁ : F → 𝕜\nhL : f₁ =ᶠ[nhds x] f\n⊢ (InnerProductSpace.toDual 𝕜 F).symm (fderiv 𝕜 f₁ x) = (InnerProductSpace.toDual 𝕜 F).symm (fderiv 𝕜 f x)") - Line 1839
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 1841
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  fderiv ?m.6949 fun x => ?c\n𝕜 : Type u_1\nF : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace 𝕜 F\ninst✝ : CompleteSpace F\nx : F\nc : 𝕜\n⊢ (InnerProductSpace.toDual 𝕜 F).symm (fderiv 𝕜 (fun x => c) x) = 0") - Line 1844
LeanError(message='Lean error:\nno goals to be solved') - Line 1853
LeanError(message='Lean error:\ninternal exception #5') - Line 1858
LeanError(message='Lean error:\napplication type mismatch\n  Or.inr cpos\nargument\n  cpos\nhas type\n  sorry : Sort ?u.23269\nbut is expected to have type\n  0 < ?m.26168 : Prop') - Line 1859
LeanError(message='Lean error:\nno goals to be solved') - Line 1860
LeanError(message='Lean error:\nsimp made no progress') - Line 1879
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1884
LeanError(message='Lean error:\ntype mismatch\n  mem_nhds_iff.mp hs\nhas type\n  ∃ t ⊆ s, IsOpen t ∧ x ∈ t : Prop\nbut is expected to have type\n  ∃ t ⊆ s, sorry ∧ x ∈ t : Prop') - Line 1886
LeanError(message='Lean error:\ninternal exception #5') - Line 1887
LeanError(message='Lean error:\nno goals to be solved') - Line 1892
LeanError(message='Lean error:\nsimp made no progress') - Line 1893
LeanError(message='Lean error:\nsimp made no progress') - Line 1899
LeanError(message='Lean error:\ninternal exception #5') - Line 1902
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a - ?b\nf : ?m.482 → ?m.3837\n𝕜 : Type u_1\nn : WithTop ℕ∞\nα✝ : Type u_2\ns : Set α✝\nx : α✝\nβ✝ : Type u_3\ng : α✝ → β✝\nhf : sorry\nhg : sorry\n⊢ iteratedDerivWithin sorry (f - g) s x = iteratedDerivWithin sorry f s x - iteratedDerivWithin sorry g s x") - Line 1906
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1907
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.7857 ?m.7832') - Line 1908
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.7644 ?m.7619') - Line 1912
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.21966 : Sort ?u.21965\nbut is expected to have type\n  sorry = c • sorry : Prop') - Line 1913
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.5700 : Sort ?u.5699\nbut is expected to have type\n  sorry = c * sorry : Prop') - Line 1914
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = fun x => sorry • sorry\n𝕜 : Type u_1\nF : Type u_2\nn : ℕ\nf : 𝕜 → F\nh : sorry\nc : 𝕜\n⊢ sorry = fun x => sorry • sorry") - Line 1915
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.3515 : Sort ?u.3514\nbut is expected to have type\n  sorry = fun x => sorry : Prop') - Line 1916
LeanError(message='Lean error:\nsimp made no progress') - Line 1918
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1920
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1921
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1924
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (∏ i, ?c i) • ?f ?m\n𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nF : Type u_2\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nn : ℕ\nf : 𝕜 → F\ns : Set 𝕜\nx : 𝕜\nm : Fin n → 𝕜\n⊢ (iteratedFDerivWithin 𝕜 n f s x) m = (∏ i, m i) • (iteratedFDerivWithin 𝕜 n f s x) fun x => 1") - Line 1926
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1930
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1931
LeanError(message='Lean error:\nsimp made no progress') - Line 1935
LeanError(message='Lean error:\ninternal exception #5') - Line 1936
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 1937
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1938
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 1939
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1941
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 1943
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1945
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1946
LeanError(message='Lean error:\nsimp made no progress') - Line 1947
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 1954
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  FormalMultilinearSeries 𝕜 𝕜 𝕜') - Line 1955
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 1956
LeanError(message='Lean error:\nsimp made no progress') - Line 1957
LeanError(message='Lean error:\ninternal exception #5') - Line 1962
LeanError(message='Lean error:\ninternal exception #5') - Line 1963
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 1968
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 1969
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 1972
LeanError(message='Lean error:\nsimp made no progress') - Line 1973
LeanError(message='Lean error:\nsimp made no progress') - Line 1982
LeanError(message='Lean error:\ninternal exception #5') - Line 1984
LeanError(message='Lean error:\nsimp made no progress') - Line 1996
LeanError(message='Lean error:\nno goals to be solved') - Line 2000
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2007
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2009
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2011
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2012
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2014
LeanError(message='Lean error:\nno goals to be solved') - Line 2018
LeanError(message='Lean error:\nno goals to be solved') - Line 2019
LeanError(message='Lean error:\nno goals to be solved') - Line 2021
LeanError(message='Lean error:\ninternal exception #5') - Line 2024
LeanError(message='Lean error:\nno goals to be solved') - Line 2025
LeanError(message='Lean error:\nno goals to be solved') - Line 2026
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2028
LeanError(message='Lean error:\nno goals to be solved') - Line 2029
LeanError(message="Lean error:\ntype mismatch, term\n  hf\nafter simplification has type\n  HasDerivAt (fun t => f (L (x + t • sorry ()))) f' 0 : Prop\nbut is expected to have type\n  HasDerivAt (fun t => f (L x + t • L (sorry ()))) f' 0 : Prop") - Line 2036
LeanError(message='Lean error:\ninternal exception #5') - Line 2038
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2046
LeanError(message='Lean error:\ninternal exception #5') - Line 2047
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace ℝ ℤ\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2048
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 2050
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2073
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2074
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2076
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2078
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2080
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2087
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2090
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2092
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2096
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2115
LeanError(message='Lean error:\nsimp made no progress') - Line 2117
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2122
LeanError(message='Lean error:\nrcases: scrutinee has type\n  (norm ∘ f) w < (norm ∘ f) z : Prop\nbut is expected to have type\n  sorry < sorry : Prop') - Line 2123
LeanError(message='Lean error:\n<input>:1:17: expected token') - Line 2124
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 2125
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 2126
LeanError(message='Lean error:\napplication type mismatch\n  le_antisymm ?m.7369 (hx.right hcU)\nargument\n  hx.right hcU\nhas type\n  c ∈ {x_1 | (fun x_2 => (norm ∘ f) x_2 ≤ (norm ∘ f) x) x_1} : Prop\nbut is expected to have type\n  sorry ≤ sorry : Prop') - Line 2130
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5147 is not an inductive datatype') - Line 2137
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  closure ?s\ncase intro.intro\nE : Type u\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace ℂ E\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : Nontrivial E\ninst✝ : FiniteDimensional ℂ E\nf : E → F\nU : Set E\nhb : Bornology.IsBounded U\nhne : U.Nonempty\nhd : sorry\nhc : sorry\nw : E\nhwU : w ∈ sorry\nhle : IsMaxOn (norm ∘ f) sorry w\n⊢ ∃ z ∈ frontier U, IsMaxOn (norm ∘ f) (closure U) z") - Line 2140
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 2141
LeanError(message='Lean error:\ninternal exception #5') - Line 2142
LeanError(message='Lean error:\nsimp made no progress') - Line 2144
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  0\nx y : ℂ\nx✝ : Sort u_1\narg : x✝\n⊢ SameRay ℝ x y ↔ sorry = 0") - Line 2145
LeanError(message='Lean error:\ninternal exception #5') - Line 2163
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2168
LeanError(message='Lean error:\nsimp made no progress') - Line 2175
LeanError(message='Lean error:\ntype mismatch, term\n  Circle.exp_pi_ne_one\nafter simplification has type\n  Circle.exp Real.pi ≠ 1 : Prop\nbut is expected to have type\n  probChar Real.pi ≠ 1 Real.pi : Prop') - Line 2179
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?f 1\na : Circle\nh : rotation a = Complex.conjLIE\nh1 : ↑a * 1 = sorry\nhI : (rotation a) Complex.I = sorry\n⊢ False") - Line 2196
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.8113 ?m.8114\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2208
LeanError(message='Lean error:\ninternal exception #4') - Line 2209
LeanError(message='Lean error:\n<input>:1:17: expected token') - Line 2210
LeanError(message='Lean error:\napplication type mismatch\n  is_const_of_deriv_eq_zero sorry this\nargument\n  this\nhas type\n  ℂ → sorry = 0 : Prop\nbut is expected to have type\n  ∀ (x : ℂ), deriv f x = 0 : Prop') - Line 2211
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace ℂ F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2212
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2026 is not an inductive datatype') - Line 2215
LeanError(message='Lean error:\n<input>:4:45: unexpected end of input') - Line 2217
LeanError(message='Lean error:\n<input>:4:82: unexpected end of input') - Line 2218
LeanError(message='Lean error:\n<input>:6:83: unexpected end of input') - Line 2219
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2220
LeanError(message='Lean error:\nsimp made no progress') - Line 2231
LeanError(message='Lean error:\nsimp made no progress') - Line 2232
LeanError(message='Lean error:\nsimp made no progress') - Line 2233
LeanError(message='Lean error:\ndsimp made no progress') - Line 2234
LeanError(message='Lean error:\ninternal exception #5') - Line 2235
LeanError(message="Lean error:\ninvalid 'lhs' conv tactic, failed to resolve\n  ?m.8612\n=?=\n  ?m.8627 = limUnder (nhdsWithin 0 {0}ᶜ) sorry") - Line 2239
LeanError(message='Lean error:\ninternal exception #5') - Line 2241
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?n\nf : ℂ → ℂ\nc : ℂ\nr : ℝ\nhf : DifferentiableOn ℂ f (Metric.ball c r)\nh : ∀ (n : ℕ), 0 ≤ iteratedDeriv n f c\nz : ℂ\nhz₁ : c ≤ z\nhz₂ : z ∈ Metric.ball c r\nH : ∑' (n : ℕ), (↑n.factorial)⁻¹ * iteratedDeriv n f c * (z - c) ^ n = f z\n⊢ AddRightMono ℂ") - Line 2248
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 2250
LeanError(message='Lean error:\nno goals to be solved') - Line 2251
LeanError(message='Lean error:\ntype mismatch, term\n  closure_prod_eq\nafter simplification has type\n  closure (s ×ˢ t) = closure s ×ˢ closure t : Prop\nbut is expected to have type\n  closure (s ×ℂ t) = closure s ×ℂ closure t : Prop') - Line 2280
LeanError(message='Lean error:\ninternal exception #5') - Line 2281
LeanError(message='Lean error:\ntype mismatch, term\n  frontier_prod_eq s t\nafter simplification has type\n  frontier (s ×ˢ t) = closure s ×ˢ frontier t ∪ frontier s ×ˢ closure t : Prop\nbut is expected to have type\n  frontier (s ×ℂ t) = closure s ×ℂ frontier t ∪ frontier s ×ℂ closure t : Prop') - Line 2282
LeanError(message="Lean error:\n<input>:1:19: expected ':' or term") - Line 2304
LeanError(message='Lean error:\napplication type mismatch\n  exists_dual_vector ℂ ?m.4174 hc\nargument\n  hc\nhas type\n  sorry ≠ sorry : Prop\nbut is expected to have type\n  ?m.4174 ≠ 0 : Prop') - Line 2305
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 2306
LeanError(message='Lean error:\ninternal exception #5') - Line 2311
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 2313
LeanError(message='Lean error:\nno goals to be solved') - Line 2315
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball ?m.10227 ↑?m.10228\nE : Type u_1\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace ℂ E\ninst✝ : CompleteSpace E\nf : ℂ → E\nc z : ℂ\n⊢ Type ?u.9898") - Line 2316
LeanError(message='Lean error:\nno goals to be solved') - Line 2318
LeanError(message='Lean error:\nno goals to be solved') - Line 2321
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1201 hM') - Line 2322
LeanError(message='Lean error:\nsimp made no progress') - Line 2323
LeanError(message="Lean error:\nTactic 'peel' could not match quantifiers in\n  ?m.2931\nand\n  ∃ M ε, 0 < M ∧ 0 < ε ∧ {z | 1 - ε < z.re} ∩ sorry ⊆ sorry") - Line 2325
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Set ℕ), ∃ M, nhdsWithin 1 x ≤ nhdsWithin 1 x\nx✝¹ : Sort u_1\nstolzCone : x✝¹\nx✝ : Sort u_2\nstolzSet : x✝\ns : ℝ\nhs : 0 < s\n⊢ ∃ M, nhdsWithin 1 sorry ≤ nhdsWithin 1 sorry") - Line 2326
LeanError(message="Lean error:\n<input>:3:46: expected ',' or 'in'") - Line 2327
LeanError(message='Lean error:\nno goals to be solved') - Line 2328
LeanError(message='Lean error:\ntype mismatch\n  Continuous.tendsto (ContinuousLinearMap.continuous Complex.ofRealCLM) l\nhas type\n  Filter.Tendsto (⇑Complex.ofRealCLM) (nhds l) (nhds (Complex.ofRealCLM l)) : Prop\nbut is expected to have type\n  sorry ≤ sorry : Prop') - Line 2331
LeanError(message='Lean error:\nsimp made no progress') - Line 2333
LeanError(message='Lean error:\nsimp made no progress') - Line 2334
LeanError(message='Lean error:\ninternal exception #5') - Line 2336
LeanError(message='Lean error:\nsimp made no progress') - Line 2337
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.2701 : Sort ?u.2700\nbut is expected to have type\n  InnerProductGeometry.angle (sorry ()) 1 = |toIocMod Real.two_pi_pos (-Real.pi) x| : Prop') - Line 2338
LeanError(message='Lean error:\n<input>:3:6: expected end of input') - Line 2339
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 2342
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 2346
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.6598 : Sort ?u.6597\nbut is expected to have type\n  ‖sorry ()‖ ≤ ‖z‖ : Prop') - Line 2348
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℂ →L[ℝ] E') - Line 2362
LeanError(message='Lean error:\ninternal exception #5') - Line 2369
LeanError(message='Lean error:\ninternal exception #5') - Line 2396
LeanError(message='Lean error:\nsimp made no progress') - Line 2397
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun h => ?m.11046, mpr := ?m.11049 }\nhas type\n  ?m.11039 ↔ ?m.11040 : Prop\nbut is expected to have type\n  HasSum f c ↔ HasSum (fun x => ?m.1443) sorry ∧ HasSum (fun x => ?m.2336) sorry : Prop') - Line 2413
LeanError(message='Lean error:\ninternal exception #5') - Line 2440
LeanError(message='Lean error:\ninternal exception #4') - Line 2441
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 2442
LeanError(message='Lean error:\n<input>:2:37: unexpected end of input') - Line 2448
LeanError(message='Lean error:\ntype mismatch\n  (Filter.HasBasis.tendsto_iff (nhdsWithin_hasBasis Metric.nhds_basis_closedBall {c}ᶜ) Metric.nhds_basis_ball).mp hy\n    (ε / (2 * Real.pi)) (div_pos ε0 Real.two_pi_pos)\nhas type\n  ∃ ia, 0 < ia ∧ ∀ x ∈ Metric.closedBall c ia ∩ {c}ᶜ, f x ∈ Metric.ball y (ε / (2 * Real.pi)) : Prop\nbut is expected to have type\n  ∃ δ > 0, ∀ z ∈ Metric.closedBall c δ \\ {c}, sorry < ε / (2 * sorry) : Prop') - Line 2450
LeanError(message='Lean error:\n<input>:1:34: expected end of input') - Line 2452
LeanError(message='Lean error:\ninternal exception #5') - Line 2453
LeanError(message='Lean error:\napplication type mismatch\n  mem_nhds_iff_exists_Ioo_subset.mp (this (Filter.inter_mem ?m.10388 ?m.10670))\nargument\n  this (Filter.inter_mem ?m.10388 ?m.10670)\nhas type\n  ?m.10364 ∩ ?m.10365 ∈ Filter.map g sorry : Prop\nbut is expected to have type\n  ?m.10333 ∈ nhds ?m.10332 : Prop') - Line 2454
LeanError(message='Lean error:\ninternal exception #5') - Line 2455
LeanError(message='Lean error:\nno goals to be solved') - Line 2457
LeanError(message='Lean error:\nno goals to be solved') - Line 2460
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.2608 ?m.2609\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2463
LeanError(message='Lean error:\n<input>:2:43: expected end of input') - Line 2475
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2477
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2480
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.8405\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℂ E\nz : ℂ\nf : ℂ → E\nh : DifferentiableAt ℂ f z\nhf' : deriv f z ≠ 0\n⊢ IsConformalMap (fderiv ℝ f z)") - Line 2481
LeanError(message='Lean error:\ninternal exception #5') - Line 2482
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2483
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (0 : ℝ) ≤ sSup ?s\nwith\n  (0 : ℕ) ≤ sorry\nx✝ : Sort u_2\nsSupNormIm : x✝\nx : ℝ\n⊢ 0 ≤ sorry") - Line 2497
LeanError(message="Lean error:\nunknown identifier 'sSupNormIm_nonneg'") - Line 2498
LeanError(message='Lean error:\nsimp made no progress') - Line 2499
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  DiffContOnCl ?𝕜 ?f ?s\nwith\n  DiffContOnCl ℂ (fun z => ?m.181) sorry\nx✝¹ : Sort u_2\ninvInterpStrip : x✝¹\nx✝ : Sort u_3\nverticalStrip : x✝\nε : ℝ\nhε : ε > 0\n⊢ DiffContOnCl ℂ (fun z => ?m.181) sorry") - Line 2500
LeanError(message="Lean error:\nunknown free variable '_fvar.168'") - Line 2503
LeanError(message="Lean error:\nunknown free variable '_fvar.168'") - Line 2504
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖?m.5677 ?m.5659 • ?m.5678 ?m.5659‖ ≤ ?m.5657\nwith\n  ‖sorry‖ ≤ 1\nE : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℂ E\nx✝² : Sort u_2\nverticalStrip : x✝²\nx✝¹ : Sort u_3\nverticalClosedStrip : x✝¹\nx✝ : Sort u_4\nF : x✝\nf : ℂ → E\nε : ℝ\nhε : 0 < ε\nz : ℂ\nhd : DiffContOnCl ℂ f sorry\nhB : BddAbove (norm ∘ f '' sorry)\nhz : z ∈ sorry\n⊢ ‖sorry‖ ≤ 1") - Line 2505
LeanError(message='Lean error:\nsimp made no progress') - Line 2506
LeanError(message='Lean error:\ntype mismatch\n  if h : sorry = 0 ∨ sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.8568 : Sort ?u.8567\nbut is expected to have type\n  sorry = sorry ^ (1 - z) * sorry ^ z : Prop') - Line 2508
LeanError(message='Lean error:\ntype mismatch\n  if h : sorry = 0 ∨ sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.4532 : Sort ?u.4531\nbut is expected to have type\n  DiffContOnCl ℂ sorry sorry : Prop') - Line 2509
LeanError(message='Lean error:\nsimp made no progress') - Line 2510
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x, ∀ y ∈ norm ∘ f '' sorry, y ≤ x) → BddAbove (norm ∘ sorry '' sorry)\nE : Type u_2\ninst✝ : NormedAddCommGroup E\nx✝¹ : Sort u_3\nverticalClosedStrip : x✝¹\nx✝ : Sort u_4\nscale : x✝\nf : ℂ → E\nl u : ℝ\nhul : l < u\nhB : BddAbove (norm ∘ f '' sorry)\n⊢ BddAbove (norm ∘ sorry '' sorry)") - Line 2511
LeanError(message="Lean error:\nunknown free variable '_fvar.470'") - Line 2512
LeanError(message="Lean error:\nunknown free variable '_fvar.470'") - Line 2513
LeanError(message="Lean error:\nunknown free variable '_fvar.470'") - Line 2514
LeanError(message="Lean error:\nunknown free variable '_fvar.470'") - Line 2515
LeanError(message="Lean error:\nunknown free variable '_fvar.470'") - Line 2516
LeanError(message='Lean error:\nsimp made no progress') - Line 2517
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.5882 ≤ ?m.5883\nwith\n  ‖f z‖ ≤ ‖sorry‖\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\nf : ℂ → E\ninst✝ : NormedSpace ℂ E\nx✝² : Sort u_3\nverticalStrip : x✝²\nx✝¹ : Sort u_4\nverticalClosedStrip : x✝¹\nx✝ : Sort u_5\ninterpStrip : x✝\nz : ℂ\nhd : DiffContOnCl ℂ f sorry\nhB : BddAbove (norm ∘ f '' sorry)\nhz : z ∈ sorry\n⊢ ‖f z‖ ≤ ‖sorry‖") - Line 2519
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖?m.5990 ?x‖ ≤ ‖?m.8231 ?x‖\nwith\n  ‖f z‖ ≤ ‖sorry‖\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℂ E\nx✝² : Sort u_3\nverticalClosedStrip : x✝²\nx✝¹ : Sort u_4\nverticalStrip : x✝¹\nx✝ : Sort u_5\ninterpStrip : x✝\nf : ℂ → E\nz : ℂ\nhz : z ∈ sorry\nhd : DiffContOnCl ℂ f sorry\nhB : BddAbove (norm ∘ f '' sorry)\n⊢ ‖f z‖ ≤ ‖sorry‖") - Line 2520
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2521
LeanError(message='Lean error:\nsimp made no progress') - Line 2522
LeanError(message='Lean error:\nsimp made no progress') - Line 2523
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'scale' has no definition") - Line 2524
LeanError(message='Lean error:\ninternal exception #5') - Line 2527
LeanError(message='Lean error:\ninternal exception #5') - Line 2528
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2539
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'HasSum'.") - Line 2540
LeanError(message='Lean error:\ninternal exception #5') - Line 2542
LeanError(message='Lean error:\n<input>:1:34: expected end of input') - Line 2543
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 2544
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2547
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry ≤ C\nis not definitionally equal to target\n  ‖f (z * Complex.I)‖ ≤ C") - Line 2552
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry ≤ C\nis not definitionally equal to target\n  ‖f (-z)‖ ≤ C") - Line 2555
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry ≤ C\nis not definitionally equal to target\n  ‖f (-z)‖ ≤ C") - Line 2558
LeanError(message='Lean error:\n<input>:3:87: unexpected end of input') - Line 2561
LeanError(message="Lean error:\n<input>:1:23: expected ':' or term") - Line 2562
LeanError(message='Lean error:\ninternal exception #5') - Line 2563
LeanError(message='Lean error:\ninternal exception #5') - Line 2564
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.3223 ?m.3224\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2565
LeanError(message="Lean error:\n<input>:5:27: expected ':' or term") - Line 2568
LeanError(message='Lean error:\ninternal exception #5') - Line 2571
LeanError(message='Lean error:\ninternal exception #5') - Line 2573
LeanError(message='Lean error:\nno goals to be solved') - Line 2578
LeanError(message='Lean error:\n<input>:1:94: unterminated comment') - Line 2579
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2581
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2582
LeanError(message='Lean error:\ninternal exception #5') - Line 2583
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2586
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Monoid ?m.3531') - Line 2592
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖Function.Periodic.qParam ?h ?z‖\nx✝ : Sort u_1\n𝕢 : x✝\nn : ℕ\ninst✝ : NeZero n\nτ : UpperHalfPlane\n⊢ ‖sorry‖ < 1") - Line 2617
LeanError(message='Lean error:\nsimp made no progress') - Line 2625
LeanError(message='Lean error:\ntype mismatch, term\n  Filter.tendsto_comap\nafter simplification has type\n  Filter.Tendsto ?m.322 (Filter.comap ?m.322 ?m.323) ?m.323 : Prop\nbut is expected to have type\n  Filter.Tendsto UpperHalfPlane.im atImInfty Filter.atTop : Prop') - Line 2626
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 2642
LeanError(message='Lean error:\nsimp made no progress') - Line 2647
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2648
LeanError(message='Lean error:\nsimp made no progress') - Line 2651
LeanError(message='Lean error:\nsimp made no progress') - Line 2652
LeanError(message='Lean error:\nsimp made no progress') - Line 2653
LeanError(message='Lean error:\nsimp made no progress') - Line 2660
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 2668
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2671
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2672
LeanError(message='Lean error:\nsimp made no progress') - Line 2674
LeanError(message='Lean error:\nsimp made no progress') - Line 2675
LeanError(message='Lean error:\nsimp made no progress') - Line 2678
LeanError(message="Lean error:\n<input>:1:51: expected ')'") - Line 2679
LeanError(message='Lean error:\nsimp made no progress') - Line 2681
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?x ?y\nz w : UpperHalfPlane\n⊢ Real.sinh (dist z w / 2) = dist ↑z ↑w / (2 * √(z.im * w.im))") - Line 2689
LeanError(message='Lean error:\ninternal exception #5') - Line 2690
LeanError(message='Lean error:\ninternal exception #5') - Line 2691
LeanError(message='Lean error:\ninternal exception #5') - Line 2692
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?x ?y\nz w : UpperHalfPlane\n⊢ Real.cosh (dist z w) = 1 + dist ↑z ↑w ^ 2 / (2 * z.im * w.im)") - Line 2693
LeanError(message='Lean error:\nsimp made no progress') - Line 2694
LeanError(message='Lean error:\ninternal exception #5') - Line 2696
LeanError(message='Lean error:\ninternal exception #5') - Line 2697
LeanError(message='Lean error:\ninternal exception #5') - Line 2698
LeanError(message='Lean error:\ninternal exception #5') - Line 2700
LeanError(message='Lean error:\nsimp made no progress') - Line 2705
LeanError(message='Lean error:\ninternal exception #5') - Line 2706
LeanError(message='Lean error:\ninternal exception #5') - Line 2707
LeanError(message='Lean error:\nsimp made no progress') - Line 2715
LeanError(message='Lean error:\ninternal exception #5') - Line 2718
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 2719
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2721
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2722
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2723
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  PseudoMetricSpace ?m.1414') - Line 2724
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 2726
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\nverticalStrip : x✝\nA B A' B' : ℝ\nhA : A ≤ A'\nhB : B' ≤ B\n⊢ sorry ⊆ sorry") - Line 2733
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ℍ → Prop is not an inductive datatype') - Line 2736
LeanError(message='Lean error:\ninternal exception #5') - Line 2737
LeanError(message='Lean error:\nsimp made no progress') - Line 2746
LeanError(message='Lean error:\ninternal exception #5') - Line 2751
LeanError(message="Lean error:\nunknown free variable '_fvar.14'") - Line 2752
LeanError(message="Lean error:\n<input>:1:26: unexpected end of input; expected '['") - Line 2755
LeanError(message='Lean error:\ninternal exception #5') - Line 2756
LeanError(message='Lean error:\ninternal exception #5') - Line 2758
LeanError(message='Lean error:\nno goals to be solved') - Line 2762
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.12306\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁴ : Ring R\ninst✝³ : PartialOrder R\ninst✝² : AddCommGroup V\ninst✝¹ : Module R V\ninst✝ : AddTorsor V P\nx y z : P\nv : V\n⊢ v +ᵥ z ∈ (fun x => v +ᵥ x) '' affineSegment R x y ↔ z ∈ affineSegment R x y") - Line 2768
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.12947\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁴ : Ring R\ninst✝³ : PartialOrder R\ninst✝² : AddCommGroup V\ninst✝¹ : Module R V\ninst✝ : AddTorsor V P\nx y z : V\np : P\n⊢ z +ᵥ p ∈ (fun x => x +ᵥ p) '' affineSegment R x y ↔ z ∈ affineSegment R x y") - Line 2769
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.11873\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁴ : Ring R\ninst✝³ : PartialOrder R\ninst✝² : AddCommGroup V\ninst✝¹ : Module R V\ninst✝ : AddTorsor V P\nx y z p : P\n⊢ p -ᵥ z ∈ (fun x => p -ᵥ x) '' affineSegment R x y ↔ z ∈ affineSegment R x y") - Line 2770
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.11873\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁴ : Ring R\ninst✝³ : PartialOrder R\ninst✝² : AddCommGroup V\ninst✝¹ : Module R V\ninst✝ : AddTorsor V P\nx y z p : P\n⊢ z -ᵥ p ∈ (fun x => x -ᵥ p) '' affineSegment R x y ↔ z ∈ affineSegment R x y") - Line 2771
LeanError(message='Lean error:\nfailed to synthesize\n  AddRightMono R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2772
LeanError(message='Lean error:\nsimp made no progress') - Line 2776
LeanError(message='Lean error:\nfailed to synthesize\n  IsOrderedRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2777
LeanError(message='Lean error:\nfailed to synthesize\n  IsOrderedRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2779
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 2781
LeanError(message='Lean error:\nsimp made no progress') - Line 2784
LeanError(message='Lean error:\ninternal exception #5') - Line 2785
LeanError(message='Lean error:\ninternal exception #5') - Line 2786
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.21391\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁶ : Ring R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : AddCommGroup V\ninst✝³ : Module R V\ninst✝² : AddTorsor V P\ninst✝¹ inst✝ : IsOrderedRing R\nx y z : P\nv : V\n⊢ Wbtw R x y z ∧ v +ᵥ y ≠ v +ᵥ x ∧ v +ᵥ y ≠ v +ᵥ z ↔ Wbtw R x y z ∧ y ≠ x ∧ y ≠ z") - Line 2791
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.22070\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁶ : Ring R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : AddCommGroup V\ninst✝³ : Module R V\ninst✝² : AddTorsor V P\ninst✝¹ inst✝ : IsOrderedRing R\nx y z : V\np : P\n⊢ Wbtw R x y z ∧ y +ᵥ p ≠ x +ᵥ p ∧ y +ᵥ p ≠ z +ᵥ p ↔ Wbtw R x y z ∧ y ≠ x ∧ y ≠ z") - Line 2792
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.20981\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁶ : Ring R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : AddCommGroup V\ninst✝³ : Module R V\ninst✝² : AddTorsor V P\ninst✝¹ inst✝ : IsOrderedRing R\nx y z p : P\n⊢ Wbtw R x y z ∧ p -ᵥ y ≠ p -ᵥ x ∧ p -ᵥ y ≠ p -ᵥ z ↔ Wbtw R x y z ∧ y ≠ x ∧ y ≠ z") - Line 2793
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.20981\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁶ : Ring R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : AddCommGroup V\ninst✝³ : Module R V\ninst✝² : AddTorsor V P\ninst✝¹ inst✝ : IsOrderedRing R\nx y z p : P\n⊢ Wbtw R x y z ∧ y -ᵥ p ≠ x -ᵥ p ∧ y -ᵥ p ≠ z -ᵥ p ↔ Wbtw R x y z ∧ y ≠ x ∧ y ≠ z") - Line 2794
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.23713 is not an inductive datatype') - Line 2800
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2804
LeanError(message='Lean error:\nfailed to synthesize\n  IsOrderedRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2807
LeanError(message='Lean error:\nfailed to synthesize\n  IsOrderedRing R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2808
LeanError(message='Lean error:\nfailed to synthesize\n  AddTorsor V P\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2810
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2812
LeanError(message='Lean error:\ninternal exception #5') - Line 2813
LeanError(message='Lean error:\nfailed to synthesize\n  NoZeroSMulDivisors R V\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2814
LeanError(message='Lean error:\ninternal exception #5') - Line 2815
LeanError(message='Lean error:\ninternal exception #5') - Line 2816
LeanError(message='Lean error:\ninternal exception #5') - Line 2817
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2821
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.44064\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝⁹ : Ring R\ninst✝⁸ : PartialOrder R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : AddTorsor V P\ninst✝⁴ inst✝³ inst✝² inst✝¹ : IsOrderedRing R\ninst✝ : NoZeroSMulDivisors R V\nx y : P\nr : R\nhxy : x ≠ y\n⊢ (AffineMap.lineMap x y) r ∈ ⇑(AffineMap.lineMap x y) '' Set.Ioo 0 1 ↔ r ∈ Set.Ioo 0 1") - Line 2822
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, mul_le_one₀ ?m.37848 ?m.38614 ?m.39216⟩\nargument\n  mul_le_one₀ ?m.37848 ?m.38614 ?m.39216\nhas type\n  ?m.36993 * ?m.36994 ≤ 1 : Prop\nbut is expected to have type\n  sorry ≤ 1 : Prop') - Line 2829
LeanError(message='Lean error:\ninternal exception #5') - Line 2839
LeanError(message='Lean error:\nsimp made no progress') - Line 2840
LeanError(message='Lean error:\napplication type mismatch\n  SameRay.sameRay_nonneg_smul_left sorry ht0\nargument\n  ht0\nhas type\n  @OfNat.ofNat R 0\n      (@Zero.toOfNat0 R\n        (@MulZeroClass.toZero R\n          (@NonUnitalNonAssocSemiring.toMulZeroClass R NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring))) ≤\n    t : Prop\nbut is expected to have type\n  @OfNat.ofNat ?m.33818 0\n      (@Zero.toOfNat0 ?m.33818\n        (@MulZeroClass.toZero ?m.33818\n          (@NonUnitalNonAssocSemiring.toMulZeroClass ?m.33818 NonAssocSemiring.toNonUnitalNonAssocSemiring))) ≤\n    ?m.33825 : Prop') - Line 2841
LeanError(message='Lean error:\napplication type mismatch\n  SameRay.sameRay_nonneg_smul_right sorry (sub_nonneg.mpr ht1)\nargument\n  sub_nonneg.mpr ht1\nhas type\n  @OfNat.ofNat R 0 (@Zero.toOfNat0 R NegZeroClass.toZero) ≤ 1 - t : Prop\nbut is expected to have type\n  @OfNat.ofNat ?m.33881 0 (@Zero.toOfNat0 ?m.33881 MulZeroClass.toZero) ≤ ?m.33888 : Prop') - Line 2842
LeanError(message='Lean error:\ninternal exception #5') - Line 2843
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.39496\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nR : Type u_1\ninst✝¹⁴ : Ring R\ninst✝¹³ : PartialOrder R\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nx y z : R\nhxz : x ≤ z\nx✝ : ?m.39496\n⊢ Wbtw R x y z ↔ x ≤ y ∧ y ≤ z") - Line 2844
LeanError(message="Lean error:\ntype mismatch\n  { mp := fun h => ?m.46450, mpr := fun h => ?m.46456 }\nhas type\n  ?m.46443 ↔ ?m.46444 : Prop\nbut is expected to have type\n  sorry ↔ x = y ∨ z ∈ ⇑(AffineMap.lineMap x y) '' Set.Ici 1 : Prop") - Line 2847
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.40372 → z ∈ sorry\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝¹⁷ : Ring R\ninst✝¹⁶ : PartialOrder R\ninst✝¹⁵ : AddCommGroup V\ninst✝¹⁴ : Module R V\ninst✝¹³ : AddTorsor V P\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nx y z : P\nh : sorry\nhne : x ≠ y\n⊢ z ∈ sorry") - Line 2849
LeanError(message="Lean error:\ntype mismatch\n  { mp := fun h => ?m.46450, mpr := fun h => ?m.46456 }\nhas type\n  ?m.46443 ↔ ?m.46444 : Prop\nbut is expected to have type\n  sorry ↔ x ≠ y ∧ z ∈ ⇑(AffineMap.lineMap x y) '' Set.Ioi 1 : Prop") - Line 2850
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Wbtw ?m.46445 ?m.46454 ?m.46455 ?m.46456\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝¹⁷ : Ring R\ninst✝¹⁶ : PartialOrder R\ninst✝¹⁵ : AddCommGroup V\ninst✝¹⁴ : Module R V\ninst✝¹³ : AddTorsor V P\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nx y z : P\n⊢ sorry ↔ z = y ∨ x ∈ ⇑(AffineMap.lineMap z y) '' Set.Ici 1") - Line 2853
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Sbtw ?m.46445 ?m.46454 ?m.46455 ?m.46456\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝¹⁷ : Ring R\ninst✝¹⁶ : PartialOrder R\ninst✝¹⁵ : AddCommGroup V\ninst✝¹⁴ : Module R V\ninst✝¹³ : AddTorsor V P\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nx y z : P\n⊢ sorry ↔ z ≠ y ∧ x ∈ ⇑(AffineMap.lineMap z y) '' Set.Ioi 1") - Line 2856
LeanError(message="Lean error:\ntactic 'subst' failed, 'y' occurs at\n  (AffineMap.lineMap x z) ε\ncase intro.intro\nR : Type u_1\ninst✝¹⁴ : Ring R\ninst✝¹³ : PartialOrder R\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nP✝ : Type u_6\nx y z : P✝\ns : sorry\nhx : sorry\nhy : sorry\nhxy : x ≠ y\nε : R\nleft✝ : ε ∈ Set.Icc 0 1\nright✝ : (AffineMap.lineMap x z) ε = y\n⊢ sorry") - Line 2859
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 2860
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 2861
LeanError(message='Lean error:\napplication type mismatch\n  neg_le_neg_iff.mpr hr₂\nargument\n  hr₂\nhas type\n  @LE.le R (@Preorder.toLE R (@PartialOrder.toPreorder R inst✝⁷)) r₂ r₁ : Prop\nbut is expected to have type\n  @LE.le ?m.44371 (@Preorder.toLE ?m.44371 (@PartialOrder.toPreorder ?m.44371 SemilatticeInf.toPartialOrder)) ?m.44632\n    ?m.44631 : Prop') - Line 2862
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 2863
LeanError(message='Lean error:\napplication type mismatch\n  (le_add_iff_nonneg_left r₁).mpr hr₂\nargument\n  hr₂\nhas type\n  @OfNat.ofNat R 0 (@Zero.toOfNat0 R MulZeroClass.toZero) ≤ r₂ : Prop\nbut is expected to have type\n  @OfNat.ofNat R 0 (@Zero.toOfNat0 R AddZeroClass.toZero) ≤ ?m.51693 : Prop') - Line 2864
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Wbtw ?m.41480 ?m.41489 ?m.41490 ?m.41491\nR : Type u_1\nV : Type u_2\nP : Type u_4\ninst✝¹⁷ : Ring R\ninst✝¹⁶ : PartialOrder R\ninst✝¹⁵ : AddCommGroup V\ninst✝¹⁴ : Module R V\ninst✝¹³ : AddTorsor V P\ninst✝¹² inst✝¹¹ inst✝¹⁰ inst✝⁹ : IsOrderedRing R\ninst✝⁸ : CommRing R\ninst✝⁷ : PartialOrder R\ninst✝⁶ : IsStrictOrderedRing R\ninst✝⁵ : Ring R\ninst✝⁴ : LinearOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\nx : P\nv : V\nr₁ r₂ : R\nhr₁ : 0 ≤ r₁\nhr₂ : r₂ ≤ 0\n⊢ sorry") - Line 2865
LeanError(message='Lean error:\nrcases tactic failed: h₁ : sorry is not an inductive datatype') - Line 2866
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the current goal\nP : Type u_4\nw x y z : P\nh₁ : sorry\nh₂ : sorry\n⊢ sorry") - Line 2867
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Collinear ?m.39825 ?s\nP : Type u_4\nx y z : P\nh : sorry\n⊢ sorry") - Line 2870
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Collinear ?m.41549 (insert ?m.41560 ?m.41561)\nP : Type u_4\nx y z : P\nh : sorry\n⊢ sorry ∨ sorry ∨ sorry") - Line 2871
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddTorsor ?m.39395 ?m.39396') - Line 2872
LeanError(message='Lean error:\ninternal exception #5') - Line 2873
LeanError(message='Lean error:\nno goals to be solved') - Line 2874
LeanError(message='Lean error:\nno goals to be solved') - Line 2875
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (AffineEquiv.pointReflection ?m.54839 (midpoint ?m.54839 ?x ?y)) ?x\ncase a\nP : Type u_4\nx y : P\nh✝ : x ≠ y\nh : sorry ≠ x\n⊢ sorry ↔ Sbtw sorry x sorry ((AffineEquiv.pointReflection sorry sorry) x)") - Line 2877
LeanError(message='Lean error:\nsimp made no progress') - Line 2879
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2884
LeanError(message='Lean error:\ninternal exception #5') - Line 2885
LeanError(message='Lean error:\ninternal exception #5') - Line 2887
LeanError(message='Lean error:\ninternal exception #5') - Line 2888
LeanError(message='Lean error:\ninternal exception #5') - Line 2889
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2890
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2892
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2894
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 2895
LeanError(message='Lean error:\ninternal exception #5') - Line 2896
LeanError(message='Lean error:\n<input>:1:13: expected term') - Line 2897
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.15524 is not an inductive datatype') - Line 2898
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.3798 ?m.3799') - Line 2899
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2900
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nE : Type u_1\nβ : Type u_2\ninst✝³ : AddCommGroup E\ninst✝² : TopologicalSpace E\ninst✝¹ : Module ℝ E\ninst✝ : IsTopologicalAddGroup E\ns : Set E\nf : E → β\na : E\na_in_s : a ∈ s\nh_localmin : sorry\nh_conv : sorry\n⊢ sorry") - Line 2924
LeanError(message='Lean error:\nsimp made no progress') - Line 2929
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  gauge ?m.5774 ((gauge ?m.7839 ?m.7840 / gauge ?m.10162 ?m.10163) • ?x)\nE : Type u_1\ninst✝¹ : AddCommGroup E\ninst✝ : Module ℝ E\ns t : Set E\nx : E\nhx : gauge t x ≠ 0\n⊢ gauge t ((gauge s x / gauge t x) • x) = gauge s x") - Line 2930
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 2932
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 2935
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2938
LeanError(message='Lean error:\napplication type mismatch\n  Set.image e\nargument\n  e\nhas type\n  sorry : Type u_1\nbut is expected to have type\n  E → ?m.19983 e : Type (max ?u.16206 u_1)') - Line 2941
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'intrinsicClosure'.") - Line 2969
LeanError(message='Lean error:\nno goals to be solved') - Line 2970
LeanError(message='Lean error:\ninternal exception #5') - Line 2977
LeanError(message='Lean error:\nsimp made no progress') - Line 2991
LeanError(message='Lean error:\nsimp made no progress') - Line 2993
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4975 is not an inductive datatype') - Line 2999
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3000
LeanError(message='Lean error:\nsimp made no progress') - Line 3002
LeanError(message='Lean error:\nsimp made no progress') - Line 3003
LeanError(message='Lean error:\nsimp made no progress') - Line 3008
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (convexHull ?m.3095) {?a, ?b, ?c, ?d}\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁷ : Semiring 𝕜\ninst✝⁶ : PartialOrder 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : IsOrderedRing 𝕜\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\na b c : E\n⊢ convexJoin 𝕜 (segment 𝕜 a b) {c, c} = (convexHull 𝕜) {a, b, c, c}") - Line 3009
LeanError(message='Lean error:\ninternal exception #5') - Line 3010
LeanError(message='Lean error:\n<input>:2:45: unexpected end of input') - Line 3011
LeanError(message='Lean error:\ntype mismatch\n  ⟨sorry.left, fun x hx y hy a b ha hb hab => ?m.53281⟩\nhas type\n  ?m.53228 ∧\n    ∀ (x : ?m.53253) (hx : ?m.53282 x) (y : ?m.53283 x hx) (hy : ?m.53284 x hx y) (a : ?m.53285 x hx y hy)\n      (b : ?m.53286 x hx y hy a) (ha : ?m.53287 x hx y hy a b) (hb : ?m.53288 x hx y hy a b ha)\n      (hab : ?m.53289 x hx y hy a b ha hb), ?m.53290 x hx y hy a b ha hb hab : Prop\nbut is expected to have type\n  ConvexOn 𝕜 s (f • g) : Prop') - Line 3013
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?r • ?x\n𝕜 : Type u_1\ninst✝² : CommRing 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\nα✝ : Type u_4\ns : Set α✝\nf g : α✝ → ℕ\nhf : ConcaveOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\nhf₀ : ∀ ⦃x : α✝⦄, x ∈ s → f x ≤ 0\nhg₀ : ∀ ⦃x : α✝⦄, x ∈ s → g x ≤ 0\nhfg : MonovaryOn f g s\n⊢ ConvexOn 𝕜 s (f • g)") - Line 3016
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ConcaveOn ?m.53220 ?m.53231 ?m.53232\n𝕜 : Type u_1\ninst✝² : CommRing 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\nα✝ : Type u_4\ns : Set α✝\nf g : α✝ → ℕ\nhf : ConvexOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\nhf₀ : ∀ ⦃x : α✝⦄, x ∈ s → 0 ≤ f x\nhg₀ : ∀ ⦃x : α✝⦄, x ∈ s → g x ≤ 0\nhfg : AntivaryOn f g s\n⊢ ConcaveOn 𝕜 s (f • g)") - Line 3017
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ConcaveOn ?m.53220 ?m.53231 ?m.53232\n𝕜 : Type u_1\ninst✝² : CommRing 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\nα✝ : Type u_4\ns : Set α✝\nf g : α✝ → ℕ\nhf : ConcaveOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\nhf₀ : ∀ ⦃x : α✝⦄, x ∈ s → f x ≤ 0\nhg₀ : ∀ ⦃x : α✝⦄, x ∈ s → 0 ≤ g x\nhfg : AntivaryOn f g s\n⊢ ConcaveOn 𝕜 s (f • g)") - Line 3020
LeanError(message='Lean error:\nno goals to be solved') - Line 3031
LeanError(message='Lean error:\n<input>:2:8: expected end of input') - Line 3032
LeanError(message="Lean error:\ntactic 'clear' failed, target depends on 'H'\nX : Type u_2\nE : Type u_3\ninst✝⁶ : TopologicalSpace X\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module ℝ E\ninst✝³ : NormalSpace X\ninst✝² : ParacompactSpace X\ninst✝¹ : TopologicalSpace E\ninst✝ : ContinuousAdd E\nx✝ : Sort u_4\nt : x✝\nht : ∀ (x : ?m.13390), Convex ℝ ?m.2915\nH : ∀ (x : X), ∃ U ∈ nhds x, ∃ g, ContinuousOn g U ∧ ∀ y ∈ U, g y ∈ ?m.4639\nU : X → Set X\n⊢ (∀ (x : X), U x ∈ nhds x ∧ ∃ g, ContinuousOn g (U x) ∧ ∀ y ∈ U x, g y ∈ ?m.13380 ht x (U x) g y) →\n    ∃ g, ∀ (x : X), g x ∈ ?m.4938") - Line 3034
LeanError(message='Lean error:\nsimp made no progress') - Line 3043
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  QuasiconvexOn ?m.2971 ?m.2979 ?m.2980\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_3\ninst✝⁷ : Semiring 𝕜\ninst✝⁶ : PartialOrder 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : LE β\ninst✝³ inst✝² : SMul 𝕜 E\ninst✝¹ : LinearOrder β\ninst✝ : SMul 𝕜 E\ns : Set E\nf : E → β\n⊢ QuasiconvexOn 𝕜 s f ∧ QuasiconcaveOn 𝕜 s f ↔\n    Convex 𝕜 s ∧\n      ∀ ⦃x : E⦄,\n        x ∈ s → ∀ ⦃y : E⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 ≤ a → 0 ≤ b → a + b = 1 → f (a • x + b • y) ∈ Set.uIcc (f x) (f y)") - Line 3047
LeanError(message='Lean error:\napplication type mismatch\n  ⟨hy.left, le_max_right ?m.1717 ?m.1718⟩\nargument\n  le_max_right ?m.1717 ?m.1718\nhas type\n  @LE.le ?m.1715 Preorder.toLE ?m.1718 (max ?m.1717 ?m.1718) : Prop\nbut is expected to have type\n  @LE.le β inst✝⁴ (f y) ?m.694 : Prop') - Line 3048
LeanError(message='Lean error:\nsimp made no progress') - Line 3064
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\n𝕜 : Type u_1\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\ns : Set 𝕜\nf : 𝕜 → 𝕜\nhf : ConvexOn 𝕜 s f\nx y z : 𝕜\nhx : x ∈ s\nhz : z ∈ s\nhxy✝ : x < y\nhxy : 0 < y - x\nhyz✝ : y < z\nhyz : 0 < z - y\nhxz✝ : x < z\nhxz : 0 < z - x\na : 𝕜 := sorry\nb : 𝕜 := sorry\nhy : sorry\nkey : f (a • x + b • z) ≤ a • f x + b • f z\n⊢ sorry") - Line 3066
LeanError(message='Lean error:\nsimp made no progress') - Line 3067
LeanError(message="Lean error:\napplication type mismatch\n  hf.right hx hz hxz' ?m.22584 (div_pos sorry sorry)\nargument\n  div_pos sorry sorry\nhas type\n  @OfNat.ofNat ?m.22586 0 (@Zero.toOfNat0 ?m.22586 (@MulZeroClass.toZero ?m.22586 MulZeroOneClass.toMulZeroClass)) <\n    ?m.22590 / ?m.22591 : Prop\nbut is expected to have type\n  @OfNat.ofNat 𝕜 0 (@Zero.toOfNat0 𝕜 (@MulZeroClass.toZero 𝕜 NonUnitalNonAssocSemiring.toMulZeroClass)) < b : Prop") - Line 3068
LeanError(message='Lean error:\nsimp made no progress') - Line 3069
LeanError(message='Lean error:\ninternal exception #5') - Line 3070
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.14364 ≤ ?m.14363\n𝕜 : Type u_1\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\ns : Set 𝕜\nf : 𝕜 → 𝕜\nhs : Convex 𝕜 s\nhf : ∀ {x y z : 𝕜}, x ∈ s → z ∈ s → x < y → y < z → (f z - f y) / (z - y) ≤ (f y - f x) / (y - x)\n⊢ IsOrderedAddMonoid 𝕜") - Line 3071
LeanError(message='Lean error:\ninternal exception #5') - Line 3072
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.14172 < ?m.14171\n𝕜 : Type u_1\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\ns : Set 𝕜\nf : 𝕜 → 𝕜\nhs : Convex 𝕜 s\nhf : ∀ {x y z : 𝕜}, x ∈ s → z ∈ s → x < y → y < z → (f z - f y) / (z - y) < (f y - f x) / (y - x)\n⊢ IsOrderedAddMonoid 𝕜") - Line 3073
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3078
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3079
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3080
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3391 is not an inductive datatype') - Line 3081
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3082
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3083
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3084
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2931 is not an inductive datatype') - Line 3085
LeanError(message='Lean error:\ninternal exception #5') - Line 3086
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3291 is not an inductive datatype') - Line 3087
LeanError(message='Lean error:\nrcases tactic failed: hz : sorry z is not an inductive datatype') - Line 3088
LeanError(message='Lean error:\nno goals to be solved') - Line 3089
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3394 ≠ 0\nE : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nφ : ℝ → ℝ\ns : Set E\nf : E → ℝ\nhf : UniformConvexOn s φ f\nhφ : ∀ (r : ℝ), r ≠ 0 → 0 < φ r\nx : E\nhx : x ∈ s\ny : E\nhy : y ∈ s\nhxy✝ : x ≠ y\nhxy : x - y ≠ 0\na b : ℝ\nha : 0 < a\nhb : 0 < b\nhab : a + b = 1\n⊢ 0 < a * b * φ ‖x - y‖") - Line 3094
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3382 ≠ 0\nE : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nφ : ℝ → ℝ\ns : Set E\nf : E → ℝ\nhf : UniformConcaveOn s φ f\nhφ : ∀ (r : ℝ), r ≠ 0 → 0 < φ r\nx : E\nhx : x ∈ s\ny : E\nhy : y ∈ s\nhxy✝ : x ≠ y\nhxy : x - y ≠ 0\na b : ℝ\nha : 0 < a\nhb : 0 < b\nhab : a + b = 1\n⊢ 0 < a * b * φ ‖x - y‖") - Line 3095
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x + ?y‖ ^ 2\nE : Type u_1\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace ℝ E\ninst✝ : InnerProductSpace ℝ E\na b m : ℝ\nx y : E\nf : E → ℝ\nha : 0 ≤ a\nhb : 0 ≤ b\nhab : a + b = 1\n⊢ a * (f x - m / 2 * ‖x‖ ^ 2) + b * (f y - m / 2 * ‖y‖ ^ 2) + m / 2 * ‖a • x + b • y‖ ^ 2 =\n    a * f x + b * f y - m / 2 * a * b * ‖x - y‖ ^ 2") - Line 3102
LeanError(message='Lean error:\nsimp made no progress') - Line 3104
LeanError(message='Lean error:\nsimp made no progress') - Line 3105
LeanError(message='Lean error:\napplication type mismatch\n  exists_nhds_zero_half hU\nargument\n  hU\nhas type\n  U ∈ nhds (@OfNat.ofNat E 0 (@Zero.toOfNat0 E NegZeroClass.toZero)) : Prop\nbut is expected to have type\n  ?m.10246 ∈ nhds (@OfNat.ofNat ?m.10242 0 (@Zero.toOfNat0 ?m.10242 AddZeroClass.toZero)) : Prop') - Line 3106
LeanError(message='Lean error:\napplication type mismatch\n  Iff.intro fun h x hx y hy x_1 => h hx hy\nargument\n  fun h x hx y hy x_1 => h hx hy\nhas type\n  ∀\n    (h :\n      ∀ ⦃x : ?m.2418⦄,\n        x ∈ ?m.3640 →\n          ∀ ⦃y : ?m.2418⦄, y ∈ ?m.3640 → ∀ ⦃a b : ?m.2417⦄, 0 < a → 0 < b → a + b = 1 → a • x + b • y ∈ ?m.3640)\n    (x : ?m.5203 h) (hx : ?m.5204 h x ∈ ?m.3640) (y : ?m.5205 h x hx) (hy : ?m.5206 h x hx y ∈ ?m.3640),\n    ?m.5207 h x hx y hy →\n      ∀ ⦃a b : ?m.2417⦄, 0 < a → 0 < b → a + b = 1 → a • ?m.5204 h x + b • ?m.5206 h x hx y ∈ ?m.3640 : Prop\nbut is expected to have type\n  (∀ ⦃x : ?m.2418⦄,\n      x ∈ ?m.3640 →\n        ∀ ⦃y : ?m.2418⦄, y ∈ ?m.3640 → ∀ ⦃a b : ?m.2417⦄, 0 < a → 0 < b → a + b = 1 → a • x + b • y ∈ ?m.3640) →\n    ?m.5148 : Prop') - Line 3124
LeanError(message='Lean error:\napplication type mismatch\n  And.intro (add_nonneg sorry sorry)\nargument\n  add_nonneg sorry sorry\nhas type\n  @OfNat.ofNat ?m.13813 0 (@Zero.toOfNat0 ?m.13813 AddZeroClass.toZero) ≤ ?m.13817 + ?m.13818 : Prop\nbut is expected to have type\n  @OfNat.ofNat 𝕜 0 (@Zero.toOfNat0 𝕜 MulZeroClass.toZero) ≤ sorry : Prop') - Line 3128
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.3258 ?m.3259') - Line 3139
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a • (?b₁ + ?b₂)\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : Semiring 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : AddCommMonoid E\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz x : E\nhx : x ∈ (fun x => z + x) ⁻¹' s\ny : E\nhy : y ∈ (fun x => z + x) ⁻¹' s\na b : 𝕜\nha : 0 ≤ a\nhb : 0 ≤ b\nhab : a + b = 1\nh : a • (fun x => z + x) x + b • (fun x => z + x) y ∈ s\n⊢ a • x + b • y ∈ (fun x => z + x) ⁻¹' s") - Line 3141
LeanError(message='Lean error:\napplication type mismatch\n  Convex.translate_preimage_right hs\nargument\n  hs\nhas type\n  @Convex 𝕜 E inst✝⁴ inst✝³ inst✝² inst✝¹ s : Prop\nbut is expected to have type\n  @Convex ?m.2344 E ?m.2346 ?m.2347 ?m.2348 SMulZeroClass.toSMul ?m.2350 : Prop') - Line 3142
LeanError(message='Lean error:\nsimp made no progress') - Line 3148
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3391 is not an inductive datatype') - Line 3149
LeanError(message='Lean error:\napplication type mismatch\n  Convex.smul hs\nargument\n  hs\nhas type\n  @Convex 𝕜 E inst✝¹¹ inst✝² inst✝¹ inst✝⁸ s : Prop\nbut is expected to have type\n  @Convex 𝕜 ?m.6780 CommSemiring.toSemiring ?m.6782 ?m.6783 SMulZeroClass.toSMul ?m.6785 : Prop') - Line 3175
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Convex ?m.6536 ?m.6542\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁶ : Semiring 𝕜\ninst✝¹⁵ : PartialOrder 𝕜\ninst✝¹⁴ : AddCommMonoid E\ninst✝¹³ : SMul 𝕜 E\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : AddCommMonoid E\ninst✝¹⁰ : LinearOrder E\ninst✝⁹ : IsOrderedAddMonoid E\ninst✝⁸ : CommSemiring 𝕜\ninst✝⁷ : PartialOrder 𝕜\ninst✝⁶ : AddCommMonoid E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : CommSemiring 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\na b : E\n⊢ Convex 𝕜 (openSegment 𝕜 a b)") - Line 3176
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a - ?b\n𝕜 : Type u_1\nE : Type u_2\ninst✝²⁰ : Semiring 𝕜\ninst✝¹⁹ : PartialOrder 𝕜\ninst✝¹⁸ : AddCommMonoid E\ninst✝¹⁷ : SMul 𝕜 E\ninst✝¹⁶ : Module 𝕜 E\ninst✝¹⁵ : AddCommMonoid E\ninst✝¹⁴ : LinearOrder E\ninst✝¹³ : IsOrderedAddMonoid E\ninst✝¹² : CommSemiring 𝕜\ninst✝¹¹ : PartialOrder 𝕜\ninst✝¹⁰ : AddCommMonoid E\ninst✝⁹ : Module 𝕜 E\ninst✝⁸ : CommSemiring 𝕜\ninst✝⁷ : PartialOrder 𝕜\ninst✝⁶ : IsStrictOrderedRing 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : Ring 𝕜\ninst✝² : PartialOrder 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (s - t)") - Line 3182
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\n𝕜 : Type u_1\nE : Type u_2\ninst✝²¹ : Semiring 𝕜\ninst✝²⁰ : PartialOrder 𝕜\ninst✝¹⁹ : AddCommMonoid E\ninst✝¹⁸ : SMul 𝕜 E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : AddCommMonoid E\ninst✝¹⁵ : LinearOrder E\ninst✝¹⁴ : IsOrderedAddMonoid E\ninst✝¹³ : CommSemiring 𝕜\ninst✝¹² : PartialOrder 𝕜\ninst✝¹¹ : AddCommMonoid E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : CommSemiring 𝕜\ninst✝⁸ : PartialOrder 𝕜\ninst✝⁷ : IsStrictOrderedRing 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : Ring 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ns : Set E\ninst✝ : AddRightMono 𝕜\nhs : Convex 𝕜 s\nx y : E\nhx : x ∈ s\nhy : x + y ∈ s\nt : 𝕜\nht : t ∈ Set.Icc 0 1\nh : sorry\n⊢ x + t • y ∈ s") - Line 3183
LeanError(message='Lean error:\napplication type mismatch\n  @Convex.add_smul_mem 𝕜 E inst✝⁴ inst✝³ ?m.10559 ?m.10560 s ?m.10562 hs\nargument\n  hs\nhas type\n  @Convex 𝕜 E inst✝²¹ inst✝³ inst✝¹¹ inst✝¹⁸ s : Prop\nbut is expected to have type\n  @Convex 𝕜 E Ring.toSemiring inst✝³ AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul s : Prop') - Line 3184
LeanError(message="Lean error:\nunknown free variable '_fvar.7996'") - Line 3185
LeanError(message='Lean error:\napplication type mismatch\n  @Convex.lineMap_mem 𝕜 E inst✝⁴ inst✝³ ?m.12677 ?m.12678 s ?m.12680 h\nargument\n  h\nhas type\n  @Convex 𝕜 E inst✝²¹ inst✝³ inst✝¹¹ inst✝¹⁸ s : Prop\nbut is expected to have type\n  @Convex 𝕜 E Ring.toSemiring inst✝³ AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul s : Prop') - Line 3187
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  true : Bool\nbut previous right-hand side is\n  Function.const Lean.Name () `0.0.0.0.0.0._sorry._@._hyg.107 : Unit") - Line 3188
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.14001 • ?A\n𝕜 : Type u_1\nE : Type u_2\ninst✝³⁰ : Semiring 𝕜\ninst✝²⁹ : PartialOrder 𝕜\ninst✝²⁸ : AddCommMonoid E\ninst✝²⁷ : SMul 𝕜 E\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : AddCommMonoid E\ninst✝²⁴ : LinearOrder E\ninst✝²³ : IsOrderedAddMonoid E\ninst✝²² : CommSemiring 𝕜\ninst✝²¹ : PartialOrder 𝕜\ninst✝²⁰ : AddCommMonoid E\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : CommSemiring 𝕜\ninst✝¹⁷ : PartialOrder 𝕜\ninst✝¹⁶ : IsStrictOrderedRing 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : Ring 𝕜\ninst✝¹² : PartialOrder 𝕜\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : Semiring 𝕜\ninst✝⁷ : LinearOrder 𝕜\ninst✝⁶ : IsOrderedRing 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : Field 𝕜\ninst✝³ : LinearOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx : E\nzero_mem : 0 ∈ s\nhx : x ∈ s\nt : 𝕜\nht : 1 ≤ t\n⊢ x ∈ t • s") - Line 3191
LeanError(message="Lean error:\ntactic 'subst' failed, 'p' occurs at\n  0\ncase inl.intro\n𝕜 : Type u_1\nE : Type u_2\ninst✝³⁰ : Semiring 𝕜\ninst✝²⁹ : PartialOrder 𝕜\ninst✝²⁸ : AddCommMonoid E\ninst✝²⁷ : SMul 𝕜 E\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : AddCommMonoid E\ninst✝²⁴ : LinearOrder E\ninst✝²³ : IsOrderedAddMonoid E\ninst✝²² : CommSemiring 𝕜\ninst✝²¹ : PartialOrder 𝕜\ninst✝²⁰ : AddCommMonoid E\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : CommSemiring 𝕜\ninst✝¹⁷ : PartialOrder 𝕜\ninst✝¹⁶ : IsStrictOrderedRing 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : Ring 𝕜\ninst✝¹² : PartialOrder 𝕜\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : Semiring 𝕜\ninst✝⁷ : LinearOrder 𝕜\ninst✝⁶ : IsOrderedRing 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : Field 𝕜\ninst✝³ : LinearOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\np q : 𝕜\nhx : x ∈ s\nhy : y ∈ s\nhp : 0 ≤ p\nhq : 0 ≤ q\nleft✝ : p = 0\nright✝ : q = 0\n⊢ ∃ z ∈ s, (p + q) • z = p • x + q • y") - Line 3192
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3194
LeanError(message='Lean error:\nsimp made no progress') - Line 3196
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3200
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4716 is not an inductive datatype') - Line 3213
LeanError(message='Lean error:\ninternal exception #5') - Line 3219
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  edist ?x ?y\nV : Type u_1\ninst✝⁷ : TopologicalSpace V\ninst✝⁶ : AddCommGroup V\ninst✝⁵ : Module ℝ V\ninst✝⁴ : ContinuousAdd V\ninst✝³ : ContinuousSMul ℝ V\ninst✝² : ContinuousAdd V\ninst✝¹ : SeminormedAddCommGroup V\ninst✝ : NormedSpace ℝ V\nK L : ConvexBody V\n⊢ EMetric.hausdorffEdist ↑K ↑L = sorry") - Line 3223
LeanError(message='Lean error:\n<input>:4:30: expected end of input') - Line 3224
LeanError(message='Lean error:\nsimp made no progress') - Line 3225
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Finset.Nonempty ?m.8539\nx✝ : Sort u_2\nminCardFinsetOfMemConvexHull : x✝\n⊢ sorry") - Line 3228
LeanError(message='Lean error:\n<input>:1:9: expected term') - Line 3230
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (convexHull ?m.25544) ?m.25551\n𝕜 : Type u_1\nE : Type u\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\ns : Set E\nx : E\nhx : x ∈ sorry\n⊢ ∃ ι x_1 z w, Set.range z ⊆ s ∧ sorry ∧ (∀ (i : ι), 0 < w i) ∧ ∑ i, w i = 1 ∧ ∑ i, sorry = x") - Line 3232
LeanError(message='Lean error:\nsimp made no progress') - Line 3233
LeanError(message='Lean error:\nsimp made no progress') - Line 3234
LeanError(message='Lean error:\nsimp made no progress') - Line 3235
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Finset.centerMass'.") - Line 3236
LeanError(message="Lean error:\nunknown free variable '_fvar.168'") - Line 3238
LeanError(message="Lean error:\nunknown free variable '_fvar.168'") - Line 3239
LeanError(message='Lean error:\ninternal exception #5') - Line 3240
LeanError(message="Lean error:\nunknown free variable '_fvar.168'") - Line 3241
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Finset.centerMass ?t ?w ?z\nE : Type u_3\nι : Type u_5\ninst✝¹ : AddCommGroup E\ni : ι\nt : Finset ι\nz : ι → E\ninst✝ : DecidableEq ι\nhi : i ∈ t\n⊢ sorry = z i") - Line 3242
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Finset.centerMass'.") - Line 3243
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Finset.centerMass'.") - Line 3245
LeanError(message="Lean error:\nunknown free variable '_fvar.1651'") - Line 3247
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3248
LeanError(message='Lean error:\ntype mismatch\n  HasSubset.Subset.trans (Function.support_smul_subset_left ?m.15780 ?m.15781) sorry\nhas type\n  Function.support (?m.15780 • ?m.15781) ⊆ ?m.16672 : Prop\nbut is expected to have type\n  Function.support ((fun i => sorry) ∘ PLift.down) ⊆ sorry : Prop') - Line 3250
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3251
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Finset.centerMass ?t ?w ?z\nE : Type u_3\nι : Type u_5\ninst✝ : AddCommGroup E\nz : ι → E\ns : Set E\nt : Finset ι\nhw₀ : (i : ι) → i ∈ t → sorry\nhws : sorry\nhz : ∀ i ∈ t, z i ∈ s\n⊢ sorry ∈ sorry") - Line 3253
LeanError(message='Lean error:\ninternal exception #5') - Line 3256
LeanError(message='Lean error:\ninternal exception #5') - Line 3257
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Finset.centroid ?m.8577 s ?p\nE : Type u_3\ninst✝ : AddCommGroup E\ns : Finset E\nhs : s.Nonempty\n⊢ sorry ∈ sorry") - Line 3259
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3260
LeanError(message='Lean error:\napplication type mismatch\n  Set.Subset.antisymm (convexHull_min ?m.8597 ?m.8598)\nargument\n  convexHull_min ?m.8597 ?m.8598\nhas type\n  (convexHull ?m.8589) ?m.8595 ⊆ ?m.8596 : Prop\nbut is expected to have type\n  sorry ⊆ {x | ∃ ι t w z, (∀ i ∈ t, sorry) ∧ ∑ i ∈ t, w i = 1 ∧ (∀ i ∈ t, z i ∈ s) ∧ sorry = x} : Prop') - Line 3261
LeanError(message='Lean error:\ninternal exception #5') - Line 3262
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3263
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (convexHull ?m.7363) ↑?s\nR : Type u_1\nE : Type u_3\ninst✝¹ : Field R\ninst✝ : AddCommGroup E\ns : Finset E\nx : E\n⊢ x ∈ sorry ↔ ∃ w, (∀ y ∈ s, sorry) ∧ ∑ y ∈ s, w y = 1 ∧ sorry = x") - Line 3265
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.9990 ∈ (convexHull ?m.9982) ↑?m.9989\nR : Type u_1\nE : Type u_3\ninst✝¹ : Field R\ninst✝ : AddCommGroup E\ns : Finset E\nx : E\n⊢ x ∈ sorry ↔ ∃ w, (∀ y ∈ s, sorry) ∧ ∑ y ∈ s, w y = 1 ∧ ∑ y ∈ s, sorry = x") - Line 3266
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.14205 ∈ (convexHull ?m.14197) ?m.14204\nE : Type u_3\nF : Type u_4\ninst✝¹ : AddCommGroup E\ninst✝ : AddCommGroup F\ns : Set E\nt : Set F\nx : E\ny : F\nhx : x ∈ sorry\nhy : y ∈ sorry\n⊢ (x, y) ∈ sorry") - Line 3269
LeanError(message="Lean error:\nunknown free variable '_fvar.3049'") - Line 3271
LeanError(message="Lean error:\nunknown free variable '_fvar.3149'") - Line 3272
LeanError(message='Lean error:\nno goals to be solved') - Line 3276
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3277
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3286
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3288
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3297
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3298
LeanError(message='Lean error:\nsimp made no progress') - Line 3318
LeanError(message='Lean error:\n<input>:1:40: expected end of input') - Line 3325
LeanError(message='Lean error:\n<input>:1:40: expected end of input') - Line 3326
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3327
LeanError(message='Lean error:\n<input>:11:4: expected end of input') - Line 3344
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?a‖₊⁻¹\n𝕜 : Type u_1\ninst✝¹ : NNNorm 𝕜\nE : Type u_2\ninst✝ : SMul 𝕜 E\nc : 𝕜\ns : Set E\nh : sorry ∈ s\nhc : c ≠ sorry\n⊢ sorry ≤ ‖c‖₊⁻¹") - Line 3399
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  egauge ?m.26171 ?m.26176 ?m.26177 = 0\n𝕜 : Type u_6\ninst✝¹ : NormedDivisionRing 𝕜\ninst✝ : (nhdsWithin 0 {0}ᶜ).NeBot\n⊢ sorry = 0") - Line 3404
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3405
LeanError(message='Lean error:\ninternal exception #5') - Line 3407
LeanError(message='Lean error:\nsimp made no progress') - Line 3408
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3409
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 3411
LeanError(message='Lean error:\nsimp made no progress') - Line 3412
LeanError(message='Lean error:\ninternal exception #5') - Line 3413
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3414
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.65329 ∈ Metric.closedBall 0 ?m.65330\ncase intro.intro\n𝕜 : Type u_11\ninst✝² : NormedField 𝕜\nE : Type u_12\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nr : NNReal\nc : 𝕜\ny : E\nhy : y ∈ Metric.closedBall 0 ↑r\n⊢ ‖(fun x => c • x) y‖ₑ / ↑r ≤ ‖c‖ₑ") - Line 3417
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3421
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type (max u_3 u_4)), ∃ l a, B = {x | x ∈ A ∧ a ≤ sorry}\nE : Type u_4\ninst✝ : AddCommMonoid E\nA B : Set E\nhAB : sorry\nhB : B.Nonempty\n⊢ ∃ l a, B = {x | x ∈ A ∧ a ≤ sorry}") - Line 3429
LeanError(message='Lean error:\n<input>:4:15: expected term') - Line 3430
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3432
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Set (E × ?m.11097 s t)') - Line 3462
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3463
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3465
LeanError(message='Lean error:\napplication type mismatch\n  ⟨hx.left, IsExtreme.convex_diff ?m.6226 ?m.6374⟩\nargument\n  IsExtreme.convex_diff ?m.6226 ?m.6374\nhas type\n  @Convex ?m.3723 ?m.3724 ?m.3725 ?m.3726 AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul (?m.3729 \\ ?m.3730) : Prop\nbut is expected to have type\n  @Convex 𝕜 E inst✝¹² inst✝⁸ inst✝¹⁴ inst✝¹³ (A \\ {x}) : Prop') - Line 3466
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.11602 ∈ Set.extremePoints ?m.11592 ?m.11601\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁶ : Semiring 𝕜\ninst✝¹⁵ : PartialOrder 𝕜\ninst✝¹⁴ : AddCommMonoid E\ninst✝¹³ : SMul 𝕜 E\ninst✝¹² : Semiring 𝕜\ninst✝¹¹ : PartialOrder 𝕜\ninst✝¹⁰ : AddCommGroup E\ninst✝⁹ : Ring 𝕜\ninst✝⁸ : PartialOrder 𝕜\ninst✝⁷ : IsOrderedRing 𝕜\ninst✝⁶ : Ring 𝕜\ninst✝⁵ : LinearOrder 𝕜\ninst✝⁴ : IsStrictOrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : DenselyOrdered 𝕜\ninst✝ : NoZeroSMulDivisors 𝕜 E\nA : Set E\nx : E\nhA : Convex 𝕜 A\n⊢ x ∈ Set.extremePoints 𝕜 A ↔ x ∈ A \\ (convexHull 𝕜) (A \\ {x})") - Line 3467
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3328\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁶ : Semiring 𝕜\ninst✝¹⁵ : PartialOrder 𝕜\ninst✝¹⁴ : AddCommMonoid E\ninst✝¹³ : SMul 𝕜 E\ninst✝¹² : Semiring 𝕜\ninst✝¹¹ : PartialOrder 𝕜\ninst✝¹⁰ : AddCommGroup E\ninst✝⁹ : Ring 𝕜\ninst✝⁸ : PartialOrder 𝕜\ninst✝⁷ : IsOrderedRing 𝕜\ninst✝⁶ : Ring 𝕜\ninst✝⁵ : LinearOrder 𝕜\ninst✝⁴ : IsStrictOrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : DenselyOrdered 𝕜\ninst✝ : NoZeroSMulDivisors 𝕜 E\nA : Set E\nx : E\nhx : x ∈ Set.extremePoints 𝕜 ((convexHull 𝕜) A)\n⊢ x ∈ A") - Line 3468
LeanError(message='Lean error:\napplication type mismatch\n  ConvexOn.translate_right hf\nargument\n  hf\nhas type\n  @ConvexOn 𝕜 E β inst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ inst✝¹³ inst✝⁴ inst✝ s f : Prop\nbut is expected to have type\n  @ConvexOn ?m.6826 E ?m.6828 ?m.6829 ?m.6830 ?m.6831 ?m.6832 ?m.6833 SMulZeroClass.toSMul ?m.6835 ?m.6836\n    ?m.6837 : Prop') - Line 3507
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.9976 is not an inductive datatype') - Line 3509
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ConvexOn ?m.8561 ?m.8571 ?m.8572\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝¹⁹ : Semiring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddCommMonoid E\ninst✝¹⁶ : AddCommMonoid β\ninst✝¹⁵ : PartialOrder β\ninst✝¹⁴ : SMul 𝕜 E\ninst✝¹³ : SMul 𝕜 β\ninst✝¹² : IsOrderedAddMonoid β\ninst✝¹¹ : SMul 𝕜 E\ninst✝¹⁰ : DistribMulAction 𝕜 β\ninst✝⁹ : SMul 𝕜 E\ninst✝⁸ : Module 𝕜 β\ninst✝⁷ : IsOrderedAddMonoid β\ninst✝⁶ : SMul 𝕜 E\ninst✝⁵ : Module 𝕜 β\ninst✝⁴ : OrderedSMul 𝕜 β\ninst✝³ : Module 𝕜 E\ninst✝² : SMul 𝕜 β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ ConvexOn 𝕜 s f ↔\n    Convex 𝕜 s ∧ s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → f (a • x + b • y) ≤ a • f x + b • f y") - Line 3511
LeanError(message='Lean error:\napplication type mismatch\n  And.intro hs\nargument\n  hs\nhas type\n  @Convex 𝕜 E inst✝²² inst✝²¹ inst✝²⁰ inst✝⁹ s : Prop\nbut is expected to have type\n  @Convex ?m.11540 ?m.11541 ?m.11543 ?m.11675 ?m.11875 SMulZeroClass.toSMul ?m.13853 : Prop') - Line 3519
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3521
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  true : Bool\nbut previous right-hand side is\n  Function.const Lean.Name () `0.0.0.0.0.0._sorry._@._hyg.102 : Unit") - Line 3535
LeanError(message='Lean error:\ntype mismatch\n  sup_le ?m.17555 ?m.17556\nhas type\n  @LE.le ?m.17550 (@Preorder.toLE ?m.17550 (@PartialOrder.toPreorder ?m.17550 SemilatticeSup.toPartialOrder))\n    (?m.17552 ⊔ ?m.17553) ?m.17554 : Prop\nbut is expected to have type\n  @LE.le β (@Preorder.toLE β (@PartialOrder.toPreorder β inst✝⁹)) (max f g (a • x + b • y))\n    (a • max f g x + b • max f g y) : Prop') - Line 3539
LeanError(message='Lean error:\ngcongr did not make progress') - Line 3543
LeanError(message='Lean error:\ngcongr did not make progress') - Line 3547
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴¹ : Semiring 𝕜\ninst✝⁴⁰ : PartialOrder 𝕜\ninst✝³⁹ : AddCommMonoid E\ninst✝³⁸ : AddCommMonoid β\ninst✝³⁷ : PartialOrder β\ninst✝³⁶ : SMul 𝕜 E\ninst✝³⁵ : SMul 𝕜 β\ninst✝³⁴ : IsOrderedAddMonoid β\ninst✝³³ : SMul 𝕜 E\ninst✝³² : DistribMulAction 𝕜 β\ninst✝³¹ : SMul 𝕜 E\ninst✝³⁰ : Module 𝕜 β\ninst✝²⁹ : IsOrderedAddMonoid β\ninst✝²⁸ : SMul 𝕜 E\ninst✝²⁷ : Module 𝕜 β\ninst✝²⁶ : OrderedSMul 𝕜 β\ninst✝²⁵ : Module 𝕜 E\ninst✝²⁴ : SMul 𝕜 β\ninst✝²³ : Module 𝕜 E\ninst✝²² : Module 𝕜 β\ninst✝²¹ : IsOrderedAddMonoid β\ninst✝²⁰ : OrderedSMul 𝕜 β\ninst✝¹⁹ : LinearOrder E\ninst✝¹⁸ : Module 𝕜 E\ninst✝¹⁷ : SMul 𝕜 β\ninst✝¹⁶ : AddCommMonoid β\ninst✝¹⁵ : PartialOrder β\ninst✝¹⁴ : IsOrderedCancelAddMonoid β\ninst✝¹³ : SMul 𝕜 E\ninst✝¹² : DistribMulAction 𝕜 β\ninst✝¹¹ : Module 𝕜 E\ninst✝¹⁰ : Module 𝕜 β\ninst✝⁹ : OrderedSMul 𝕜 β\ninst✝⁸ : AddCommMonoid β\ninst✝⁷ : LinearOrder β\ninst✝⁶ : IsOrderedAddMonoid β\ninst✝⁵ : AddCommMonoid β\ninst✝⁴ : LinearOrder β\ninst✝³ : IsOrderedCancelAddMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : x ∈ s\nhy : y ∈ s\nha : 0 ≤ a\nhb : 0 < b\nhab : a + b = 1\nhfx : f x ≤ f (a • x + b • y)\n⊢ f (a • x + b • y) ≤ f y") - Line 3553
LeanError(message="Lean error:\napplication type mismatch\n  ConvexOn.le_left_of_right_le' ?m.24060 hx hy ha sorry hab hyz\nargument\n  hyz\nhas type\n  @LE.le β (@Preorder.toLE β (@PartialOrder.toPreorder β inst✝¹⁵)) (f y) (f (a • x + b • y)) : Prop\nbut is expected to have type\n  @LE.le ?m.22452 (@Preorder.toLE ?m.22452 (@PartialOrder.toPreorder ?m.22452 SemilatticeInf.toPartialOrder))\n    (?m.22463 y) (?m.22463 (a • x + b • y)) : Prop") - Line 3555
LeanError(message="Lean error:\napplication type mismatch\n  ConvexOn.le_right_of_left_le' ?m.24060 hx hy sorry hb hab hxz\nargument\n  hxz\nhas type\n  @LE.le β (@Preorder.toLE β (@PartialOrder.toPreorder β inst✝¹⁵)) (f x) (f (a • x + b • y)) : Prop\nbut is expected to have type\n  @LE.le ?m.22452 (@Preorder.toLE ?m.22452 (@PartialOrder.toPreorder ?m.22452 SemilatticeInf.toPartialOrder))\n    (?m.22463 x) (?m.22463 (a • x + b • y)) : Prop") - Line 3557
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴⁴ : Semiring 𝕜\ninst✝⁴³ : PartialOrder 𝕜\ninst✝⁴² : AddCommMonoid E\ninst✝⁴¹ : AddCommMonoid β\ninst✝⁴⁰ : PartialOrder β\ninst✝³⁹ : SMul 𝕜 E\ninst✝³⁸ : SMul 𝕜 β\ninst✝³⁷ : IsOrderedAddMonoid β\ninst✝³⁶ : SMul 𝕜 E\ninst✝³⁵ : DistribMulAction 𝕜 β\ninst✝³⁴ : SMul 𝕜 E\ninst✝³³ : Module 𝕜 β\ninst✝³² : IsOrderedAddMonoid β\ninst✝³¹ : SMul 𝕜 E\ninst✝³⁰ : Module 𝕜 β\ninst✝²⁹ : OrderedSMul 𝕜 β\ninst✝²⁸ : Module 𝕜 E\ninst✝²⁷ : SMul 𝕜 β\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : Module 𝕜 β\ninst✝²⁴ : IsOrderedAddMonoid β\ninst✝²³ : OrderedSMul 𝕜 β\ninst✝²² : LinearOrder E\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : SMul 𝕜 β\ninst✝¹⁹ : AddCommMonoid β\ninst✝¹⁸ : PartialOrder β\ninst✝¹⁷ : IsOrderedCancelAddMonoid β\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : DistribMulAction 𝕜 β\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : Module 𝕜 β\ninst✝¹² : OrderedSMul 𝕜 β\ninst✝¹¹ : AddCommMonoid β\ninst✝¹⁰ : LinearOrder β\ninst✝⁹ : IsOrderedAddMonoid β\ninst✝⁸ : AddCommMonoid β\ninst✝⁷ : LinearOrder β\ninst✝⁶ : IsOrderedCancelAddMonoid β\ninst✝⁵ : SMul 𝕜 E\ninst✝⁴ : Module 𝕜 β\ninst✝³ : OrderedSMul 𝕜 β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : x ∈ s\nhy : y ∈ s\nha : 0 < a\nhb : 0 < b\nhab : a + b = 1\nhfx : f x < f (a • x + b • y)\n⊢ f (a • x + b • y) < f y") - Line 3561
LeanError(message="Lean error:\napplication type mismatch\n  ConvexOn.lt_left_of_right_lt' ?m.26477 hx hy ha hb hab hyz\nargument\n  hyz\nhas type\n  f y < f (a • x + b • y) : Prop\nbut is expected to have type\n  ?m.24882 y < ?m.24882 (a • x + b • y) : Prop") - Line 3563
LeanError(message="Lean error:\napplication type mismatch\n  ConvexOn.lt_right_of_left_lt' ?m.26477 hx hy ha hb hab hxz\nargument\n  hxz\nhas type\n  f x < f (a • x + b • y) : Prop\nbut is expected to have type\n  ?m.24882 x < ?m.24882 (a • x + b • y) : Prop") - Line 3565
LeanError(message='Lean error:\n<input>:2:19: expected rcasesPat') - Line 3567
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ConcaveOn ?m.26225 ?m.26236 ?m.26237\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴⁹ : Semiring 𝕜\ninst✝⁴⁸ : PartialOrder 𝕜\ninst✝⁴⁷ : AddCommMonoid E\ninst✝⁴⁶ : AddCommMonoid β\ninst✝⁴⁵ : PartialOrder β\ninst✝⁴⁴ : SMul 𝕜 E\ninst✝⁴³ : SMul 𝕜 β\ninst✝⁴² : IsOrderedAddMonoid β\ninst✝⁴¹ : SMul 𝕜 E\ninst✝⁴⁰ : DistribMulAction 𝕜 β\ninst✝³⁹ : SMul 𝕜 E\ninst✝³⁸ : Module 𝕜 β\ninst✝³⁷ : IsOrderedAddMonoid β\ninst✝³⁶ : SMul 𝕜 E\ninst✝³⁵ : Module 𝕜 β\ninst✝³⁴ : OrderedSMul 𝕜 β\ninst✝³³ : Module 𝕜 E\ninst✝³² : SMul 𝕜 β\ninst✝³¹ : Module 𝕜 E\ninst✝³⁰ : Module 𝕜 β\ninst✝²⁹ : IsOrderedAddMonoid β\ninst✝²⁸ : OrderedSMul 𝕜 β\ninst✝²⁷ : LinearOrder E\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : SMul 𝕜 β\ninst✝²⁴ : AddCommMonoid β\ninst✝²³ : PartialOrder β\ninst✝²² : IsOrderedCancelAddMonoid β\ninst✝²¹ : SMul 𝕜 E\ninst✝²⁰ : DistribMulAction 𝕜 β\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : Module 𝕜 β\ninst✝¹⁷ : OrderedSMul 𝕜 β\ninst✝¹⁶ : AddCommMonoid β\ninst✝¹⁵ : LinearOrder β\ninst✝¹⁴ : IsOrderedAddMonoid β\ninst✝¹³ : AddCommMonoid β\ninst✝¹² : LinearOrder β\ninst✝¹¹ : IsOrderedCancelAddMonoid β\ninst✝¹⁰ : SMul 𝕜 E\ninst✝⁹ : Module 𝕜 β\ninst✝⁸ : OrderedSMul 𝕜 β\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : Module 𝕜 β\ninst✝⁵ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\ninst✝⁴ : AddCommGroup β\ninst✝³ : PartialOrder β\ninst✝² : IsOrderedAddMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\n⊢ ConcaveOn 𝕜 s (-f) ↔ ConvexOn 𝕜 s f") - Line 3568
LeanError(message='Lean error:\n<input>:2:19: expected rcasesPat') - Line 3569
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  StrictConcaveOn ?m.26225 ?m.26236 ?m.26237\n𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴⁹ : Semiring 𝕜\ninst✝⁴⁸ : PartialOrder 𝕜\ninst✝⁴⁷ : AddCommMonoid E\ninst✝⁴⁶ : AddCommMonoid β\ninst✝⁴⁵ : PartialOrder β\ninst✝⁴⁴ : SMul 𝕜 E\ninst✝⁴³ : SMul 𝕜 β\ninst✝⁴² : IsOrderedAddMonoid β\ninst✝⁴¹ : SMul 𝕜 E\ninst✝⁴⁰ : DistribMulAction 𝕜 β\ninst✝³⁹ : SMul 𝕜 E\ninst✝³⁸ : Module 𝕜 β\ninst✝³⁷ : IsOrderedAddMonoid β\ninst✝³⁶ : SMul 𝕜 E\ninst✝³⁵ : Module 𝕜 β\ninst✝³⁴ : OrderedSMul 𝕜 β\ninst✝³³ : Module 𝕜 E\ninst✝³² : SMul 𝕜 β\ninst✝³¹ : Module 𝕜 E\ninst✝³⁰ : Module 𝕜 β\ninst✝²⁹ : IsOrderedAddMonoid β\ninst✝²⁸ : OrderedSMul 𝕜 β\ninst✝²⁷ : LinearOrder E\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : SMul 𝕜 β\ninst✝²⁴ : AddCommMonoid β\ninst✝²³ : PartialOrder β\ninst✝²² : IsOrderedCancelAddMonoid β\ninst✝²¹ : SMul 𝕜 E\ninst✝²⁰ : DistribMulAction 𝕜 β\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : Module 𝕜 β\ninst✝¹⁷ : OrderedSMul 𝕜 β\ninst✝¹⁶ : AddCommMonoid β\ninst✝¹⁵ : LinearOrder β\ninst✝¹⁴ : IsOrderedAddMonoid β\ninst✝¹³ : AddCommMonoid β\ninst✝¹² : LinearOrder β\ninst✝¹¹ : IsOrderedCancelAddMonoid β\ninst✝¹⁰ : SMul 𝕜 E\ninst✝⁹ : Module 𝕜 β\ninst✝⁸ : OrderedSMul 𝕜 β\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : Module 𝕜 β\ninst✝⁵ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\ninst✝⁴ : AddCommGroup β\ninst✝³ : PartialOrder β\ninst✝² : IsOrderedAddMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\n⊢ StrictConcaveOn 𝕜 s (-f) ↔ StrictConvexOn 𝕜 s f") - Line 3570
LeanError(message='Lean error:\napplication type mismatch\n  StrictConvexOn.translate_right hf\nargument\n  hf\nhas type\n  @StrictConvexOn 𝕜 E β inst✝⁵⁴ inst✝⁵³ inst✝⁵² inst✝³ inst✝² inst✝⁶ inst✝ s f : Prop\nbut is expected to have type\n  @StrictConvexOn ?m.30670 E ?m.30672 ?m.30673 ?m.30674 AddCancelCommMonoid.toAddCommMonoid ?m.30676 ?m.30677\n    SMulZeroClass.toSMul ?m.30679 ?m.30680 ?m.30681 : Prop') - Line 3581
LeanError(message='Lean error:\napplication type mismatch\n  StrictConcaveOn.translate_right hf\nargument\n  hf\nhas type\n  @StrictConcaveOn 𝕜 E β inst✝⁵⁴ inst✝⁵³ inst✝⁵² inst✝³ inst✝² inst✝⁶ inst✝ s f : Prop\nbut is expected to have type\n  @StrictConcaveOn ?m.30670 E ?m.30672 ?m.30673 ?m.30674 AddCancelCommMonoid.toAddCommMonoid ?m.30676 ?m.30677\n    SMulZeroClass.toSMul ?m.30679 ?m.30680 ?m.30681 : Prop') - Line 3582
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.56132 is not an inductive datatype') - Line 3591
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.56127 is not an inductive datatype') - Line 3592
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.56132 is not an inductive datatype') - Line 3593
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.56127 is not an inductive datatype') - Line 3594
LeanError(message='Lean error:\ninternal exception #5') - Line 3595
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3608
LeanError(message='Lean error:\nsimp made no progress') - Line 3609
LeanError(message='Lean error:\nsimp made no progress') - Line 3613
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  - -?a\nE : Type u_2\ninst✝¹ : AddCommGroup E\ninst✝ : Module ℝ E\ns : Set E\nx : E\n⊢ gauge (- -s) (-x) = gauge s (-x)") - Line 3614
LeanError(message='Lean error:\napplication type mismatch\n  Set.zero_smul_set_subset ?m.3841 hx\nargument\n  hx\nhas type\n  x ∈\n    @HSMul.hSMul ℝ (Set E) (Set E)\n      (@instHSMul ℝ (Set E)\n        (@Set.smulSet ℝ E (@SMulZeroClass.toSMul ℝ E AddZeroClass.toZero DistribSMul.toSMulZeroClass)))\n      0 s : Prop\nbut is expected to have type\n  ?m.3842 ∈\n    @HSMul.hSMul ?m.3836 (Set ?m.3837) (Set ?m.3837)\n      (@instHSMul ?m.3836 (Set ?m.3837)\n        (@Set.smulSet ?m.3836 ?m.3837 (@SMulZeroClass.toSMul ?m.3836 ?m.3837 ?m.3839 SMulWithZero.toSMulZeroClass)))\n      0 ?m.3841 : Prop') - Line 3615
LeanError(message='Lean error:\n<input>:3:31: expected end of input') - Line 3616
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6483 is not an inductive datatype') - Line 3619
LeanError(message='Lean error:\napplication type mismatch\n  exists_lt_of_gauge_lt absorbs (lt_add_of_pos_right sorry (half_pos hε))\nargument\n  lt_add_of_pos_right sorry (half_pos hε)\nhas type\n  sorry < sorry + ε / 2 : Prop\nbut is expected to have type\n  gauge s ?m.5813 < ?m.5814 : Prop') - Line 3622
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3624
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  StarConvex ?m.4952 0 ?m.4959\nE : Type u_2\ninst✝¹ : AddCommGroup E\ninst✝ : Module ℝ E\ns : Set E\nx : E\na : ℝ\nhs₀ : StarConvex ℝ 0 s\nhs₂ : Absorbs ℝ s {x}\nhx : x ∉ a • s\n⊢ a ≤ gauge s x") - Line 3626
LeanError(message='Lean error:\nfailed to synthesize\n  IsScalarTower ℝ 𝕜 E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3631
LeanError(message='Lean error:\ninternal exception #5') - Line 3632
LeanError(message='Lean error:\nno goals to be solved') - Line 3634
LeanError(message='Lean error:\nsimp made no progress') - Line 3635
LeanError(message="Lean error:\n<input>:1:43: expected ':' or term") - Line 3636
LeanError(message='Lean error:\nno goals to be solved') - Line 3637
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3639
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3640
LeanError(message='Lean error:\ninternal exception #5') - Line 3646
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.42593 is not an inductive datatype') - Line 3648
LeanError(message='Lean error:\ninternal exception #5') - Line 3651
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3654
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace ℝ E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3656
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 3657
LeanError(message='Lean error:\n<input>:4:6: expected end of input') - Line 3659
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3660
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x‖ / r\nE : Type u_2\ninst✝¹³ : AddCommGroup E\ninst✝¹² : Module ℝ E\ninst✝¹¹ : TopologicalSpace E\ninst✝¹⁰ : T1Space E\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : ContinuousSMul ℝ E\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : ContinuousSMul ℝ E\ninst✝⁴ : TopologicalSpace E\ninst✝³ : SeminormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\ns : Set E\nr : ℝ\nx : E\nhs : Absorbent ℝ s\nhr : 0 ≤ r\nhsr : s ⊆ Metric.closedBall 0 r\n⊢ ‖x‖ / r ≤ gauge s x") - Line 3664
LeanError(message='Lean error:\napplication type mismatch\n  ⟨?m.14243, right_mem_segment ?m.14246 ?m.14253 ?m.14254⟩\nargument\n  right_mem_segment ?m.14246 ?m.14253 ?m.14254\nhas type\n  ?m.14254 ∈\n    @segment ?m.14246 ?m.14247 ?m.14248 ?m.14249 ?m.14250\n      (@SMulZeroClass.toSMul ?m.14246 ?m.14247 AddZeroClass.toZero SMulWithZero.toSMulZeroClass) ?m.14253\n      ?m.14254 : Prop\nbut is expected to have type\n  y ∈\n    @segment 𝕜 E inst✝⁴ inst✝³ inst✝² (@SMulZeroClass.toSMul 𝕜 E AddZeroClass.toZero DistribSMul.toSMulZeroClass) x\n      y : Prop') - Line 3680
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 3683
LeanError(message='Lean error:\nno goals to be solved') - Line 3690
LeanError(message='Lean error:\nsimp made no progress') - Line 3691
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ((convexHull ?m.5823) ?m.5829).Nonempty\n𝕜 : Type u_1\nE : Type u_2\nι : Type u_3\ninst✝⁴ : Semiring 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : Subsingleton ι\np : ι → E\ns : Set ι\nx : ι\nhx : p x ∈ (convexHull 𝕜) (p '' s)\nthis : sorry\n⊢ x ∈ s") - Line 3693
LeanError(message='Lean error:\n<input>:2:14: expected end of input') - Line 3702
LeanError(message='Lean error:\n<input>:2:42: expected end of input') - Line 3703
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (convexHull ?m.7881) ?s\ncase refine_2\nE : Type u_3\n𝕜 : Type u_2\ninst✝⁸ : Semiring 𝕜\ninst✝⁷ : PartialOrder 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : Field 𝕜\ninst✝³ : LinearOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nι : Type u_1\np : ι → E\nh : ∀ (s : Finset ι) (x : ι), p x ∈ (convexHull 𝕜) sorry → x ∈ s\ns : Set ι\nx : ι\nhx : p x ∈ (convexHull 𝕜) (p '' s)\nhp : Function.Injective p\n⊢ x ∈ s") - Line 3704
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 3728
LeanError(message='Lean error:\ntype mismatch\n  Eq.symm h₁ ▸ zero_lt_one\nhas type\n  @OfNat.ofNat ℕ 0 (@Zero.toOfNat0 ℕ (@MulZeroClass.toZero ℕ Nat.instMulZeroClass)) < ∑ i ∈ t, sorry : Prop\nbut is expected to have type\n  @OfNat.ofNat ?m.64216 0\n      (@Zero.toOfNat0 ?m.64216 (@MulZeroClass.toZero ?m.64216 NonUnitalNonAssocSemiring.toMulZeroClass)) <\n    ∑ i ∈ ?m.64232, ?m.64233 i : Prop') - Line 3730
LeanError(message='Lean error:\napplication type mismatch\n  j.elim v w\nargument\n  w\nhas type\n  x✝¹ : Sort u_9\nbut is expected to have type\n  ?m.94338 → ℕ : Type (max ?u.94335 0)') - Line 3732
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3734
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3736
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3737
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\n𝕜 : Type u_1\nE : Type u_2\nι : Type u_5\ninst✝³ : Field 𝕜\ninst✝² : LinearOrder 𝕜\ninst✝¹ : IsStrictOrderedRing 𝕜\ninst✝ : AddCommGroup E\ns : Set E\nβ✝ : Type u_6\nf : E → β✝\nt : Finset ι\nw : ι → 𝕜\np : ι → E\nhf : StrictConvexOn 𝕜 s f\nh₀ : ∀ i ∈ t, 0 < w i\nh₁ : ∑ i ∈ t, w i = 1\nhmem : ∀ i ∈ t, p i ∈ s\n⊢ f (∑ i ∈ t, sorry) = ∑ i ∈ t, w i • f (p i) ↔ ∀ j ∈ t, p j = ∑ i ∈ t, sorry") - Line 3738
LeanError(message='Lean error:\napplication type mismatch\n  StrictConvexOn.map_sum_eq_iff (StrictConcaveOn.neg sorry) ?m.370996 h₁\nargument\n  h₁\nhas type\n  ∑ i ∈ t, sorry = 1 : Prop\nbut is expected to have type\n  ∑ i ∈ ?m.368375, ?m.368376 i = 1 : Prop') - Line 3739
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 3740
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ w, (∀ y ∈ ?m.31941, 0 ≤ w y) ∧ ∑ y ∈ ?m.31941, w y = 1 ∧ Finset.centerMass ?m.31941 w id = ?m.31942) →\n    f x ≤ t.sup' ⋯ f\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : Field 𝕜\ninst✝⁶ : LinearOrder 𝕜\ninst✝⁵ : IsStrictOrderedRing 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Field 𝕜\ninst✝² : LinearOrder 𝕜\ninst✝¹ : IsStrictOrderedRing 𝕜\ninst✝ : AddCommGroup E\ns : Set E\nβ✝ : Type u_6\nf : E → β✝\nx : E\nt : Finset E\nhf : ConvexOn 𝕜 s f\nhts : ↑t ⊆ s\nhx : x ∈ sorry\n⊢ f x ≤ t.sup' ⋯ f") - Line 3742
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ i ∈ {i ∈ t | w i ≠ 0}, sorry) → ∃ i ∈ t, f (t.centerMass w p) ≤ f (p i)\n𝕜 : Type u_1\nι : Type u_5\ninst✝⁵ : Field 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\nα✝ : Type u_6\ns : Set α✝\nβ✝ : Type u_7\nf : α✝ → β✝\nw : ι → ℕ\np : ι → α✝\nt : Finset ι\nh : ConvexOn 𝕜 s f\nhw₀ : ∀ i ∈ t, 0 ≤ w i\nhw₁ : 0 < ∑ i ∈ t, w i\nhp : ∀ i ∈ t, p i ∈ s\ny : α✝ := sorry\n⊢ ∃ i ∈ t, f (t.centerMass w p) ≤ f (p i)") - Line 3744
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (convexHull ?m.21277) ?s\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : Field 𝕜\ninst✝⁶ : LinearOrder 𝕜\ninst✝⁵ : IsStrictOrderedRing 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Field 𝕜\ninst✝² : LinearOrder 𝕜\ninst✝¹ : IsStrictOrderedRing 𝕜\ninst✝ : AddCommGroup E\ns : Set E\nβ✝ : Type u_6\nf : E → β✝\nx : E\nt : Set E\nhf : ConvexOn 𝕜 s f\nhts : t ⊆ s\nhx : x ∈ sorry\n⊢ ∃ y ∈ t, f x ≤ f y") - Line 3746
LeanError(message='Lean error:\n<input>:1:45: expected end of input') - Line 3750
LeanError(message="Lean error:\ntype mismatch\n  Exists.intro b ?m.11233\nhas type\n  Exists ?m.11229 : Prop\nbut is expected to have type\n  BddAbove (f '' sorry) : Prop") - Line 3752
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  AffineIndependent ?m.13075 ?m.13081\nι : Type u_1\nE : Type u_3\nf : ι → E\nh : ¬sorry\n⊢ ∃ I, (sorry ∩ sorry).Nonempty") - Line 3761
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3763
LeanError(message='Lean error:\nno goals to be solved') - Line 3764
LeanError(message="Lean error:\n<input>:1:61: unexpected end of input; expected '{'") - Line 3765
LeanError(message='Lean error:\nno goals to be solved') - Line 3766
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3767
LeanError(message='Lean error:\nno goals to be solved') - Line 3768
LeanError(message="Lean error:\n<input>:1:61: unexpected end of input; expected '{'") - Line 3769
LeanError(message='Lean error:\nno goals to be solved') - Line 3770
LeanError(message='Lean error:\nsimp made no progress') - Line 3771
LeanError(message='Lean error:\nsimp made no progress') - Line 3772
LeanError(message='Lean error:\nsimp made no progress') - Line 3781
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  segment ?𝕜 ?x ?y\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : Semiring 𝕜\ninst✝⁶ : PartialOrder 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : SMul 𝕜 E\ninst✝³ : ZeroLEOneClass 𝕜\ninst✝² : MulActionWithZero 𝕜 E\ninst✝¹ : ZeroLEOneClass 𝕜\ninst✝ : Module 𝕜 E\nx y z : E\nhx : x ≠ z\nhy : y ≠ z\nhz : z ∈ segment 𝕜 x y\n⊢ z ∈ openSegment 𝕜 x y") - Line 3782
LeanError(message='Lean error:\nsimp made no progress') - Line 3783
LeanError(message='Lean error:\nsimp made no progress') - Line 3787
LeanError(message='Lean error:\nsimp made no progress') - Line 3788
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.27442 ?m.27443') - Line 3789
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.27442 ?m.27443') - Line 3790
LeanError(message='Lean error:\nsimp made no progress') - Line 3795
LeanError(message='Lean error:\nsimp made no progress') - Line 3796
LeanError(message='Lean error:\nno goals to be solved') - Line 3802
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  segment ?𝕜 ?x ?y\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁸ : Semiring 𝕜\ninst✝¹⁷ : PartialOrder 𝕜\ninst✝¹⁶ : AddCommMonoid E\ninst✝¹⁵ : SMul 𝕜 E\ninst✝¹⁴ : ZeroLEOneClass 𝕜\ninst✝¹³ : MulActionWithZero 𝕜 E\ninst✝¹² : ZeroLEOneClass 𝕜\ninst✝¹¹ : Module 𝕜 E\ninst✝¹⁰ : Ring 𝕜\ninst✝⁹ : PartialOrder 𝕜\ninst✝⁸ : AddRightMono 𝕜\ninst✝⁷ : ZeroLEOneClass 𝕜\ninst✝⁶ : Nontrivial 𝕜\ninst✝⁵ : DenselyOrdered 𝕜\ninst✝⁴ : CommRing 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx y z : E\nh : x ∈ segment 𝕜 y z\n⊢ sorry") - Line 3803
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  @segment ?𝕜 ?E Ring.toSemiring ?inst✝ AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul ?c ?x ∩ segment ?𝕜 ?c ?y =\n    {?c}\nwith\n  @segment 𝕜 E inst✝¹⁹ inst✝⁴ inst✝¹⁷ inst✝¹⁶ (c + x) (c + t • y) ∩ segment 𝕜 (c + x) (c + s • y) = {c + x}\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁹ : Semiring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddCommMonoid E\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : ZeroLEOneClass 𝕜\ninst✝¹⁴ : MulActionWithZero 𝕜 E\ninst✝¹³ : ZeroLEOneClass 𝕜\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : Ring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : ZeroLEOneClass 𝕜\ninst✝⁷ : Nontrivial 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : CommRing 𝕜\ninst✝⁴ : PartialOrder 𝕜\ninst✝³ : IsOrderedRing 𝕜\ninst✝² : NoZeroDivisors 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx y : E\nh : LinearIndependent 𝕜 ![x, y]\ns t : 𝕜\nhs : s ≠ t\nc : E\n⊢ segment 𝕜 (c + x) (c + t • y) ∩ segment 𝕜 (c + x) (c + s • y) = {c + x}") - Line 3804
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  segment ?𝕜 ?x ?y\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁹ : Semiring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddCommMonoid E\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : ZeroLEOneClass 𝕜\ninst✝¹⁴ : MulActionWithZero 𝕜 E\ninst✝¹³ : ZeroLEOneClass 𝕜\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : Ring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : ZeroLEOneClass 𝕜\ninst✝⁷ : Nontrivial 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : Invertible 2\nx y : E\n⊢ sorry ∈ segment 𝕜 x y") - Line 3805
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  midpoint ?R (?x - ?y) (?x + ?y)\ncase h.e'_4.h.e'_3\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁹ : Semiring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddCommMonoid E\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : ZeroLEOneClass 𝕜\ninst✝¹⁴ : MulActionWithZero 𝕜 E\ninst✝¹³ : ZeroLEOneClass 𝕜\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : Ring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : ZeroLEOneClass 𝕜\ninst✝⁷ : Nontrivial 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : Invertible 2\nx y : E\n⊢ inst✝¹⁹ = Ring.toSemiring") - Line 3806
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  midpoint ?R (?x + ?y) (?x - ?y)\ncase h.e'_4.h.e'_3\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁹ : Semiring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddCommMonoid E\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : ZeroLEOneClass 𝕜\ninst✝¹⁴ : MulActionWithZero 𝕜 E\ninst✝¹³ : ZeroLEOneClass 𝕜\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : Ring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : AddRightMono 𝕜\ninst✝⁸ : ZeroLEOneClass 𝕜\ninst✝⁷ : Nontrivial 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : Invertible 2\nx y : E\n⊢ inst✝¹⁹ = Ring.toSemiring") - Line 3807
LeanError(message="Lean error:\n<input>:2:60: expected ')'") - Line 3808
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.14202 ∈ openSegment ?m.14195 ?m.14202 ?m.14203\n𝕜 : Type u_1\nE : Type u_2\ninst✝²⁰ : Semiring 𝕜\ninst✝¹⁹ : PartialOrder 𝕜\ninst✝¹⁸ : AddCommMonoid E\ninst✝¹⁷ : SMul 𝕜 E\ninst✝¹⁶ : ZeroLEOneClass 𝕜\ninst✝¹⁵ : MulActionWithZero 𝕜 E\ninst✝¹⁴ : ZeroLEOneClass 𝕜\ninst✝¹³ : Module 𝕜 E\ninst✝¹² : Ring 𝕜\ninst✝¹¹ : PartialOrder 𝕜\ninst✝¹⁰ : AddRightMono 𝕜\ninst✝⁹ : ZeroLEOneClass 𝕜\ninst✝⁸ : Nontrivial 𝕜\ninst✝⁷ : DenselyOrdered 𝕜\ninst✝⁶ : Ring 𝕜\ninst✝⁵ : LinearOrder 𝕜\ninst✝⁴ : IsStrictOrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\nx y : E\ninst✝¹ : DenselyOrdered 𝕜\ninst✝ : NoZeroSMulDivisors 𝕜 E\n⊢ y ∈ openSegment 𝕜 y x ↔ x = y") - Line 3809
LeanError(message='Lean error:\n<input>:2:9: expected end of input') - Line 3810
LeanError(message='Lean error:\n<input>:2:9: expected end of input') - Line 3811
LeanError(message='Lean error:\napplication type mismatch\n  Iff.intro sameRay_of_mem_segment\nargument\n  sameRay_of_mem_segment\nhas type\n  ?m.19130 ∈\n      @segment ?m.19123 ?m.19124 CommSemiring.toSemiring ?m.19126 AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul\n        ?m.19131 ?m.19132 →\n    SameRay ?m.19123 (?m.19130 - ?m.19131) (?m.19132 - ?m.19130) : Prop\nbut is expected to have type\n  x ∈ @segment 𝕜 E inst✝²⁸ inst✝¹⁹ inst✝²⁶ inst✝²⁵ y z → sorry : Prop') - Line 3812
LeanError(message="Lean error:\ntactic 'subst' failed, 'z' occurs at\n  (AffineMap.lineMap x y) c\ncase intro\n𝕜 : Type u_1\nE : Type u_2\ninst✝²⁸ : Semiring 𝕜\ninst✝²⁷ : PartialOrder 𝕜\ninst✝²⁶ : AddCommMonoid E\ninst✝²⁵ : SMul 𝕜 E\ninst✝²⁴ : ZeroLEOneClass 𝕜\ninst✝²³ : MulActionWithZero 𝕜 E\ninst✝²² : ZeroLEOneClass 𝕜\ninst✝²¹ : Module 𝕜 E\ninst✝²⁰ : Ring 𝕜\ninst✝¹⁹ : PartialOrder 𝕜\ninst✝¹⁸ : AddRightMono 𝕜\ninst✝¹⁷ : ZeroLEOneClass 𝕜\ninst✝¹⁶ : Nontrivial 𝕜\ninst✝¹⁵ : DenselyOrdered 𝕜\ninst✝¹⁴ : Ring 𝕜\ninst✝¹³ : LinearOrder 𝕜\ninst✝¹² : IsStrictOrderedRing 𝕜\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : Semifield 𝕜\ninst✝⁸ : LinearOrder 𝕜\ninst✝⁷ : IsStrictOrderedRing 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : Field 𝕜\ninst✝³ : LinearOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx y z : E\nc : 𝕜\nh✝ : (AffineMap.lineMap x y) c = z\n⊢ openSegment 𝕜 x y ⊆ insert z (openSegment 𝕜 x z ∪ openSegment 𝕜 z y)") - Line 3813
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.28885 is not an inductive datatype') - Line 3816
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.32384 is not an inductive datatype') - Line 3819
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.31750 is not an inductive datatype') - Line 3823
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.31759 is not an inductive datatype') - Line 3824
LeanError(message='Lean error:\nsimp made no progress') - Line 3826
LeanError(message='Lean error:\nsimp made no progress') - Line 3827
LeanError(message='Lean error:\n<input>:2:15: expected end of input') - Line 3828
LeanError(message='Lean error:\n<input>:2:15: expected end of input') - Line 3829
LeanError(message='Lean error:\nsimp made no progress') - Line 3838
LeanError(message='Lean error:\nsimp made no progress') - Line 3839
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 3840
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 3845
LeanError(message='Lean error:\ninternal exception #5') - Line 3861
LeanError(message='Lean error:\n<input>:2:30: expected rcasesPat') - Line 3862
LeanError(message='Lean error:\ninternal exception #5') - Line 3863
LeanError(message='Lean error:\nno goals to be solved') - Line 3870
LeanError(message='Lean error:\nno goals to be solved') - Line 3872
LeanError(message="Lean error:\n<input>:3:8: expected '⟩'") - Line 3874
LeanError(message='Lean error:\ninternal exception #5') - Line 3875
LeanError(message='Lean error:\ninternal exception #5') - Line 3876
LeanError(message='Lean error:\ninternal exception #5') - Line 3877
LeanError(message="Lean error:\n<input>:3:8: expected '⟩'") - Line 3878
LeanError(message='Lean error:\ninternal exception #5') - Line 3879
LeanError(message='Lean error:\ninternal exception #5') - Line 3880
LeanError(message='Lean error:\ninternal exception #5') - Line 3881
LeanError(message='Lean error:\nno goals to be solved') - Line 3882
LeanError(message='Lean error:\nno goals to be solved') - Line 3886
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 3890
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 3894
LeanError(message='Lean error:\n<input>:2:34: expected end of input') - Line 3896
LeanError(message='Lean error:\ninternal exception #5') - Line 3897
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nR : Type u_1\nP : Type u_4\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\ns : sorry\nx y p₁ : P\nh : sorry\n⊢ sorry ↔ sorry ∨ ∃ p₂, sorry ∧ SameRay R sorry sorry") - Line 3898
LeanError(message='Lean error:\ninternal exception #5') - Line 3899
LeanError(message='Lean error:\ninternal exception #5') - Line 3900
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nR : Type u_1\nP : Type u_4\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : IsStrictOrderedRing R\ninst✝² : Field R\ninst✝¹ : LinearOrder R\ninst✝ : IsStrictOrderedRing R\ns : sorry\nx y p₁ : P\nh : sorry\n⊢ sorry ↔ sorry ∨ ∃ p₂, sorry ∧ SameRay R sorry sorry") - Line 3902
LeanError(message='Lean error:\ninternal exception #5') - Line 3903
LeanError(message='Lean error:\ninternal exception #5') - Line 3904
LeanError(message='Lean error:\ninternal exception #5') - Line 3905
LeanError(message='Lean error:\nrcases tactic failed: hxy : sorry is not an inductive datatype') - Line 3906
LeanError(message='Lean error:\nrcases tactic failed: hxy : sorry is not an inductive datatype') - Line 3908
LeanError(message='Lean error:\nrcases tactic failed: hxy : sorry is not an inductive datatype') - Line 3916
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 3922
LeanError(message='Lean error:\ninternal exception #5') - Line 3923
LeanError(message='Lean error:\ninternal exception #5') - Line 3924
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 3929
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 3930
LeanError(message='Lean error:\nno goals to be solved') - Line 3931
LeanError(message='Lean error:\nno goals to be solved') - Line 3932
LeanError(message='Lean error:\nno goals to be solved') - Line 3936
LeanError(message='Lean error:\nno goals to be solved') - Line 3945
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3946
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3947
LeanError(message='Lean error:\ninternal exception #5') - Line 3948
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3949
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3950
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3951
LeanError(message='Lean error:\ninternal exception #5') - Line 3952
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3953
LeanError(message='Lean error:\napplication type mismatch\n  hs hy zero_le_one le_rfl (add_zero 1)\nargument\n  add_zero 1\nhas type\n  1 + 0 = 1 : Prop\nbut is expected to have type\n  1 + 0 = 1 : Prop') - Line 3970
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3702 is not an inductive datatype') - Line 3971
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3713 is not an inductive datatype') - Line 3972
LeanError(message='Lean error:\ninternal exception #5') - Line 3977
LeanError(message='Lean error:\nfailed to synthesize\n  AddCommMonoid E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3980
LeanError(message='Lean error:\nfailed to synthesize\n  AddCommMonoid E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3981
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a • (?b₁ + ?b₂)\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : Semiring 𝕜\ninst✝³ : PartialOrder 𝕜\ninst✝² : AddCommMonoid E\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 E\nx z : E\ns : Set E\nhs : StarConvex 𝕜 (z + x) s\ny : E\nhy : y ∈ (fun x => z + x) ⁻¹' s\na b : 𝕜\nha : 0 ≤ a\nhb : 0 ≤ b\nhab : a + b = 1\nh : a • (z + x) + b • (fun x => z + x) y ∈ s\n⊢ a • x + b • y ∈ (fun x => z + x) ⁻¹' s") - Line 3982
LeanError(message='Lean error:\napplication type mismatch\n  StarConvex.preimage_add_right hs\nargument\n  hs\nhas type\n  @StarConvex 𝕜 E inst✝⁴ inst✝³ inst✝² inst✝¹ (z + x) s : Prop\nbut is expected to have type\n  @StarConvex ?m.3165 ?m.3166 ?m.3167 ?m.3168 ?m.3169 SMulZeroClass.toSMul (?m.3172 + ?m.3171) ?m.3173 : Prop') - Line 3983
LeanError(message='Lean error:\napplication type mismatch\n  StarConvex.smul hs\nargument\n  hs\nhas type\n  @StarConvex 𝕜 E inst✝¹⁰ inst✝² inst✝¹ inst✝⁷ 0 s : Prop\nbut is expected to have type\n  @StarConvex 𝕜 ?m.1669 CommSemiring.toSemiring ?m.1671 ?m.1672 SMulZeroClass.toSMul ?m.1674 ?m.1675 : Prop') - Line 3986
LeanError(message='Lean error:\napplication type mismatch\n  StarConvex.smul hs\nargument\n  hs\nhas type\n  @StarConvex 𝕜 E inst✝¹⁰ inst✝² inst✝¹ inst✝⁷ x s : Prop\nbut is expected to have type\n  @StarConvex 𝕜 ?m.2850 CommSemiring.toSemiring ?m.2852 ?m.2853 SMulZeroClass.toSMul ?m.2855 ?m.2856 : Prop') - Line 3988
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3989
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁸ : Semiring 𝕜\ninst✝¹⁷ : PartialOrder 𝕜\ninst✝¹⁶ : AddCommMonoid E\ninst✝¹⁵ : SMul 𝕜 E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : AddCommGroup E\ninst✝¹² : Module 𝕜 E\ny : E\ninst✝¹¹ : CommSemiring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : AddCommMonoid E\ninst✝⁸ : Module 𝕜 E\nx : E\ninst✝⁷ : Ring 𝕜\ninst✝⁶ : PartialOrder 𝕜\ninst✝⁵ : AddRightMono 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : SMulWithZero 𝕜 E\ns : Set E\ninst✝² : AddRightMono 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nhs : StarConvex 𝕜 x s\nhy : x + y ∈ s\nt : 𝕜\nht₀ : 0 ≤ t\nht₁ : t ≤ 1\nh : sorry\n⊢ x + t • y ∈ s") - Line 3990
LeanError(message='Lean error:\napplication type mismatch\n  StarConvex.add_smul_mem hs\nargument\n  hs\nhas type\n  @StarConvex 𝕜 E inst✝¹⁸ inst✝⁶ inst✝⁴ inst✝¹⁵ 0 s : Prop\nbut is expected to have type\n  @StarConvex 𝕜 ?m.5646 Ring.toSemiring inst✝⁶ AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul ?m.5652 ?m.5654 : Prop') - Line 3991
LeanError(message='Lean error:\nno goals to be solved') - Line 3992
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  -?m.6119\n𝕜 : Type u_1\nE : Type u_2\ninst✝²⁰ : Semiring 𝕜\ninst✝¹⁹ : PartialOrder 𝕜\ninst✝¹⁸ : AddCommMonoid E\ninst✝¹⁷ : SMul 𝕜 E\ninst✝¹⁶ : Module 𝕜 E\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : CommSemiring 𝕜\ninst✝¹² : PartialOrder 𝕜\ninst✝¹¹ : AddCommMonoid E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : Ring 𝕜\ninst✝⁸ : PartialOrder 𝕜\ninst✝⁷ : AddRightMono 𝕜\ninst✝⁶ : AddCommMonoid E\ninst✝⁵ : SMulWithZero 𝕜 E\ninst✝⁴ : AddRightMono 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx : E\ns : Set E\nhs : StarConvex 𝕜 x s\n⊢ StarConvex 𝕜 (-x) (-s)") - Line 3995
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.10708 ?m.10709') - Line 3996
LeanError(message='Lean error:\ntype mismatch\n  (starConvex_iff_forall_pos sorry).mpr fun z hz a b ha hb hab => ?m.10775\nhas type\n  @StarConvex ?m.8013 ?m.8014 ?m.8015 ?m.8016 ?m.8017 SMulZeroClass.toSMul ?m.8019 ?m.8020 : Prop\nbut is expected to have type\n  @StarConvex 𝕜 E inst✝²⁵ inst✝¹³ inst✝¹¹ inst✝²² y (Set.Iic x)ᶜ : Prop') - Line 3997
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.11944 • ?A\n𝕜 : Type u_1\nE : Type u_2\ninst✝³⁰ : Semiring 𝕜\ninst✝²⁹ : PartialOrder 𝕜\ninst✝²⁸ : AddCommMonoid E\ninst✝²⁷ : SMul 𝕜 E\ninst✝²⁶ : Module 𝕜 E\ninst✝²⁵ : AddCommGroup E\ninst✝²⁴ : Module 𝕜 E\ninst✝²³ : CommSemiring 𝕜\ninst✝²² : PartialOrder 𝕜\ninst✝²¹ : AddCommMonoid E\ninst✝²⁰ : Module 𝕜 E\ninst✝¹⁹ : Ring 𝕜\ninst✝¹⁸ : PartialOrder 𝕜\ninst✝¹⁷ : AddRightMono 𝕜\ninst✝¹⁶ : AddCommMonoid E\ninst✝¹⁵ : SMulWithZero 𝕜 E\ninst✝¹⁴ : AddRightMono 𝕜\ninst✝¹³ : AddCommGroup E\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module 𝕜 E\ninst✝⁹ : AddCommGroup E\ninst✝⁸ : PartialOrder E\ninst✝⁷ : IsOrderedAddMonoid E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : OrderedSMul 𝕜 E\ninst✝⁴ : Field 𝕜\ninst✝³ : LinearOrder 𝕜\ninst✝² : IsStrictOrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx : E\ns : Set E\nhs : StarConvex 𝕜 0 s\nhx : x ∈ s\nt : 𝕜\nht : 1 ≤ t\n⊢ x ∈ t • s") - Line 4000
LeanError(message='Lean error:\nsimp made no progress') - Line 4002
LeanError(message='Lean error:\nno goals to be solved') - Line 4015
LeanError(message='Lean error:\nno goals to be solved') - Line 4017
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SMul ?m.3410 ?m.3411') - Line 4019
LeanError(message='Lean error:\nno goals to be solved') - Line 4030
LeanError(message='Lean error:\napplication type mismatch\n  StrictConvex.preimage_add_right hs\nargument\n  hs\nhas type\n  @StrictConvex 𝕜 E inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ s : Prop\nbut is expected to have type\n  @StrictConvex ?m.4068 E ?m.4070 ?m.4071 ?m.4072 AddCancelCommMonoid.toAddCommMonoid SMulZeroClass.toSMul\n    ?m.4076 : Prop') - Line 4031
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a • (?b₁ + ?b₂)\ncase intro.intro.intro.intro.intro.intro.intro.intro\n𝕜 : Type u_1\nE : Type u_3\ninst✝¹¹ : Semiring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : AddCommMonoid E\ninst✝⁷ : SMul 𝕜 E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : AddCancelCommMonoid E\ninst✝⁴ : ContinuousAdd E\ninst✝³ : Module 𝕜 E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : ContinuousAdd E\ns t : Set E\nhs : StrictConvex 𝕜 s\nht : StrictConvex 𝕜 t\nv : E\nhv : v ∈ s\nw : E\nhw : w ∈ t\nx : E\nhx : x ∈ s\ny : E\nhy : y ∈ t\nh : (fun x1 x2 => x1 + x2) v w ≠ (fun x1 x2 => x1 + x2) x y\na b : 𝕜\nha : 0 < a\nhb : 0 < b\nhab : a + b = 1\n⊢ a • (fun x1 x2 => x1 + x2) v w + b • (fun x1 x2 => x1 + x2) x y ∈ interior (s + t)") - Line 4032
LeanError(message='Lean error:\napplication type mismatch\n  StrictConvex.add_left hs\nargument\n  hs\nhas type\n  @StrictConvex 𝕜 E inst✝¹¹ inst✝¹⁰ inst✝⁹ inst✝⁸ inst✝⁷ s : Prop\nbut is expected to have type\n  @StrictConvex ?m.6535 E ?m.6537 ?m.6538 ?m.6539 AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul ?m.6543 : Prop') - Line 4034
LeanError(message='Lean error:\napplication type mismatch\n  smul_right_injective E hc\nargument\n  hc\nhas type\n  c ≠ sorry : Prop\nbut is expected to have type\n  ?m.34633 ≠ 0 : Prop') - Line 4038
LeanError(message='Lean error:\napplication type mismatch\n  DenselyOrdered.dense sorry sorry zero_lt_one\nargument\n  zero_lt_one\nhas type\n  0 < 1 : Prop\nbut is expected to have type\n  sorry < sorry : Prop') - Line 4039
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\n𝕜 : Type u_1\nE : Type u_3\ninst✝²⁴ : Semiring 𝕜\ninst✝²³ : PartialOrder 𝕜\ninst✝²² : TopologicalSpace E\ninst✝²¹ : AddCommMonoid E\ninst✝²⁰ : SMul 𝕜 E\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : AddCancelCommMonoid E\ninst✝¹⁷ : ContinuousAdd E\ninst✝¹⁶ : Module 𝕜 E\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : ContinuousAdd E\ninst✝¹² : CommSemiring 𝕜\ninst✝¹¹ : PartialOrder 𝕜\ninst✝¹⁰ : TopologicalSpace E\ninst✝⁹ : AddCommGroup E\ninst✝⁸ : Module 𝕜 E\ninst✝⁷ : NoZeroSMulDivisors 𝕜 E\ninst✝⁶ : ContinuousConstSMul 𝕜 E\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : PartialOrder 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ns : Set E\nx y : E\ninst✝ : AddRightStrictMono 𝕜\nhs : StrictConvex 𝕜 s\nhx : x ∈ s\nhxy : x + y ∈ s\nhy : y ≠ 0\nt : 𝕜\nht₀ : 0 < t\nht₁ : t < 1\nh : sorry\n⊢ x + t • y ∈ interior s") - Line 4040
LeanError(message='Lean error:\napplication type mismatch\n  StrictConvex.add_smul_mem hs\nargument\n  hs\nhas type\n  @StrictConvex 𝕜 E inst✝²⁴ inst✝⁴ inst✝³ inst✝²¹ inst✝²⁰ s : Prop\nbut is expected to have type\n  @StrictConvex 𝕜 E Ring.toSemiring inst✝⁴ ?m.21381 AddCommGroup.toAddCommMonoid SMulZeroClass.toSMul s : Prop') - Line 4041
LeanError(message='Lean error:\nno goals to be solved') - Line 4042
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.30854 • ?A\n𝕜 : Type u_1\nE : Type u_3\ninst✝³⁰ : Semiring 𝕜\ninst✝²⁹ : PartialOrder 𝕜\ninst✝²⁸ : TopologicalSpace E\ninst✝²⁷ : AddCommMonoid E\ninst✝²⁶ : SMul 𝕜 E\ninst✝²⁵ : Module 𝕜 E\ninst✝²⁴ : AddCancelCommMonoid E\ninst✝²³ : ContinuousAdd E\ninst✝²² : Module 𝕜 E\ninst✝²¹ : AddCommGroup E\ninst✝²⁰ : Module 𝕜 E\ninst✝¹⁹ : ContinuousAdd E\ninst✝¹⁸ : CommSemiring 𝕜\ninst✝¹⁷ : PartialOrder 𝕜\ninst✝¹⁶ : TopologicalSpace E\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : NoZeroSMulDivisors 𝕜 E\ninst✝¹² : ContinuousConstSMul 𝕜 E\ninst✝¹¹ : Ring 𝕜\ninst✝¹⁰ : PartialOrder 𝕜\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : Field 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\nhs : StrictConvex 𝕜 s\nzero_mem : 0 ∈ s\nhx : x ∈ s\nhx₀ : x ≠ 0\nt : 𝕜\nht : 1 < t\n⊢ x ∈ t • interior s") - Line 4048
LeanError(message='Lean error:\ninternal exception #5') - Line 4051
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 4052
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4353 is not an inductive datatype') - Line 4053
LeanError(message='Lean error:\ninternal exception #5') - Line 4055
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?m.3848 ?m.3849 + dist ?m.3849 ?m.3850 = dist ?m.3848 ?m.3850\nV : Type u_1\nP : Type u_2\ninst✝⁶ : NormedAddCommGroup V\ninst✝⁵ : NormedSpace ℝ V\ninst✝⁴ : StrictConvexSpace ℝ V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\ninst✝¹ : MetricSpace P\ninst✝ : NormedAddTorsor V P\na b c : P\n⊢ dist a b + dist b c = dist a c ↔ Wbtw ℝ a b c") - Line 4056
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  LinearMap.CompatibleSMul ?m.5889 ?m.5889 ℝ ℝ') - Line 4061
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  LinearMap.CompatibleSMul ?m.5815 ?m.5815 ℝ ℝ') - Line 4062
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ℝ ?m.3110') - Line 4063
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ℝ ?m.4592') - Line 4065
LeanError(message='Lean error:\ninternal exception #5') - Line 4078
LeanError(message='Lean error:\ninternal exception #5') - Line 4079
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  segment ?𝕜 ?x ?y\nE : Type u_3\nx y : E\n⊢ sorry = sorry") - Line 4086
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁹ : Ring 𝕜\ninst✝⁸ : LinearOrder 𝕜\ninst✝⁷ : IsStrictOrderedRing 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : DenselyOrdered 𝕜\ninst✝¹ : Field 𝕜\ninst✝ : LinearOrder 𝕜\ns : Set E\nhs : sorry\na b : 𝕜\nha : 0 ≤ a\nhb : 0 < b\nhab : a + b = 1\n⊢ a • sorry + b • sorry ⊆ sorry") - Line 4089
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁹ : Ring 𝕜\ninst✝⁸ : LinearOrder 𝕜\ninst✝⁷ : IsStrictOrderedRing 𝕜\ninst✝⁶ : DenselyOrdered 𝕜\ninst✝⁵ : Ring 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : DenselyOrdered 𝕜\ninst✝¹ : Field 𝕜\ninst✝ : LinearOrder 𝕜\ns : Set E\nhs : sorry\na b : 𝕜\nha : 0 ≤ a\nhb : 0 < b\nhab : a + b = 1\n⊢ sorry ⊆ sorry") - Line 4090
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry a✝¹ is not an inductive datatype') - Line 4095
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry a✝¹ is not an inductive datatype') - Line 4097
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SMul ?m.27027 ?m.27028') - Line 4105
LeanError(message='Lean error:\nno goals to be solved') - Line 4106
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  TopologicalSpace ?m.14582') - Line 4108
LeanError(message='Lean error:\ninternal exception #5') - Line 4118
LeanError(message='Lean error:\nno goals to be solved') - Line 4120
LeanError(message='Lean error:\ninternal exception #5') - Line 4123
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4128
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4129
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4198 is not an inductive datatype') - Line 4131
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5263 is not an inductive datatype') - Line 4132
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4137
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4140
LeanError(message="Lean error:\ntype mismatch\n  IsClosed.csInf_mem (IsClosed.inter isClosed_Ici sorry) (Exists.intro 1 ?m.40169) ?m.46036\nhas type\n  sInf (Set.Ici ?m.34051 ∩ ⇑(AffineMap.lineMap ?m.34094 ?m.34095) ⁻¹' s) ∈\n    Set.Ici ?m.34051 ∩ ⇑(AffineMap.lineMap ?m.34094 ?m.34095) ⁻¹' s : Prop\nbut is expected to have type\n  0 ≤ δ ∧ sorry ∈ s : Prop") - Line 4141
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.19279 is not an inductive datatype') - Line 4142
LeanError(message='Lean error:\n<input>:18:8: expected term') - Line 4143
LeanError(message='Lean error:\ninternal exception #5') - Line 4171
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  Type (?u.6446 + 1)\n𝕜 : Type u_1\nE : Type u_2\ninst✝²⁵ : Semiring 𝕜\ninst✝²⁴ : PartialOrder 𝕜\ninst✝²³ : Semiring 𝕜\ninst✝²² : PartialOrder 𝕜\ninst✝²¹ : IsOrderedRing 𝕜\ninst✝²⁰ : AddCommMonoid E\ninst✝¹⁹ : SMul 𝕜 E\ninst✝¹⁸ inst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : Field 𝕜\ninst✝¹⁵ : LinearOrder 𝕜\ninst✝¹⁴ : IsStrictOrderedRing 𝕜\ninst✝¹³ : AddCommMonoid E\ninst✝¹² : MulAction 𝕜 E\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : PartialOrder E\ninst✝⁹ : Module 𝕜 E\ninst✝⁸ : Semiring 𝕜\ninst✝⁷ : PartialOrder 𝕜\ninst✝⁶ : IsOrderedRing 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : SMul 𝕜 E\ninst✝³ : AddCommGroup E\ninst✝² : SMul 𝕜 E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ sorry.Pointed") - Line 4182
LeanError(message='Lean error:\napplication type mismatch\n  zorn_le_nonempty₀ S hSc\nargument\n  hSc\nhas type\n  ∀ c ⊆ S, IsChain (fun x1 x2 => x1 ≤ x2) c → ∀ y ∈ c, ∃ ub ∈ S, ∀ z ∈ c, sorry : Prop\nbut is expected to have type\n  ∀ c ⊆ S, IsChain (fun x1 x2 => x1 ≤ x2) c → ∀ y ∈ c, ∃ ub ∈ S, ∀ z ∈ c, z ≤ ub : Prop') - Line 4215
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.10756 is not an inductive datatype') - Line 4216
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 4217
LeanError(message='Lean error:\nfailed to synthesize\n  TopologicalSpace H\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4230
LeanError(message='Lean error:\ninternal exception #5') - Line 4231
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 4233
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4291
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\nthis : sorry\n⊢ StrictConcaveOn ℝ ≥ sorry") - Line 4293
LeanError(message="Lean error:\ntype mismatch\n  Subtype.coe_ne_coe.mp ?m.5419\nhas type\n  ?m.5370 ≠ ?m.5371 : Prop\nbut is expected to have type\n  x' ≠ y' : Prop") - Line 4294
LeanError(message='Lean error:\ntype mismatch\n  StrictConcaveOn.concaveOn (NNReal.strictConcaveOn_rpow hp₀ hp₁)\nhas type\n  ConcaveOn NNReal Set.univ fun x => x ^ p : Prop\nbut is expected to have type\n  ConcaveOn ℝ (Set.Ici 0) fun x => x ^ p : Prop') - Line 4295
LeanError(message='Lean error:\ntype mismatch\n  NNReal.strictConcaveOn_rpow sorry sorry\nhas type\n  StrictConcaveOn NNReal Set.univ fun x => x ^ ?m.411 : Prop\nbut is expected to have type\n  StrictConcaveOn ℝ (Set.Ici 0) fun x => (fun x => x ^ (1 / 2)) x : Prop') - Line 4296
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4297
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4299
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4300
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4302
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4304
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4306
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∏ x ∈ ?m.10916, if ?m.10917 x then ?f x else ?g x\nα : Type u_1\nβ : Type u_2\ninst✝³ : CommRing β\ninst✝² : LinearOrder β\ninst✝¹ : IsStrictOrderedRing β\nf : α → β\ninst✝ : DecidablePred fun x => f x ≤ 0\ns : Finset α\nh0 : Even {x ∈ s | f x ≤ 0}.card\n⊢ (∏ x ∈ s, if f x ≤ 0 then -1 else 1) * ∏ x ∈ s, f x = ∏ x ∈ s, f x") - Line 4310
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4311
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4315
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4317
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4318
LeanError(message='Lean error:\ninternal exception #5') - Line 4354
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 4365
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4366
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4367
LeanError(message='Lean error:\nsimp made no progress') - Line 4368
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4370
LeanError(message='Lean error:\nno goals to be solved') - Line 4373
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4375
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.343693'") - Line 4393
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4394
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4400
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4405
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 4406
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4408
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 4412
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 4414
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4416
LeanError(message="Lean error:\n<input>:2:14: expected '⟩'") - Line 4417
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4418
LeanError(message='Lean error:\ninternal exception #5') - Line 4420
LeanError(message='Lean error:\ninternal exception #5') - Line 4423
LeanError(message='Lean error:\nsimp made no progress') - Line 4424
LeanError(message='Lean error:\nsimp made no progress') - Line 4425
LeanError(message='Lean error:\nno goals to be solved') - Line 4427
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace ℂ E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4428
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4430
LeanError(message='Lean error:\ninternal exception #5') - Line 4431
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4433
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 4434
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4435
LeanError(message='Lean error:\nsimp made no progress') - Line 4437
LeanError(message='Lean error:\ntype mismatch\n  HasDerivAt.comp_ofReal ?m.11617\nhas type\n  HasDerivAt (fun y => Complex.exp (2 * sorry * Complex.I * ↑n * ↑y / ↑T)) ?m.11623 ?m.11624 : Prop\nbut is expected to have type\n  HasDerivAt (fun y => Complex.exp (2 * ↑Real.pi * Complex.I * ↑n * ↑y / ↑T))\n    (2 * ↑Real.pi * Complex.I * ↑n / ↑T * Complex.exp (2 * ↑Real.pi * Complex.I * ↑n * ↑x / ↑T)) x : Prop') - Line 4439
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑(b - a) / (-2 * sorry * Complex.I * ↑n)\na b : ℝ\nhab : a < b\nf f' : ℝ → ℂ\nn : ℤ\nhn : n ≠ 0\nhf : ContinuousOn f (Set.uIcc a b)\nhff' : ∀ x ∈ Set.Ioo (min a b) (max a b), HasDerivWithinAt f (f' x) (Set.Ioi x) x\nhf' : IntervalIntegrable f' MeasureTheory.volume a b\nhT : Fact (0 < b - a)\nthis : ∀ (u v w : ℂ), u * (↑(b - a) / v * w) = ↑(b - a) / v * (u * w)\n⊢ 1 / ↑(b - a) *\n      (f b * (↑(b - a) / (-2 * ↑Real.pi * Complex.I * ↑n) * (fourier (-n)) ↑b) -\n          f a * (↑(b - a) / (-2 * ↑Real.pi * Complex.I * ↑n) * (fourier (-n)) ↑a) -\n        ∫ (x : ℝ) in a..b, ↑(b - a) / (-2 * ↑Real.pi * Complex.I * ↑n) * (f' x * (fourier (-n)) ↑x)) =\n    1 / (-2 * ↑Real.pi * Complex.I * ↑n) *\n      ((f b - f a) * (fourier (-n)) ↑a - ↑(b - a) * (1 / ↑(b - a) * ∫ (x : ℝ) in a..b, f' x * (fourier (-n)) ↑x))") - Line 4442
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Filter.Tendsto (fun n => ∫ (a : ?m.21199), ?m.21185 n a ∂?m.21202) ?m.21183\n    (nhds (∫ (a : ?m.21199), ?m.21186 a ∂?m.21202))\nwith\n  Filter.Tendsto (fun c => ∫ (v : V), Complex.exp (-↑c⁻¹ * ↑‖v‖ ^ 2) • f v) Filter.atTop (nhds (∫ (v : V), f v))\nV : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace ℝ V\nε✝ : Type u_3\nf : V → ε✝\nhf : MeasureTheory.Integrable f sorry\n⊢ Filter.Tendsto (fun c => ∫ (v : V), Complex.exp (-↑c⁻¹ * ↑‖v‖ ^ 2) • f v) Filter.atTop (nhds (∫ (v : V), f v))") - Line 4445
LeanError(message='Lean error:\n<input>:1:81: expected token') - Line 4446
LeanError(message='Lean error:\ninternal exception #5') - Line 4447
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X✝ → Y✝') - Line 4449
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.fourierIntegral (Real.fourierIntegralInv ?f)\nV : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace ℝ V\nε✝ : Type u_3\nf : V → ε✝\nhf : MeasureTheory.Integrable f sorry\nh'f : MeasureTheory.Integrable (Real.fourierIntegral f) sorry\nv : V\nhv : ContinuousAt f v\n⊢ Real.fourierIntegral (Real.fourierIntegralInv f) v = f v") - Line 4450
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X✝ → Y✝') - Line 4451
LeanError(message='Lean error:\n<input>:1:18: expected token') - Line 4452
LeanError(message='Lean error:\nsimp made no progress') - Line 4453
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SeminormedAddGroup ?m.7637') - Line 4454
LeanError(message='Lean error:\n<input>:1:27: expected end of input') - Line 4455
LeanError(message='Lean error:\ninternal exception #5') - Line 4458
LeanError(message='Lean error:\ntype mismatch\n  toEuclidean\nhas type\n  ?m.9071 ≃L[ℝ] EuclideanSpace ℝ (Fin (Module.finrank ℝ ?m.9071)) : Type ?u.9070\nbut is expected to have type\n  sorry : Type (max 0 u_2)') - Line 4459
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 4461
LeanError(message='Lean error:\nsimp made no progress') - Line 4462
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4463
LeanError(message='Lean error:\nsimp made no progress') - Line 4466
LeanError(message='Lean error:\nsimp made no progress') - Line 4471
LeanError(message='Lean error:\nsimp made no progress') - Line 4472
LeanError(message='Lean error:\nsimp made no progress') - Line 4473
LeanError(message='Lean error:\nno goals to be solved') - Line 4478
LeanError(message='Lean error:\n<input>:1:40: expected end of input') - Line 4479
LeanError(message='Lean error:\n<input>:1:39: expected end of input') - Line 4480
LeanError(message='Lean error:\nsimp made no progress') - Line 4483
LeanError(message="Lean error:\nunknown free variable '_fvar.40'") - Line 4484
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 4485
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  ‖sorry‖ = 1\nx✝ : Sort u_2\nmFourier : x✝\n⊢ ‖sorry‖ = 1") - Line 4486
LeanError(message='Lean error:\nsimp made no progress') - Line 4487
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Subalgebra.toSubmodule (Algebra.adjoin ?R ?s) = Submodule.span ?R ?s\nwith\n  sorry = Submodule.span ℂ (Set.range mFourier)\nx✝ : Sort u_2\nmFourierSubalgebra : x✝\nι✝ : Sort u_3\nM✝ : Type u_4\nmFourier : ι✝ → M✝\n⊢ sorry = Submodule.span ℂ (Set.range mFourier)") - Line 4488
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4489
LeanError(message='Lean error:\ninternal exception #5') - Line 4491
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.26387 : Sort ?u.26386\nbut is expected to have type\n  (Submodule.span ℂ (Set.range sorry)).topologicalClosure = ⊤ : Prop') - Line 4493
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Orthonormal ?m.1231 ?m.1238\nx✝ : Sort u_2\nmFourierLp : x✝\n⊢ Orthonormal ℂ sorry") - Line 4494
LeanError(message="Lean error:\nunknown free variable '_fvar.1019'") - Line 4502
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4504
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  BoundedContinuousFunction X✝ ℂ') - Line 4505
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4506
LeanError(message='Lean error:\nsimp made no progress') - Line 4509
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  f ∈ sorry ↔ ?m.72815\nis not definitionally equal to target\n  f ∈ BoundedContinuousFunction.charPoly he hL ↔ ∃ w, sorry") - Line 4511
LeanError(message='Lean error:\nsimp made no progress') - Line 4512
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.24069 e μ L f r') - Line 4514
LeanError(message='Lean error:\nno goals to be solved') - Line 4515
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (w : ?m.26975 e μ L f v₀) → ?m.26976 e μ L f v₀ w') - Line 4516
LeanError(message='Lean error:\n<input>:1:53: expected end of input') - Line 4517
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.25674 he hL hf hg') - Line 4518
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 4520
LeanError(message='Lean error:\nsimp made no progress') - Line 4522
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nF : Type u_6\nV : Type u_7\nW : Type u_8\nX✝ : Type u_9\nY✝ : Type u_10\ne : X✝ → Y✝\ninst✝ : MeasurableSpace V\nμ : MeasureTheory.Measure V\nx✝ : Sort u_11\nfourierIntegral : x✝\nf : V → sorry\na : F\nw : W\nhe : Continuous e\nhf : sorry\n⊢ sorry = sorry") - Line 4523
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nι : Type u_4\nV : Type u_7\nW : Type u_8\ninst✝¹ : Fintype ι\nM : ι → Type u_9\nX✝ : Type u_10\nY✝ : Type u_11\ne : X✝ → Y✝\ninst✝ : MeasurableSpace V\nμ : MeasureTheory.Measure V\nx✝ : Sort u_12\nfourierIntegral : x✝\nf : V → sorry\nm : (i : ι) → M i\nw : W\nhe : Continuous e\nhf : sorry\n⊢ sorry = sorry") - Line 4524
LeanError(message='Lean error:\nsimp made no progress') - Line 4529
LeanError(message='Lean error:\nsimp made no progress') - Line 4534
LeanError(message='Lean error:\nsimp made no progress') - Line 4536
LeanError(message='Lean error:\nsimp made no progress') - Line 4538
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  V → E') - Line 4539
LeanError(message="Lean error:\ninvalid 'rhs' conv tactic, failed to resolve\n  ?m.33811\n=?=\n  Real.fourierIntegral (Real.fourierIntegralInv f) = ?m.33824") - Line 4540
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  ∫ (v : ℝ), Real.fourierChar (-(w * v)) • f v\nE : Type u_11\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℂ E\nx✝ : Sort u_17\nfourierIntegral : x✝\nf : ℝ → E\nw : ℝ\n⊢ sorry = ∫ (v : ℝ), Real.fourierChar (-(w * v)) • f v") - Line 4542
LeanError(message='Lean error:\nsimp made no progress') - Line 4543
LeanError(message='Lean error:\n<input>:1:18: expected token') - Line 4546
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.comp w (HasDerivAt.hasFDerivAt (Real.hasDerivAt_fourierChar (-sorry)))\nargument\n  HasDerivAt.hasFDerivAt (Real.hasDerivAt_fourierChar (-sorry))\nhas type\n  HasFDerivAt (fun x => ↑(Real.fourierChar x))\n    (ContinuousLinearMap.smulRight 1 (2 * ↑Real.pi * Complex.I * ↑(Real.fourierChar (-sorry)))) (-sorry) : Prop\nbut is expected to have type\n  HasFDerivAt ?m.28765 ?m.28766 (?m.28763 w) : Prop') - Line 4549
LeanError(message='Lean error:\nsimp made no progress') - Line 4550
LeanError(message='Lean error:\nsimp made no progress') - Line 4553
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.smul_const (HasFDerivAt.comp w ?m.39425 sorry)\nargument\n  HasFDerivAt.comp w ?m.39425 sorry\nhas type\n  HasFDerivAt (?m.39104 ∘ ?m.39102) (ContinuousLinearMap.comp ?m.39105 ?m.39103) w : Prop\nbut is expected to have type\n  HasFDerivAt ?m.39952 ?m.39953 ?m.39946 : Prop') - Line 4555
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nE : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℂ E\nV : Type u_4\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace ℝ V\nx✝ : Sort u_6\nfourierSMulRight : x✝\nL : sorry\nf : V → E\nv : V\n⊢ ‖sorry‖ = 2 * Real.pi * ‖sorry‖ * ‖f v‖") - Line 4556
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 4557
LeanError(message='Lean error:\n<input>:1:32: expected token') - Line 4559
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.26921 hf hf' → ?m.26921 hf hf' →L[ℝ] ?m.26924 hf hf'") - Line 4560
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.75087 hf h'f hf'") - Line 4562
LeanError(message="Lean error:\nunknown free variable '_fvar.1703'") - Line 4564
LeanError(message="Lean error:\nunknown free variable '_fvar.1703'") - Line 4565
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖?m.4569‖ ≤ ?m.4570\nwith\n  ‖sorry‖ ≤ (2 * Real.pi * ‖L‖) ^ n * ‖v‖ ^ n * ‖f v‖\nE : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℂ E\nV : Type u_4\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace ℝ V\nx✝ : Sort u_6\nfourierPowSMulRight : x✝\nE✝ : Type u_7\nL : E✝\nf : V → E\nv : V\nn : ℕ\n⊢ ‖sorry‖ ≤ (2 * Real.pi * ‖L‖) ^ n * ‖v‖ ^ n * ‖f v‖") - Line 4566
LeanError(message='Lean error:\n<input>:1:92: unterminated comment') - Line 4567
LeanError(message='Lean error:\nsimp made no progress') - Line 4568
LeanError(message="Lean error:\napplication type mismatch\n  MeasureTheory.Integrable.mono' (MeasureTheory.Integrable.const_mul sorry ((2 * sorry * ‖sorry‖) ^ n))\n    (MeasureTheory.AEStronglyMeasurable.fourierPowSMulRight sorry sorry n)\nargument\n  MeasureTheory.AEStronglyMeasurable.fourierPowSMulRight sorry sorry n\nhas type\n  @MeasureTheory.AEStronglyMeasurable ?m.79204 (ContinuousMultilinearMap ℝ (fun i => ?m.79205) ?m.79201)\n    ContinuousMultilinearMap.instTopologicalSpace ?m.79212 ?m.79212\n    (fun v => VectorFourier.fourierPowSMulRight sorry ?m.79211 v n) ?m.79214 : Prop\nbut is expected to have type\n  @MeasureTheory.AEStronglyMeasurable ?m.78938 ?m.78939 UniformSpace.toTopologicalSpace ?m.78940 ?m.78940 ?m.78943\n    ?m.78941 : Prop") - Line 4569
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV : Type u_4\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : NormedSpace ℝ V\nf : V → ?m.14238\ninst✝² : MeasurableSpace V\ninst✝¹ : BorelSpace V\nμ : MeasureTheory.Measure V\ninst✝ : SecondCountableTopology V\nN : WithTop ℕ∞\nhf : ∀ (n : ℕ), ↑n ≤ N → MeasureTheory.Integrable (fun v => ‖v‖ ^ n * ‖f v‖) μ\nh'f : MeasureTheory.AEStronglyMeasurable f μ\n⊢ HasFTaylorSeriesUpTo N sorry fun w n => sorry") - Line 4570
LeanError(message="Lean error:\ntype mismatch\n  if h'f : MeasureTheory.Integrable sorry μ then ?pos✝ else ?neg✝\nhas type\n  ?m.13062 : Sort ?u.13061\nbut is expected to have type\n  ContDiff ℝ ↑N sorry : Prop") - Line 4572
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.15008 hf h'f hn → ContinuousMultilinearMap ℝ (fun i => ?m.15008 hf h'f hn) (?m.15010 hf h'f hn)") - Line 4573
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4574
LeanError(message='Lean error:\ninternal exception #5') - Line 4575
LeanError(message='Lean error:\ninternal exception #5') - Line 4576
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.113264 ≤ ?m.113263 * ?m.113264\nwith\n  |sorry| ^ n * ‖iteratedFDeriv ℝ k sorry w‖ ≤ (2 * Real.pi) ^ n * (|sorry| ^ n * ‖sorry‖)\nV : Type u_4\nW : Type u_5\ninst✝⁶ : NormedAddCommGroup V\ninst✝⁵ : NormedSpace ℝ V\nf : V → ?m.13573\ninst✝⁴ : MeasurableSpace V\ninst✝³ : BorelSpace V\ninst✝² : SecondCountableTopology V\nE✝ : Type u_6\nL : E✝\ninst✝¹ : FiniteDimensional ℝ V\nμ : MeasureTheory.Measure V\ninst✝ : μ.IsAddHaarMeasure\nK N : ℕ∞\nhf : ContDiff ℝ (↑N) f\nh'f : ∀ (k n : ℕ), ↑k ≤ K → ↑n ≤ N → MeasureTheory.Integrable (fun v => ‖v‖ ^ k * ‖iteratedFDeriv ℝ n f v‖) μ\nk n : ℕ\nhk : ↑k ≤ K\nhn : ↑n ≤ N\nv : V\nw : W\n⊢ |sorry| ^ n * ‖iteratedFDeriv ℝ k sorry w‖ ≤ (2 * Real.pi) ^ n * (|sorry| ^ n * ‖sorry‖)") - Line 4577
LeanError(message='Lean error:\ninternal exception #5') - Line 4581
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  innerSL ℝ\nV✝¹ : Type u_1\nW✝ : Type u_2\ninst✝¹¹ : NormedAddCommGroup V✝¹\ninst✝¹⁰ : NormedSpace ℝ V✝¹\nE : Type u_3\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace ℂ E\nV✝ : Type u_4\nW : Type u_5\ninst✝⁷ : NormedAddCommGroup V✝\ninst✝⁶ : NormedSpace ℝ V✝\nf : ?m.41384 → ?m.5856\ninst✝⁵ : MeasurableSpace V✝\ninst✝⁴ : BorelSpace V✝\nμ : MeasureTheory.Measure V✝\ninst✝³ : SecondCountableTopology V✝\nV : Type u_6\ninst✝² : NormedAddCommGroup V\ninst✝¹ : InnerProductSpace ℝ V\ninst✝ : FiniteDimensional ℝ V\nN : ℕ∞\nhf : ContDiff ℝ (↑N) f\nn : ℕ\n⊢ MeasureTheory.Measure ?m.41384") - Line 4584
LeanError(message='Lean error:\napplication type mismatch\n  iteratedFDeriv ℝ p.2 f v\nargument\n  v\nhas type\n  V : Type u_6\nbut is expected to have type\n  ?m.25460 : Type ?u.24959') - Line 4585
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 4586
LeanError(message='Lean error:\ninternal exception #5') - Line 4588
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 4589
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry = ?m.19195\nis not definitionally equal to target\n  Real.fourierIntegral (iteratedDeriv n f) x = (2 * ↑Real.pi * Complex.I * ↑x) ^ n • Real.fourierIntegral f x") - Line 4590
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4592
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7252 is not an inductive datatype') - Line 4593
LeanError(message='Lean error:\ninternal exception #5') - Line 4594
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4595
LeanError(message='Lean error:\ninternal exception #5') - Line 4600
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4603
LeanError(message='Lean error:\ninternal exception #5') - Line 4604
LeanError(message='Lean error:\ninternal exception #5') - Line 4605
LeanError(message='Lean error:\nsimp made no progress') - Line 4607
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_1\ninst✝¹ : AddCommGroup α\ninst✝ : Finite α\nx✝ : Sort u_2\ncomplexBasis : x✝\n⊢ sorry = DFunLike.coe") - Line 4609
LeanError(message='Lean error:\ninternal exception #5') - Line 4610
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4611
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.5495\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nα : Type u_1\ninst✝¹ : AddCommGroup α\ninst✝ : Finite α\ndoubleDualEmb : α → AddChar (AddChar α ℂ) ℂ\nx✝ : ?m.5495\n⊢ Function.Bijective doubleDualEmb") - Line 4614
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4620
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4622
LeanError(message='Lean error:\n<input>:1:85: unterminated comment') - Line 4624
LeanError(message='Lean error:\n<input>:1:93: unterminated comment') - Line 4629
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑?m.11946 ^ ↑p\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : NormedSpace ℝ F\nE : Type u_4\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : MeasurableSpace E\ninst✝ : BorelSpace E\nμ : MeasureTheory.Measure E\nu : E → F\nhu : ContDiff ℝ 1 u\nh2u : HasCompactSupport u\np : NNReal\nhp : (↑(Module.finrank ℝ E)).HolderConjugate p\nh0p : 0 < ↑p\n⊢ MeasureTheory.eLpNorm u (↑p) μ ^ ↑p ≤ sorry ^ ↑p * (∫⁻ (x : E), ‖fderiv ℝ u x‖ₑ ∂μ) ^ ↑p") - Line 4630
LeanError(message='Lean error:\n<input>:1:79: unterminated comment') - Line 4631
LeanError(message='Lean error:\n<input>:1:88: unterminated comment') - Line 4632
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4633
LeanError(message='Lean error:\nno goals to be solved') - Line 4634
LeanError(message='Lean error:\ninternal exception #4') - Line 4635
LeanError(message="Lean error:\n<input>:2:15: expected '⟩'") - Line 4636
LeanError(message='Lean error:\ninternal exception #5') - Line 4641
LeanError(message='Lean error:\ninternal exception #5') - Line 4643
LeanError(message='Lean error:\ninternal exception #5') - Line 4645
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4655
LeanError(message='Lean error:\n<input>:1:56: expected end of input') - Line 4657
LeanError(message='Lean error:\ninternal exception #5') - Line 4661
LeanError(message='Lean error:\ninternal exception #5') - Line 4662
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4665
LeanError(message="Lean error:\nunknown identifier '_root_.inner_'") - Line 4669
LeanError(message="Lean error:\nunknown free variable '_fvar.656'") - Line 4670
LeanError(message="Lean error:\nunknown free variable '_fvar.656'") - Line 4671
LeanError(message='Lean error:\ninternal exception #5') - Line 4680
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_3\ninnerProp' : x✝\nr : ℚ\n⊢ sorry") - Line 4681
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_3\ninnerProp' : x✝\nr : ℝ\n⊢ sorry") - Line 4682
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4683
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_1\ninst✝ : RCLike 𝕜\nx✝ : Sort u_3\ninnerProp' : x✝\nr : 𝕜\n⊢ sorry") - Line 4684
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4686
LeanError(message='Lean error:\nsimp made no progress') - Line 4687
LeanError(message='Lean error:\ninternal exception #5') - Line 4689
LeanError(message='Lean error:\nno goals to be solved') - Line 4690
LeanError(message='Lean error:\ninternal exception #5') - Line 4692
LeanError(message='Lean error:\nsimp made no progress') - Line 4695
LeanError(message='Lean error:\nsimp made no progress') - Line 4698
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4699
LeanError(message='Lean error:\nsimp made no progress') - Line 4700
LeanError(message='Lean error:\n<input>:1:42: expected token') - Line 4703
LeanError(message='Lean error:\n<input>:1:42: expected token') - Line 4705
LeanError(message='Lean error:\ntype mismatch, term\n  congr_arg abs sorry\nafter simplification has type\n  |?m.4835| = |?m.4836| : Prop\nbut is expected to have type\n  |o.volumeForm ⇑v| = 1 : Prop') - Line 4706
LeanError(message='Lean error:\ninternal exception #5') - Line 4707
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4708
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4710
LeanError(message='Lean error:\ninternal exception #5') - Line 4711
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] F') - Line 4717
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  PartialOrder ?m.6076') - Line 4718
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  G →L[𝕜] E') - Line 4722
LeanError(message='Lean error:\ninternal exception #5') - Line 4728
LeanError(message='Lean error:\ninternal exception #5') - Line 4729
LeanError(message='Lean error:\ninternal exception #5') - Line 4730
LeanError(message='Lean error:\n<input>:2:8: expected token') - Line 4733
LeanError(message='Lean error:\nsimp made no progress') - Line 4734
LeanError(message='Lean error:\ninternal exception #5') - Line 4736
LeanError(message='Lean error:\nsimp made no progress') - Line 4737
LeanError(message='Lean error:\nsimp made no progress') - Line 4738
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.38263\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\ninst✝² inst✝¹ : CompleteSpace E\nT : E →L[𝕜] E\nhT : IsSelfAdjoint T\nU : Submodule 𝕜 E\ninst✝ : CompleteSpace ↥U\n⊢ IsSelfAdjoint ((U.subtypeL.comp U.orthogonalProjection).comp (T.comp (U.subtypeL.comp U.orthogonalProjection)))") - Line 4742
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →ₗ[𝕜] F') - Line 4749
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  G →ₗ[𝕜] E') - Line 4750
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  IsSelfAdjoint ?m.12821\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : InnerProductSpace 𝕜 E\ninst✝³ inst✝² inst✝¹ : CompleteSpace E\ninst✝ : FiniteDimensional 𝕜 E\nx✝ : Sort u_5\nIsSymmetric : x✝\nA : E →ₗ[𝕜] E\n⊢ sorry ↔ IsSelfAdjoint A") - Line 4757
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝¹¹ : RCLike 𝕜\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : InnerProductSpace 𝕜 E\ninst✝⁷ : InnerProductSpace 𝕜 F\ninst✝⁶ : CompleteSpace E\ninst✝⁵ : CompleteSpace F\ninst✝⁴ : CompleteSpace E\ninst✝³ : CompleteSpace F\ninst✝² : CompleteSpace E\ninst✝¹ : FiniteDimensional 𝕜 E\ninst✝ : FiniteDimensional 𝕜 F\nx✝ : Sort u_5\nIsAdjointPair : x✝\nA : E →ₗ[𝕜] F\n⊢ sorry") - Line 4758
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : InnerProductSpace 𝕜 E\ninst✝³ inst✝² inst✝¹ : CompleteSpace E\ninst✝ : FiniteDimensional 𝕜 E\nx✝ : Sort u_5\nIsSymmetric : x✝\nT : E →ₗ[𝕜] E\n⊢ sorry") - Line 4759
LeanError(message='Lean error:\n<input>:2:48: expected end of input') - Line 4762
LeanError(message='Lean error:\ninternal exception #5') - Line 4763
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  K →L[𝕜] K') - Line 4764
LeanError(message='Lean error:\nno goals to be solved') - Line 4772
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 4775
LeanError(message='Lean error:\n<input>:1:12: expected token') - Line 4822
LeanError(message='Lean error:\ninternal exception #5') - Line 4825
LeanError(message='Lean error:\ntype mismatch, term\n  h\nafter simplification has type\n  inner x x = @norm F SeminormedAddCommGroup.toNorm x * ‖x‖ : Prop\nbut is expected to have type\n  inner x x = @norm F NormedAddCommGroup.toNorm x * ‖x‖ : Prop') - Line 4839
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 4842
LeanError(message='Lean error:\ntype mismatch, term\n  h\nafter simplification has type\n  ‖@HAdd.hAdd F F F\n          (@instHAdd F\n            (@AddCommMagma.toAdd F\n              (@AddCommSemigroup.toAddCommMagma F\n                (@AddCommMonoid.toAddCommSemigroup F\n                  (@AddCommGroup.toAddCommMonoid F SeminormedAddCommGroup.toAddCommGroup)))))\n          x y‖ *\n      ‖x + y‖ =\n    ‖x‖ * ‖x‖ + 2 * inner x y + ‖y‖ * ‖y‖ : Prop\nbut is expected to have type\n  ‖@HAdd.hAdd F F F\n          (@instHAdd F\n            (@AddCommMagma.toAdd F\n              (@AddCommSemigroup.toAddCommMagma F\n                (@AddCommMonoid.toAddCommSemigroup F\n                  (@AddCommGroup.toAddCommMonoid F NormedAddCommGroup.toAddCommGroup)))))\n          x y‖ *\n      ‖x + y‖ =\n    ‖x‖ * ‖x‖ + 2 * inner x y + ‖y‖ * ‖y‖ : Prop') - Line 4844
LeanError(message='Lean error:\ntype mismatch, term\n  h\nafter simplification has type\n  ‖@HSub.hSub F F F (@instHSub F (@SubNegMonoid.toSub F (@AddGroup.toSubNegMonoid F SeminormedAddGroup.toAddGroup))) x\n          y‖ *\n      ‖x - y‖ =\n    ‖x‖ * ‖x‖ - 2 * inner x y + ‖y‖ * ‖y‖ : Prop\nbut is expected to have type\n  ‖@HSub.hSub F F F (@instHSub F (@SubNegMonoid.toSub F (@AddGroup.toSubNegMonoid F NormedAddGroup.toAddGroup))) x y‖ *\n      ‖x - y‖ =\n    ‖x‖ * ‖x‖ - 2 * inner x y + ‖y‖ * ‖y‖ : Prop') - Line 4848
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.9915 = 0\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : SeminormedAddCommGroup E\ninst✝⁴ : InnerProductSpace 𝕜 E\ninst✝³ : NormedAddCommGroup E\ninst✝² : InnerProductSpace 𝕜 E\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : InnerProductSpace 𝕜 E\nx y : E\nh : ‖x‖ = 0\n⊢ inner x y = 0") - Line 4854
LeanError(message='Lean error:\napplication type mismatch\n  inner_eq_zero_of_left x h\nargument\n  h\nhas type\n  @norm E NormedAddCommGroup.toNorm y = 0 : Prop\nbut is expected to have type\n  @norm E SeminormedAddCommGroup.toNorm y = 0 : Prop') - Line 4855
LeanError(message='Lean error:\nsimp made no progress') - Line 4856
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x + ?y‖ * ‖?x + ?y‖\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx y : F\n⊢ ‖x + y‖ * ‖x + y‖ = ‖x‖ * ‖x‖ + ‖y‖ * ‖y‖ ↔ inner x y = 0") - Line 4865
LeanError(message='Lean error:\ninternal exception #5') - Line 4866
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x - ?y‖ * ‖?x - ?y‖\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx y : F\n⊢ ‖x - y‖ * ‖x - y‖ = ‖x‖ * ‖x‖ + ‖y‖ * ‖y‖ ↔ inner x y = 0") - Line 4869
LeanError(message='Lean error:\ninternal exception #5') - Line 4870
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.13401‖ = ‖?m.13482‖\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx y : F\n| ‖x‖ = ‖y‖") - Line 4872
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  |‖?z‖|\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx y : F\n⊢ |inner x y| / (|‖x‖| * |‖y‖|) ≤ 1") - Line 4874
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x‖ * ‖?x‖\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx : F\nr : ℝ\n⊢ r * inner x x = r * (‖x‖ * ‖x‖)") - Line 4875
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x‖ * ‖?x‖\nF : Type u_3\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : NormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx : F\nr : ℝ\n⊢ r * inner x x = r * (‖x‖ * ‖x‖)") - Line 4876
LeanError(message='Lean error:\nsimp made no progress') - Line 4877
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nF : Type u_3\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : InnerProductSpace ℝ F\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : SeminormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx y : F\nhx : x ≠ 0\nhy : y ≠ 0\nR : ℝ\n⊢ dist ((R / ‖x‖) ^ 2 • x) ((R / ‖y‖) ^ 2 • y) = √(‖(R / ‖x‖) ^ 2 • x - (R / ‖y‖) ^ 2 • y‖ ^ 2)") - Line 4878
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?r • ?x‖\nF : Type u_3\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : InnerProductSpace ℝ F\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : SeminormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx : F\nr : ℝ\nhx : x ≠ 0\nhr : 0 < r\n⊢ r * (‖x‖ * ‖x‖) / (‖x‖ * ‖r • x‖) = 1") - Line 4881
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?r • ?x‖\nF : Type u_3\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : InnerProductSpace ℝ F\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace ℝ F\ninst✝³ : SeminormedAddCommGroup F\ninst✝² : InnerProductSpace ℝ F\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nx : F\nr : ℝ\nhx : x ≠ 0\nhr : r < 0\n⊢ r * (‖x‖ * ‖x‖) / (‖x‖ * ‖r • x‖) = -1") - Line 4882
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4890
LeanError(message='Lean error:\ninternal exception #5') - Line 4891
LeanError(message='Lean error:\ninternal exception #5') - Line 4894
LeanError(message='Lean error:\nsimp made no progress') - Line 4899
LeanError(message="Lean error:\napplication type mismatch\n  pow_ne_zero 2 (LT.lt.ne' (norm_pos_iff.mpr ?m.10599))\nargument\n  LT.lt.ne' (norm_pos_iff.mpr ?m.10599)\nhas type\n  ‖?m.10441‖ ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop") - Line 4924
LeanError(message="Lean error:\nunknown free variable '_fvar.4226'") - Line 4926
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 4928
LeanError(message='Lean error:\nsimp made no progress') - Line 4934
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 4941
LeanError(message="Lean error:\nunknown free variable '_fvar.4226'") - Line 4947
LeanError(message='Lean error:\nno goals to be solved') - Line 4961
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.16372 ∈ Metric.ball 0 ?m.16373\nn : ℕ∞\nE : Type u_8\ninst✝¹ : NormedAddCommGroup E\ninst✝ : InnerProductSpace ℝ E\ny : E\nhy : y ∈ Metric.ball 0 1\n⊢ 0 < 1 - ‖y‖ ^ 2") - Line 4962
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 4966
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 4967
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a - 0\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : InnerProductSpace 𝕜 E\nι : Type u_4\ninst✝³ : LinearOrder ι\ninst✝² : LocallyFiniteOrder ι\ninst✝¹ : OrderBot ι\ninst✝ : WellFoundedLT ι\nf : ι → E\n⊢ f ⊥ - 0 = f ⊥") - Line 5030
LeanError(message='Lean error:\ninternal exception #5') - Line 5034
LeanError(message='Lean error:\ninternal exception #5') - Line 5035
LeanError(message='Lean error:\nsimp made no progress') - Line 5040
LeanError(message="Lean error:\ntype mismatch\n  Submodule.subset_span ((Set.mem_image ?m.8574 ?m.8575 (?m.8574 i)).mpr (Exists.intro i ⟨?m.8629, rfl⟩))\nhas type\n  ?m.8574 i ∈ ↑(Submodule.span ?m.7432 (?m.8574 '' ?m.8575)) : Prop\nbut is expected to have type\n  sorry ∈ sorry : Prop") - Line 5042
LeanError(message='Lean error:\nsimp made no progress') - Line 5045
LeanError(message='Lean error:\ntype mismatch, term\n  hn\nafter simplification has type\n  ¬(↑‖gramSchmidt 𝕜 f n‖)⁻¹ • gramSchmidt 𝕜 f n = 0 : Prop\nbut is expected to have type\n  ¬gramSchmidt 𝕜 f n = 0 : Prop') - Line 5047
LeanError(message='Lean error:\nno goals to be solved') - Line 5050
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5059
LeanError(message='Lean error:\ninternal exception #5') - Line 5060
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.7801\n𝕜 : Type u_1\nE : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup E\ninst✝¹ : InnerProductSpace 𝕜 E\nα : 𝕜\nA B : E →ₗ[𝕜] E\ninst✝ : FiniteDimensional 𝕜 E\nhB : B.IsSymmetric\nhAB : Commute A B\n| Module.End.eigenspace A α") - Line 5061
LeanError(message='Lean error:\ntype mismatch, term\n  Submodule.orthogonal_eq_bot_iff.mp sorry\nafter simplification has type\n  ⨆ μ, Module.End.eigenspace A μ = ⊤ : Prop\nbut is expected to have type\n  ⨆ α, ⨆ γ, Module.End.eigenspace A α ⊓ Module.End.eigenspace B γ = ⊤ : Prop') - Line 5062
LeanError(message='Lean error:\nno goals to be solved') - Line 5063
LeanError(message='Lean error:\nsimp made no progress') - Line 5066
LeanError(message='Lean error:\nsimp made no progress') - Line 5067
LeanError(message='Lean error:\n<input>:2:14: expected end of input') - Line 5068
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.2539\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : RCLike 𝕜\ninst✝³ : SeminormedAddCommGroup E\ninst✝² : InnerProductSpace 𝕜 E\nE' : Type u_9\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : InnerProductSpace 𝕜 E'\nf : E ≃ₗᵢ[𝕜] E'\nx : E\ny : E'\n| inner (f x) y") - Line 5072
LeanError(message='Lean error:\nno goals to be solved') - Line 5084
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.9074 is not an inductive datatype') - Line 5085
LeanError(message='Lean error:\ninternal exception #5') - Line 5087
LeanError(message='Lean error:\nsimp made no progress') - Line 5090
LeanError(message='Lean error:\n<input>:1:91: unexpected end of input') - Line 5106
LeanError(message='Lean error:\n<input>:1:53: unterminated comment') - Line 5107
LeanError(message='Lean error:\ninternal exception #5') - Line 5116
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5118
LeanError(message='Lean error:\ninternal exception #5') - Line 5119
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Submodule 𝕜 E') - Line 5127
LeanError(message='Lean error:\ninternal exception #5') - Line 5128
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Kᗮ\n𝕜 : Type u_1\nE : Type u_2\ninst✝² : RCLike 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : InnerProductSpace 𝕜 E\nK : Submodule 𝕜 E\nh : Kᗮ = ⊤\nthis : K ⊓ sorry = ⊥\n⊢ K = ⊥") - Line 5129
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the current goal\n𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : RCLike 𝕜\ninst✝³ : NormedAddCommGroup E\ninst✝² : InnerProductSpace 𝕜 E\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace 𝕜 F\nf : E →ₗᵢ[𝕜] F\nU V : Submodule 𝕜 E\nh : U ⟂ V\n⊢ Submodule.map f U ⟂ Submodule.map f V") - Line 5158
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the current goal\n𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : RCLike 𝕜\ninst✝³ : NormedAddCommGroup E\ninst✝² : InnerProductSpace 𝕜 E\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace 𝕜 F\nf : E →ₗᵢ[𝕜] F\nU V : Submodule 𝕜 F\nh : U ⟂ V\n⊢ Submodule.comap f U ⟂ Submodule.comap f V") - Line 5159
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 5166
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ι →₀ 𝕜') - Line 5180
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5181
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5185
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5186
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5187
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 5188
LeanError(message='Lean error:\napplication type mismatch\n  zorn_subset_nonempty {b | sorry} ?m.753 ?m.754 hs\nargument\n  hs\nhas type\n  Orthonormal 𝕜 Subtype.val : Prop\nbut is expected to have type\n  ?m.754 ∈ {b | sorry} : Prop') - Line 5189
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖v i‖\ncase refine_1\n𝕜 : Type u_1\nE : Type u_2\ninst✝² : RCLike 𝕜\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : InnerProductSpace 𝕜 E\nι : Type u_4\nv : ι → E\nhv : Orthonormal 𝕜 v\ni : ι\n⊢ Norm E") - Line 5191
LeanError(message='Lean error:\ninternal exception #5') - Line 5193
LeanError(message='Lean error:\nsimp made no progress') - Line 5215
LeanError(message='Lean error:\nsimp made no progress') - Line 5216
LeanError(message='Lean error:\nsimp made no progress') - Line 5217
LeanError(message="Lean error:\n<input>:4:27: expected 'by' or 'from'") - Line 5222
LeanError(message='Lean error:\ninternal exception #5') - Line 5225
LeanError(message='Lean error:\nsimp made no progress') - Line 5233
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5261
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5262
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5281
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5282
LeanError(message='Lean error:\ninternal exception #5') - Line 5284
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.12214 is not an inductive datatype') - Line 5288
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.13842 is not an inductive datatype') - Line 5289
LeanError(message='Lean error:\nsimp made no progress') - Line 5293
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  inner (?x + ?y) ?z\n𝕜 : Type u_1\nE : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup E\ninst✝¹ : InnerProductSpace 𝕜 E\ninst✝ : CompleteSpace E\nT S : E →L[𝕜] E\nhT : T.IsPositive\nhS : S.IsPositive\nx : E\n⊢ 0 ≤ RCLike.re (inner (T x + S x) x)") - Line 5308
LeanError(message='Lean error:\n<input>:1:26: expected token') - Line 5310
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.48964\ncase refine_2\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : RCLike 𝕜\ninst✝³ : NormedAddCommGroup E\ninst✝² : InnerProductSpace 𝕜 E\ninst✝¹ : CompleteSpace E\nU : Submodule 𝕜 E\nT : E →L[𝕜] E\nhT : T.IsPositive\ninst✝ : CompleteSpace ↥U\nthis : ((sorry.comp sorry).comp (T.comp (ContinuousLinearMap.adjoint (sorry.comp sorry)))).IsPositive\n⊢ (U.subtypeL.comp (U.orthogonalProjection.comp (T.comp (U.subtypeL.comp U.orthogonalProjection)))).IsPositive") - Line 5311
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.IsPositive.conj_adjoint hT sorry\nargument\n  sorry\nhas type\n  sorry : Type u_2\nbut is expected to have type\n  E →L[𝕜] ?m.13743 : Type (max u_2 ?u.13725)') - Line 5312
LeanError(message='Lean error:\nno goals to be solved') - Line 5313
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  IsUnit ?m.3724\n𝕜 : Type u_1\nE : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup E\ninst✝¹ : InnerProductSpace 𝕜 E\ninst✝ : CompleteSpace E\nf : E →L[𝕜] E\nc : NNReal\nhc : 0 < c\nh : ∀ (x : E), ‖x‖ ^ 2 * ↑c ≤ ‖inner (f x) x‖\n⊢ IsUnit f") - Line 5314
LeanError(message='Lean error:\ninternal exception #5') - Line 5319
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5320
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?u - ?v‖ = ⨅ w, ‖?u - ↑w‖\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : InnerProductSpace ℝ F\nK : Submodule ℝ F\nu v : F\nhv : v ∈ K\nh : ?m.3501\n⊢ ∀ w ∈ K, inner (u - v) (w - v) ≤ 0") - Line 5322
LeanError(message='Lean error:\n<input>:1:19: expected token') - Line 5327
LeanError(message='Lean error:\ninternal exception #5') - Line 5336
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5337
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5339
LeanError(message='Lean error:\nno goals to be solved') - Line 5340
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5341
LeanError(message='Lean error:\nno goals to be solved') - Line 5342
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] ↥⊥') - Line 5345
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 5357
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5358
LeanError(message='Lean error:\ninternal exception #5') - Line 5360
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5364
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Submodule 𝕜 E') - Line 5365
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Submodule 𝕜 E') - Line 5368
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5369
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5372
LeanError(message='Lean error:\ntype mismatch\n  Submodule.isCompl_orthogonal_of_completeSpace\nhas type\n  IsCompl ?m.11847 ?m.11847ᗮ : Prop\nbut is expected to have type\n  IsCompl K sorry : Prop') - Line 5376
LeanError(message='Lean error:\nsimp made no progress') - Line 5378
LeanError(message='Lean error:\ninternal exception #5') - Line 5381
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5382
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.11253\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nK : Submodule 𝕜 E\ninst✝² inst✝¹ : K.HasOrthogonalProjection\ninst✝ : CompleteSpace E\n⊢ Kᗮᗮᗮ = Kᗮ") - Line 5383
LeanError(message='Lean error:\ninternal exception #5') - Line 5384
LeanError(message='Lean error:\ntype mismatch\n  (Submodule.span ℝ {sorry})ᗮ.reflection\nhas type\n  ?m.14665 ≃ₗᵢ[ℝ] ?m.14665 : Type ?u.14663\nbut is expected to have type\n  sorry : Type u_3') - Line 5394
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5395
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  𝕜ˣ') - Line 5396
LeanError(message='Lean error:\nsimp made no progress') - Line 5397
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 5398
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  E →L[𝕜] E') - Line 5399
LeanError(message='Lean error:\ninternal exception #5') - Line 5405
LeanError(message='Lean error:\ninternal exception #5') - Line 5407
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.20413 is not an inductive datatype') - Line 5411
LeanError(message='Lean error:\nsimp made no progress') - Line 5412
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5414
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5415
LeanError(message='Lean error:\n<input>:2:11: expected end of input') - Line 5416
LeanError(message='Lean error:\ninternal exception #5') - Line 5417
LeanError(message='Lean error:\ninternal exception #5') - Line 5418
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Set (?m.5088 hr)') - Line 5419
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  F →L[ℝ] ℝ') - Line 5422
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.17217 is not an inductive datatype') - Line 5423
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.16564 is not an inductive datatype') - Line 5424
LeanError(message='Lean error:\ninternal exception #5') - Line 5425
LeanError(message='Lean error:\nno goals to be solved') - Line 5426
LeanError(message='Lean error:\napplication type mismatch\n  IsSelfAdjoint.hasEigenvector_of_isLocalExtrOn hT hx₀\nargument\n  hx₀\nhas type\n  x₀ ≠ sorry : Prop\nbut is expected to have type\n  ?m.46681 ≠ 0 : Prop') - Line 5427
LeanError(message='Lean error:\napplication type mismatch\n  IsSelfAdjoint.hasEigenvector_of_isLocalExtrOn hT hx₀\nargument\n  hx₀\nhas type\n  x₀ ≠ sorry : Prop\nbut is expected to have type\n  ?m.46680 ≠ 0 : Prop') - Line 5428
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4250 is not an inductive datatype') - Line 5433
LeanError(message='Lean error:\ntype mismatch, term\n  Eq.symm (hT v w)\nafter simplification has type\n  ν * inner v w = μ * inner v w : Prop\nbut is expected to have type\n  ν = μ ∨ inner v w = 0 : Prop') - Line 5434
LeanError(message='Lean error:\nno goals to be solved') - Line 5437
LeanError(message='Lean error:\ninternal exception #5') - Line 5438
LeanError(message='Lean error:\ntype mismatch\n  Module.End.mem_eigenspace_iff.mp sorry\nhas type\n  ?m.26386 ?m.26388 = ?m.26387 • ?m.26388 : Prop\nbut is expected to have type\n  T sorry = sorry • w μ : Prop') - Line 5443
LeanError(message='Lean error:\nsimp made no progress') - Line 5444
LeanError(message='Lean error:\nsimp made no progress') - Line 5447
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  SpectrumRestricts ?m.8339 ⇑ContinuousMap.realToNNReal\n𝕜 : Type u_1\nH : Type u_2\nf : sorry\nhf : sorry\n⊢ sorry") - Line 5451
LeanError(message='Lean error:\ninternal exception #5') - Line 5460
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\n𝕜 : Type u_1\ninst✝² : RCLike 𝕜\nι : Type u_4\nG : ι → Type u_5\ninst✝¹ : (i : ι) → NormedAddCommGroup (G i)\ninst✝ : (i : ι) → InnerProductSpace 𝕜 (G i)\nx✝ : Sort u_7\nV : x✝\nα : ι → Type u_6\nv_family : (i : ι) → α i → G i\nhv_family : ∀ (i : ι), Orthonormal 𝕜 (v_family i)\n⊢ Orthonormal 𝕜 fun a => ?m.2192") - Line 5462
LeanError(message="Lean error:\nunknown free variable '_fvar.1879'") - Line 5463
LeanError(message="Lean error:\nunknown free variable '_fvar.1710'") - Line 5464
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5465
LeanError(message='Lean error:\ninternal exception #5') - Line 5472
LeanError(message='Lean error:\ninternal exception #5') - Line 5473
LeanError(message='Lean error:\nsimp made no progress') - Line 5474
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CompleteSpace ?m.3210') - Line 5482
LeanError(message='Lean error:\ninternal exception #5') - Line 5486
LeanError(message='Lean error:\nsimp made no progress') - Line 5487
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℤ') - Line 5488
LeanError(message='Lean error:\ninternal exception #5') - Line 5492
LeanError(message='Lean error:\nsimp made no progress') - Line 5493
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5494
LeanError(message='Lean error:\nsimp made no progress') - Line 5495
LeanError(message='Lean error:\n<input>:1:62: expected token') - Line 5497
LeanError(message='Lean error:\ninternal exception #5') - Line 5498
LeanError(message='Lean error:\ninternal exception #5') - Line 5499
LeanError(message='Lean error:\ninternal exception #5') - Line 5500
LeanError(message='Lean error:\ninternal exception #5') - Line 5506
LeanError(message='Lean error:\ninternal exception #5') - Line 5507
LeanError(message='Lean error:\ninternal exception #5') - Line 5510
LeanError(message='Lean error:\ninternal exception #5') - Line 5512
LeanError(message='Lean error:\nno goals to be solved') - Line 5513
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5522
LeanError(message='Lean error:\nsimp made no progress') - Line 5524
LeanError(message='Lean error:\nsimp made no progress') - Line 5526
LeanError(message='Lean error:\nsimp made no progress') - Line 5527
LeanError(message='Lean error:\nno goals to be solved') - Line 5528
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?z‖ ^ 2\nE : Type u_1\ninst✝² : NormedAddCommGroup E\ninst✝¹ : InnerProductSpace ℝ E\ninst✝ : Fact (Module.finrank ℝ E = 2)\nx y : E\n⊢ ‖sorry‖ ^ 2 = (‖x‖ * ‖y‖) ^ 2") - Line 5533
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5534
LeanError(message='Lean error:\nsimp made no progress') - Line 5537
LeanError(message='Lean error:\nsimp made no progress') - Line 5538
LeanError(message='Lean error:\ninternal exception #5') - Line 5543
LeanError(message='Lean error:\ninternal exception #5') - Line 5544
LeanError(message='Lean error:\ninternal exception #5') - Line 5545
LeanError(message='Lean error:\nsimp made no progress') - Line 5562
LeanError(message='Lean error:\ninternal exception #5') - Line 5563
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5565
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (IsHilbertSum.linearIsometryEquiv ?hV).symm (lp.single 2 ?i ?x)\nι : Type u_1\nE : Type u_2\nv : ι → E\ninst✝ : DecidableEq ι\nh : ?m.1659 ι E\ni : ι\n⊢ sorry = v i") - Line 5579
LeanError(message='Lean error:\nno goals to be solved') - Line 5615
LeanError(message="Lean error:\n<input>:2:21: expected '⟩'") - Line 5616
LeanError(message='Lean error:\napplication type mismatch\n  Set.neg_mem_neg.mpr hy\nargument\n  hy\nhas type\n  y ∈ s : Prop\nbut is expected to have type\n  ?m.12689 ∈ sorry : Prop') - Line 5620
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (absConvexHull ?𝕜) ?s\nE : Type u_2\ninst✝¹² : SMul ℝ E\ninst✝¹¹ : AddCommMonoid E\ninst✝¹⁰ : TopologicalSpace E\ninst✝⁹ : AddCommGroup E\ninst✝⁸ : Module ℝ E\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : LocallyConvexSpace ℝ E\ninst✝⁵ : ContinuousSMul ℝ E\ninst✝⁴ : IsTopologicalAddGroup E\ninst✝³ : AddCommGroup E\ninst✝² : Module ℝ E\ninst✝¹ : AddCommGroup E\ninst✝ : Module ℝ E\ns : Set E\n⊢ (convexHull ℝ) (s ∪ -s) = (absConvexHull ℝ) s") - Line 5621
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (absConvexHull ℝ) ?m.11621\nE : Type u_2\ninst✝¹⁵ : SMul ℝ E\ninst✝¹⁴ : AddCommMonoid E\ns : Set E\ninst✝¹³ : TopologicalSpace E\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : Module ℝ E\ninst✝¹⁰ : TopologicalSpace E\ninst✝⁹ : LocallyConvexSpace ℝ E\ninst✝⁸ : ContinuousSMul ℝ E\ninst✝⁷ : IsTopologicalAddGroup E\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module ℝ E\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module ℝ E\ninst✝² : UniformSpace E\ninst✝¹ : IsUniformAddGroup E\nlcs : LocallyConvexSpace ℝ E\ninst✝ : ContinuousSMul ℝ E\nhs : TotallyBounded s\n⊢ TotallyBounded ((absConvexHull ℝ) s)") - Line 5622
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  IsTopologicalAddGroup ?m.15116') - Line 5630
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.45812 is not an inductive datatype') - Line 5633
LeanError(message="Lean error:\ntactic 'aesop' failed, made no progress\nInitial goal:\n  𝕜 : Type u_1\n  E : Type u_2\n  F : Type u_3\n  inst✝⁴ : NormedCommRing 𝕜\n  inst✝³ : AddCommMonoid E\n  inst✝² : AddCommMonoid F\n  inst✝¹ : Module 𝕜 E\n  inst✝ : Module 𝕜 F\n  B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜\n  s : Set E\n  ⊢ B.polar s = ⋂ x ∈ s, ⇑(B x) ⁻¹' Metric.closedBall 0 1") - Line 5637
LeanError(message='Lean error:\ninternal exception #5') - Line 5638
LeanError(message='Lean error:\nsimp made no progress') - Line 5641
LeanError(message='Lean error:\nsimp made no progress') - Line 5648
LeanError(message='Lean error:\nsimp made no progress') - Line 5649
LeanError(message='Lean error:\ninternal exception #5') - Line 5652
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.20188 = {?m.20189}\nF : Type u_3\ninst✝¹ inst✝ : AddCommMonoid F\nx✝ : Sort u_4\nSeparatingRight : x✝\nh : sorry\n⊢ sorry = {0}") - Line 5654
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Set (?m.20001 _fvar.15055 m)') - Line 5655
LeanError(message='Lean error:\ninternal exception #5') - Line 5684
LeanError(message='Lean error:\napplication type mismatch\n  Exists.intro ?m.23009 hx\nargument\n  hx\nhas type\n  x ∈ (a • r) • s : Prop\nbut is expected to have type\n  x ∈ sorry • s : Prop') - Line 5686
LeanError(message='Lean error:\nsimp made no progress') - Line 5688
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nE : Type u_1\nh0 : sorry ∈ sorry\n⊢ sorry") - Line 5690
LeanError(message='Lean error:\ntype mismatch\n  mem_balancedCoreAux_iff.mpr fun r hr => ?m.33163\nhas type\n  ?m.33133 ∈ balancedCoreAux ?m.32445 ?m.33132 : Prop\nbut is expected to have type\n  x ∈ sorry : Prop') - Line 5691
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Module ?m.34151 ?m.34152') - Line 5693
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  balancedCore ?m.34335 ?m.34340\nE : Type u_1\n𝕜 : Type u_2\ninst✝ : SMul 𝕜 E\ns t : Set E\nht : sorry ∈ t\nhst : ∀ (a : 𝕜), sorry ≤ 1 → a • s ⊆ t\n⊢ s ⊆ sorry") - Line 5694
LeanError(message='Lean error:\ntype mismatch\n  if h : sorry then ?pos✝ else ?neg✝\nhas type\n  ?m.67949 : Sort ?u.67948\nbut is expected to have type\n  IsClosed sorry : Prop') - Line 5695
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ r V, 0 < r ∧ V ∈ sorry ∧ (sorry → ∀ (y : E), sorry < r → y ∈ V → sorry ∈ U)) → sorry ∈ nhds sorry\nE : Type u_1\nU : Set E\nhU : U ∈ nhds sorry\n⊢ sorry ∈ nhds sorry") - Line 5696
LeanError(message='Lean error:\ninternal exception #5') - Line 5700
LeanError(message='Lean error:\nsimp made no progress') - Line 5722
LeanError(message='Lean error:\n<input>:1:44: expected end of input') - Line 5724
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∀ᶠ (c : ?m.47159) in nhdsWithin 0 {0}ᶜ, Set.MapsTo (fun x => c • x) ?m.47165 ?m.47164\n𝕜 : Type u_1\nE : Type u_3\ninst✝⁶ : SeminormedRing 𝕜\ninst✝⁵ : SMul 𝕜 E\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : NormedDivisionRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nh₀ : 0 ∈ s\n⊢ Absorbs 𝕜 s t ↔\n    (∀ᶠ (x : 𝕜) in nhdsWithin 0 {0}ᶜ, Set.MapsTo (fun x_1 => x • x_1) t s) ∧ Set.MapsTo (fun x => 0 • x) t s") - Line 5726
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5736
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  ContinuousSMul ?m.263389 ?m.263390') - Line 5737
LeanError(message='Lean error:\nsimp made no progress') - Line 5739
LeanError(message='Lean error:\nno goals to be solved') - Line 5743
LeanError(message='Lean error:\nsimp made no progress') - Line 5745
LeanError(message="Lean error:\nunknown free variable '_fvar.161'") - Line 5749
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⋃ x, ⋃ (h : x ∈ ?s), ?t x h\nE : Type u_3\ninst✝¹ : Zero E\ninst✝ : TopologicalSpace E\nx✝¹ : Sort u_7\nIsVonNBounded : x✝¹\nι : Type u_6\nI : Set ι\nhI : I.Finite\ns : ι → Set E\nx✝ : Finite ↑I\n⊢ sorry ↔ ∀ i ∈ I, sorry") - Line 5750
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ⋃₀ ?m.1136\nE : Type u_3\ninst✝¹ : Zero E\ninst✝ : TopologicalSpace E\nx✝ : Sort u_6\nIsVonNBounded : x✝\nS : Set (Set E)\nhS : S.Finite\n⊢ sorry ↔ ∀ s ∈ S, sorry") - Line 5751
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a - ?b\nx✝ : Sort u_6\nIsVonNBounded : x✝\nhs : sorry\nht : sorry\n⊢ sorry") - Line 5755
LeanError(message='Lean error:\ntype mismatch\n  forall₂_congr fun V hV => ?m.23928\nhas type\n  (∀ (a : ?m.23916) (b : ?m.23917 a), ?m.23918 a b) ↔ ∀ (a : ?m.23916) (b : ?m.23917 a), ?m.23919 a b : Prop\nbut is expected to have type\n  sorry ↔ ∀ t ∈ nhds 0, ∀ᶠ (x : 𝕜) in nhds 0, x • S ⊆ t : Prop') - Line 5757
LeanError(message='Lean error:\nsimp made no progress') - Line 5759
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto f\nargument\n  f\nhas type\n  sorry : Type (max u_4 u_3)\nbut is expected to have type\n  ?m.60365 → ?m.60366 : Type (max ?u.60363 ?u.60364)') - Line 5760
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.9053\n𝕜 : Type u_1\nE : Type u_3\nι : Type u_5\ninst✝¹⁷ : SeminormedRing 𝕜\ninst✝¹⁶ : SMul 𝕜 E\ninst✝¹⁵ : Zero E\ninst✝¹⁴ : TopologicalSpace E\ninst✝¹³ : SeminormedRing 𝕜\ninst✝¹² : AddZeroClass E\ninst✝¹¹ : TopologicalSpace E\ninst✝¹⁰ : ContinuousAdd E\ninst✝⁹ : SeminormedRing 𝕜\ninst✝⁸ : AddGroup E\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : IsTopologicalAddGroup E\ninst✝⁵ : SeminormedRing 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : AddCommGroup E\ninst✝¹ : NontriviallyNormedField 𝕜\nx✝ : Sort u_8\nIsVonNBounded : x✝\nε : ι → 𝕜\nl : Filter ι\ninst✝ : l.NeBot\nhε : ∀ᶠ (n : ι) in l, ε n ≠ 0\nS : Set E\nH : ∀ (x : ι → E), (∀ (n : ι), x n ∈ S) → Filter.Tendsto (ε • x) l (nhds 0)\n⊢ sorry") - Line 5762
LeanError(message="Lean error:\n<input>:2:68: expected ':' or term") - Line 5764
LeanError(message='Lean error:\nno goals to be solved') - Line 5766
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.15649 +ᵥ ?m.15648\nE : Type u_3\ninst✝¹² : Zero E\ninst✝¹¹ : TopologicalSpace E\ninst✝¹⁰ : AddZeroClass E\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : ContinuousAdd E\ninst✝⁷ : AddGroup E\ninst✝⁶ : TopologicalSpace E\ninst✝⁵ : IsTopologicalAddGroup E\ninst✝⁴ inst✝³ inst✝² : AddCommGroup E\ninst✝¹ : TopologicalSpace E\ninst✝ : ContinuousAdd E\nx✝ : Sort u_8\nIsVonNBounded : x✝\nhs : sorry\nx : E\n⊢ sorry") - Line 5767
LeanError(message='Lean error:\n<input>:1:43: expected end of input') - Line 5772
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 5773
LeanError(message="Lean error:\n<input>:16:81: unexpected end of input; expected 'else'") - Line 5780
LeanError(message='Lean error:\nno goals to be solved') - Line 5782
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.29117 is not an inductive datatype') - Line 5784
LeanError(message='Lean error:\napplication type mismatch\n  h (Metric.ball_mem_nhds 0 zero_lt_one)\nargument\n  Metric.ball_mem_nhds 0 zero_lt_one\nhas type\n  Metric.ball 0 1 ∈ nhds 0 : Prop\nbut is expected to have type\n  ?m.34764 ∈ nhds 0 : Prop') - Line 5787
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Bornology.IsVonNBounded ?𝕜 ?s\n𝕜 : Type u_1\nE : Type u_3\ninst✝³² : SeminormedRing 𝕜\ninst✝³¹ : SMul 𝕜 E\ninst✝³⁰ : Zero E\ninst✝²⁹ : TopologicalSpace E\ninst✝²⁸ : SeminormedRing 𝕜\ninst✝²⁷ : AddZeroClass E\ninst✝²⁶ : TopologicalSpace E\ninst✝²⁵ : ContinuousAdd E\ninst✝²⁴ : SeminormedRing 𝕜\ninst✝²³ : AddGroup E\ninst✝²² : TopologicalSpace E\ninst✝²¹ : IsTopologicalAddGroup E\ninst✝²⁰ : SeminormedRing 𝕜\ninst✝¹⁹ : AddCommGroup E\ninst✝¹⁸ : Module 𝕜 E\ninst✝¹⁷ : AddCommGroup E\ninst✝¹⁶ : NontriviallyNormedField 𝕜\ninst✝¹⁵ : NormedField 𝕜\ninst✝¹⁴ : AddCommGroup E\ninst✝¹³ : Module 𝕜 E\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : ContinuousSMul 𝕜 E\ninst✝¹⁰ : ContinuousAdd E\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : UniformSpace E\ninst✝⁷ : IsUniformAddGroup E\ninst✝⁶ : ContinuousSMul 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\ninst✝² : NontriviallyNormedField 𝕜\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\ns : Set E\n⊢ Bornology.IsVonNBounded 𝕜 s ↔ ∃ r, ∀ x ∈ s, ‖x‖ ≤ r") - Line 5788
LeanError(message='Lean error:\nsimp made no progress') - Line 5789
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.33720 = ?m.33721\n⊢ sorry = PseudoMetricSpace.toBornology") - Line 5790
LeanError(message='Lean error:\ninternal exception #5') - Line 5791
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5792
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  LocallyConvexSpace ?m.14908 (UniformConvergenceCLM ?m.14929 ?m.14931 𝔖)\nwith\n  sorry\nE : Type u_4\ninst✝¹ : AddCommGroup E\ninst✝ : TopologicalSpace E\n𝔖 : Set (Set E)\nh𝔖₁ : 𝔖.Nonempty\nh𝔖₂ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖\n⊢ sorry") - Line 5793
LeanError(message='Lean error:\nsimp made no progress') - Line 5796
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Seminorm 𝕜 E') - Line 5797
LeanError(message='Lean error:\ninternal exception #5') - Line 5802
LeanError(message='Lean error:\nsimp made no progress') - Line 5803
LeanError(message='Lean error:\ninternal exception #5') - Line 5804
LeanError(message='Lean error:\nsimp made no progress') - Line 5805
LeanError(message="Lean error:\n<input>:8:60: expected '⟩'") - Line 5809
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4500 is not an inductive datatype') - Line 5810
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5115 is not an inductive datatype') - Line 5811
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4061 is not an inductive datatype') - Line 5812
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5863 is not an inductive datatype') - Line 5813
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6766 is not an inductive datatype') - Line 5814
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6206 is not an inductive datatype') - Line 5815
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5816
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7040 is not an inductive datatype') - Line 5817
LeanError(message='Lean error:\nsimp made no progress') - Line 5818
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5819
LeanError(message='Lean error:\napplication type mismatch\n  (q i).comp f\nargument\n  f\nhas type\n  E →ₛₗ[σ₁₂] F : Type (max u_5 u_6)\nbut is expected to have type\n  ?m.40677 →ₛₗ[?m.40681] F : Type (max ?u.40658 u_6)') - Line 5820
LeanError(message='Lean error:\ninternal exception #5') - Line 5822
LeanError(message='Lean error:\ninternal exception #5') - Line 5823
LeanError(message='Lean error:\ninternal exception #5') - Line 5824
LeanError(message='Lean error:\nsimp made no progress') - Line 5825
LeanError(message='Lean error:\ninternal exception #5') - Line 5826
LeanError(message='Lean error:\ninternal exception #5') - Line 5827
LeanError(message='Lean error:\nsimp made no progress') - Line 5828
LeanError(message='Lean error:\nno goals to be solved') - Line 5829
LeanError(message='Lean error:\ninternal exception #5') - Line 5830
LeanError(message='Lean error:\nsimp made no progress') - Line 5832
LeanError(message='Lean error:\ninternal exception #5') - Line 5833
LeanError(message='Lean error:\ninternal exception #5') - Line 5834
LeanError(message='Lean error:\nno goals to be solved') - Line 5835
LeanError(message='Lean error:\ninternal exception #5') - Line 5837
LeanError(message='Lean error:\ninternal exception #5') - Line 5838
LeanError(message='Lean error:\ninternal exception #5') - Line 5839
LeanError(message='Lean error:\ninternal exception #5') - Line 5840
LeanError(message='Lean error:\nno goals to be solved') - Line 5841
LeanError(message='Lean error:\ninternal exception #5') - Line 5842
LeanError(message='Lean error:\nsimp made no progress') - Line 5843
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Bornology.IsVonNBounded ?m.73550 ?m.73559\n𝕜 : Type u_1\nE : Type u_5\nι : Type u_8\ninst✝²⁵ : NormedField 𝕜\ninst✝²⁴ : AddCommGroup E\ninst✝²³ : Module 𝕜 E\ninst✝²² : Nonempty ι\ninst✝²¹ : NormedField 𝕜\ninst✝²⁰ : AddCommGroup E\ninst✝¹⁹ : Module 𝕜 E\ninst✝¹⁸ : NormedField 𝕜\ninst✝¹⁷ : AddCommGroup E\ninst✝¹⁶ : Module 𝕜 E\ninst✝¹⁵ : Nonempty ι\ninst✝¹⁴ : TopologicalSpace E\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : AddCommGroup E\ninst✝¹¹ : Module 𝕜 E\ninst✝¹⁰ : Nonempty ι\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : NormedField 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : Nonempty ι\nt : TopologicalSpace E\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : Nonempty ι\np : SeminormFamily 𝕜 E ι\ninst✝ : TopologicalSpace E\ns : Set E\nhp : WithSeminorms p\n⊢ Bornology.IsVonNBounded 𝕜 s ↔ ∀ (i : ι), ∃ r > 0, ∀ x ∈ s, (p i) x < r") - Line 5844
LeanError(message='Lean error:\nsimp made no progress') - Line 5845
LeanError(message='Lean error:\nno goals to be solved') - Line 5846
LeanError(message='Lean error:\nno goals to be solved') - Line 5848
LeanError(message='Lean error:\ninternal exception #5') - Line 5851
LeanError(message="Lean error:\nrcases tactic failed: smul'✝ : ∀ (a : 𝕜) (x : E), V.toFun (a • x) = ‖a‖ * V.toFun x is not an inductive datatype") - Line 5860
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5861
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Seminorm 𝕜 E') - Line 5864
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.263417\n𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_5\nF : Type u_6\nι : Type u_8\ninst✝⁶⁴ : NormedField 𝕜\ninst✝⁶³ : AddCommGroup E\ninst✝⁶² : Module 𝕜 E\ninst✝⁶¹ : Nonempty ι\ninst✝⁶⁰ : NormedField 𝕜\ninst✝⁵⁹ : AddCommGroup E\ninst✝⁵⁸ : Module 𝕜 E\ninst✝⁵⁷ : NormedField 𝕜₂\ninst✝⁵⁶ : AddCommGroup F\ninst✝⁵⁵ : Module 𝕜₂ F\ninst✝⁵⁴ : NormedField 𝕜\ninst✝⁵³ : AddCommGroup E\ninst✝⁵² : Module 𝕜 E\ninst✝⁵¹ : Nonempty ι\ninst✝⁵⁰ : TopologicalSpace E\ninst✝⁴⁹ : NormedField 𝕜\ninst✝⁴⁸ : AddCommGroup E\ninst✝⁴⁷ : Module 𝕜 E\ninst✝⁴⁶ : Nonempty ι\ninst✝⁴⁵ : TopologicalSpace E\ninst✝⁴⁴ : SemilatticeSup F\ninst✝⁴³ : Nonempty F\ninst✝⁴² : NormedField 𝕜\ninst✝⁴¹ : AddCommGroup E\ninst✝⁴⁰ : Module 𝕜 E\ninst✝³⁹ : Nonempty ι\nt : TopologicalSpace E\ninst✝³⁸ : NontriviallyNormedField 𝕜\ninst✝³⁷ : AddCommGroup E\ninst✝³⁶ : Module 𝕜 E\ninst✝³⁵ : Nonempty ι\ninst✝³⁴ : TopologicalSpace E\ninst✝³³ : NontriviallyNormedField 𝕜\ninst✝³² : AddCommGroup E\ninst✝³¹ : Module 𝕜 E\ninst✝³⁰ : NontriviallyNormedField 𝕜₂\ninst✝²⁹ : AddCommGroup F\ninst✝²⁸ : Module 𝕜₂ F\ninst✝²⁷ inst✝²⁶ : Nonempty ι\ninst✝²⁵ : NormedField 𝕜\ninst✝²⁴ : AddCommGroup E\ninst✝²³ : Module 𝕜 E\ninst✝²² : NormedField 𝕜₂\ninst✝²¹ : AddCommGroup F\ninst✝²⁰ : Module 𝕜₂ F\ninst✝¹⁹ : NontriviallyNormedField 𝕜\ninst✝¹⁸ : AddCommGroup E\ninst✝¹⁷ : Module 𝕜 E\ninst✝¹⁶ : Nonempty ι\ninst✝¹⁵ : NormedField 𝕜\ninst✝¹⁴ : NormedSpace ℝ 𝕜\ninst✝¹³ : AddCommGroup E\ninst✝¹² : Module 𝕜 E\ninst✝¹¹ : Module ℝ E\ninst✝¹⁰ : NormedField 𝕜\ninst✝⁹ : NormedSpace ℝ 𝕜\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : NormedField 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : NormedField 𝕜₂\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜₂ F\nσ₁₂ : 𝕜 →+* 𝕜₂\ninst✝¹ : RingHomIsometric σ₁₂\ninst✝ : TopologicalSpace F\nhι : Nonempty ι\nq : SeminormFamily 𝕜₂ F ι\nhq : WithSeminorms q\nf : E →ₛₗ[σ₁₂] F\nthis✝ : IsTopologicalAddGroup F\nx✝ : TopologicalSpace E := sorry\nthis : sorry\n⊢ WithSeminorms (q.comp f)") - Line 5865
LeanError(message='Lean error:\ninternal exception #5') - Line 5866
LeanError(message='Lean error:\nsimp made no progress') - Line 5867
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5869
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 5871
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 5874
LeanError(message='Lean error:\nrcases tactic failed: hg : sorry is not an inductive datatype') - Line 5876
LeanError(message='Lean error:\nsimp made no progress') - Line 5880
LeanError(message='Lean error:\nno goals to be solved') - Line 5883
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 5885
LeanError(message='Lean error:\ninternal exception #5') - Line 5887
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5892
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5894
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 5896
LeanError(message='Lean error:\nno goals to be solved') - Line 5898
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nE : Type u_2\n𝕜 : Type u_1\ninst✝ : NontriviallyNormedField 𝕜\nf g : 𝕜 → E\nU : Set 𝕜\nhf : sorry\nh₁ : f =ᶠ[Filter.codiscreteWithin U] g\nh₂ : Set.EqOn f g Uᶜ\n⊢ sorry") - Line 5900
LeanError(message='Lean error:\ntype mismatch\n  fun x hx => ?m.871\nhas type\n  (x : ?m.861) → (hx : ?m.872 x) → ?m.873 x hx : Sort (imax ?u.860 ?u.863 ?u.869)\nbut is expected to have type\n  sorry : Prop') - Line 5914
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3024 hf₁ h₁ h₂') - Line 5918
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3317 hf₁ h₁ h₂') - Line 5919
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_1\nE : Type u_2\nU : Set 𝕜\nf : 𝕜 → E\nhf : sorry\n⊢ 0 ≤ sorry") - Line 5920
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6951 h₁f₁ h₁f₂ h₂f₁ h₂f₂') - Line 5921
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℤ') - Line 5923
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1807 hf hV') - Line 5924
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3486 hf₁ hf₂') - Line 5925
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\n𝕜 : Type u_1\nE : Type u_2\nU : Set 𝕜\nx✝ : Sort u_3\ndivisor : x✝\nf₁ f₂ : 𝕜 → E\nhf₁ : sorry\nhf₂ : sorry\n⊢ sorry⁻ = sorry⁻") - Line 5926
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5927
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5929
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5932
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  MeromorphicNFAt (g • f) x\nf : ?m.1438 → ?m.1435\nx : ?m.1438\n𝕜 : Type u_1\n𝕜✝ : Type u_2\ng : 𝕜✝ → ℕ\nhf : MeromorphicNFAt f x\nh₁g : sorry\nh₂g : g x ≠ 0\n⊢ MeromorphicNFAt (g • f) x") - Line 5935
LeanError(message='Lean error:\ninternal exception #5') - Line 5936
LeanError(message='Lean error:\ninternal exception #5') - Line 5945
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5947
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\n𝕜 : Type u_1\nU : Set 𝕜\nf g : 𝕜 → 𝕜\nh₁g : sorry\nh₂g : ∀ u ∈ U, g u ≠ sorry\n⊢ sorry ↔ sorry") - Line 5949
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\n𝕜 : Type u_1\nU : Set 𝕜\nf g : 𝕜 → 𝕜\nh₁g : sorry\nh₂g : ∀ u ∈ U, g u ≠ sorry\n⊢ sorry ↔ sorry") - Line 5950
LeanError(message="Lean error:\nunknown identifier 'order'") - Line 5957
LeanError(message='Lean error:\nsimp made no progress') - Line 5959
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5960
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  WithTop ℤ → Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds 0)\n𝕜✝ : Type u_2\nf : 𝕜✝ → ℕ\nx : 𝕜✝\nhf : MeromorphicAt f x\nho : 0 < hf.order\n⊢ Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds 0)") - Line 5961
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ⋯.order < 0 ∨ 0 ≤ ⋯.order → (Filter.Tendsto f (nhdsWithin x {x}ᶜ) sorry ↔ hf.order < 0)\n𝕜✝ : Type u_2\nE✝ : Type u_3\nf : 𝕜✝ → E✝\nx : 𝕜✝\nE : Type u_4\nhf : MeromorphicAt f x\n⊢ Filter.Tendsto f (nhdsWithin x {x}ᶜ) sorry ↔ hf.order < 0") - Line 5963
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ⋯.order = 0 ∨ ⋯.order ≠ 0 → ((∃ c, c ≠ 0 ∧ Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds c)) ↔ hf.order = 0)\n𝕜✝ : Type u_2\nf : 𝕜✝ → ℕ\nx : 𝕜✝\nhf : MeromorphicAt f x\n⊢ (∃ c, c ≠ 0 ∧ Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds c)) ↔ hf.order = 0") - Line 5965
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  0 < ⋯.order ∨ ⋯.order ≤ 0 → (Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds 0) ↔ 0 < hf.order)\n𝕜✝ : Type u_2\nf : 𝕜✝ → ℕ\nx : 𝕜✝\nhf : MeromorphicAt f x\n⊢ Filter.Tendsto f (nhdsWithin x {x}ᶜ) (nhds 0) ↔ 0 < hf.order") - Line 5966
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5971
LeanError(message='Lean error:\ninternal exception #5') - Line 5973
LeanError(message="Lean error:\ntactic 'constructor' failed, target is not an inductive datatype\nU : Type u_2\nx✝ : Sort u_3\nhf : x✝\n⊢ sorry") - Line 5977
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nα✝ : Type u_2\nU : Set α✝\nx✝ : Sort u_3\nhf : x✝\nhU : IsConnected U\n⊢ (∃ u, ?m.2930 ≠ ⊤) ↔ ∀ (u : ↑U), ?m.3173 ≠ ⊤") - Line 5978
LeanError(message='Lean error:\n<input>:1:96: unterminated comment') - Line 5980
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.5178 ∈ Filter.codiscrete ↑?m.5177\nU : Type u_2\nx✝ : Sort u_3\nhf : x✝\n⊢ {u | sorry = 0 ∨ ?m.2598 = ⊤} ∈ sorry") - Line 5983
LeanError(message='Lean error:\ninternal exception #5') - Line 5986
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5993
LeanError(message='Lean error:\nsimp made no progress') - Line 5996
LeanError(message='Lean error:\nsimp made no progress') - Line 5998
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?p₁ ((AffineMap.homothety ?p₁ ?c) ?p₂)\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\nc : 𝕜\n⊢ dist p₁ sorry = sorry * dist p₁ p₂") - Line 5
LeanError(message='Lean error:\ninternal exception #5') - Line 7
LeanError(message="Lean error:\nunknown free variable '_fvar.284'") - Line 14
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (AffineMap.homothety ?c ?r) ?p\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\nc : 𝕜\n⊢ dist sorry p₂ = ‖1 - c‖ * dist p₁ p₂") - Line 18
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a = ‖1 - c‖ * dist p₁ p₂\nError: unknown free variable '_fvar.284'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\nc : 𝕜\n⊢ dist p₂ sorry = ‖1 - c‖ * dist p₁ p₂") - Line 20
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'midpoint'.") - Line 22
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?p₁ (midpoint ?m.6432 ?p₁ ?p₂)\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\n⊢ dist p₁ sorry = sorry⁻¹ * dist p₁ p₂") - Line 24
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  midpoint ?m.5940 ?x ?y\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\n⊢ dist sorry p₂ = sorry⁻¹ * dist p₁ p₂") - Line 26
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist (midpoint ?m.6432 ?p₁ ?p₂) ?p₂\nP : Type u_2\ninst✝ : PseudoMetricSpace P\n𝕜 : Type u_5\np₁ p₂ : P\n⊢ dist sorry p₂ = sorry⁻¹ * dist p₁ p₂") - Line 28
LeanError(message='Lean error:\ninternal exception #5') - Line 30
LeanError(message='Lean error:\ninternal exception #5') - Line 31
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.29923\nQ : Type u_4\n𝕜 : Type u_5\nx : Q\ns : Set Q\ny : Q\nhy : y ∈ sorry\n⊢ ∀ᶠ (δ : 𝕜) in nhds sorry, sorry ∈ s") - Line 36
LeanError(message='Lean error:\ninternal exception #5') - Line 37
LeanError(message="Lean error:\napplication type mismatch\n  div_ne_zero (LT.lt.ne' ε0) (dist_ne_zero.mpr (Ne.symm (ne_of_mem_of_not_mem hq hy)))\nargument\n  dist_ne_zero.mpr (Ne.symm (ne_of_mem_of_not_mem hq hy))\nhas type\n  dist y q ≠ 0 : Prop\nbut is expected to have type\n  sorry ≠ 0 : Prop") - Line 45
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 46
LeanError(message='Lean error:\nsimp made no progress') - Line 49
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.10269 is not an inductive datatype') - Line 50
LeanError(message='Lean error:\ninternal exception #5') - Line 51
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 53
LeanError(message='Lean error:\ninternal exception #5') - Line 60
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  V →L[R] W') - Line 61
LeanError(message='Lean error:\ninternal exception #5') - Line 67
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 71
LeanError(message='Lean error:\ninternal exception #5') - Line 72
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2735') - Line 75
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  f\nf : sorry\n⊢ sorry = f") - Line 76
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : sorry is not an inductive datatype') - Line 77
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 81
LeanError(message='Lean error:\ninternal exception #5') - Line 85
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 120
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  e\ne : sorry\n⊢ sorry = e") - Line 121
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 122
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.104065 p') - Line 179
LeanError(message='Lean error:\nno goals to be solved') - Line 182
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.104064\nP : Type u_10\ninst✝¹ : Nonempty sorry\ninst✝ : Nonempty sorry\nx✝ : Sort u_15\npointReflection : x✝\nx y : P\n⊢ sorry = sorry") - Line 188
LeanError(message='Lean error:\ninternal exception #5') - Line 189
LeanError(message='Lean error:\ninternal exception #5') - Line 190
LeanError(message='Lean error:\ninternal exception #5') - Line 192
LeanError(message='Lean error:\napplication type mismatch\n  ⟨?m.22341, rfl⟩\nargument\n  rfl\nhas type\n  ?m.22344 = ?m.22344 : Prop\nbut is expected to have type\n  sorry = y : Prop') - Line 200
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 207
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  i₁ < i₂ ∨ i₂ < i₁ → dist sorry sorry ≠ dist sorry sorry\nn : ℕ\nx✝ : Sort u_4\nSimplex : x✝\ns : sorry\nhs : sorry\ni₁ i₂ i₃ i₄ : Fin (n + 1)\nh₁₂ : i₁ ≠ i₂\nh₃₄ : i₃ ≠ i₄\nh₁₂₃₄✝ : ¬(i₁ = i₃ ∧ i₂ = i₄)\nh₁₂₃₄ : ¬i₁ = i₃ ∨ ¬i₂ = i₄\nh₁₂₄₃✝ : ¬(i₁ = i₄ ∧ i₂ = i₃)\nh₁₂₄₃ : ¬i₁ = i₄ ∨ ¬i₂ = i₃\n⊢ dist sorry sorry ≠ dist sorry sorry") - Line 208
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  dist sorry sorry = dist sorry sorry\nn : ℕ\nx✝ : Sort u_4\nSimplex : x✝\ns : sorry\nhe : sorry\ni₁ i₂ i₃ i₄ : Fin (n + 1)\nh₁₂ : i₁ ≠ i₂\nh₃₄ : i₃ ≠ i₄\n⊢ dist sorry sorry = dist sorry sorry") - Line 209
LeanError(message='Lean error:\nno goals to be solved') - Line 210
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun h => ?m.5008, mpr := fun x => ?m.5014 }\nhas type\n  ?m.5001 ↔ ?m.5002 : Prop\nbut is expected to have type\n  sorry ↔\n    dist sorry sorry ≠ dist sorry sorry ∧\n      dist sorry sorry ≠ dist sorry sorry ∧ dist sorry sorry ≠ dist sorry sorry : Prop') - Line 211
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun x => ?m.4671, mpr := fun h => ?m.4677 }\nhas type\n  ?m.4664 ↔ ?m.4665 : Prop\nbut is expected to have type\n  sorry ↔ dist sorry sorry = dist sorry sorry ∧ dist sorry sorry = dist sorry sorry : Prop') - Line 212
LeanError(message="Lean error:\nunknown free variable '_fvar.80'") - Line 215
LeanError(message="Lean error:\nunknown free variable '_fvar.80'") - Line 216
LeanError(message='Lean error:\nsimp made no progress') - Line 217
LeanError(message='Lean error:\ninternal exception #5') - Line 223
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ n, z = ↑n ∨ z = -↑n) → sorry = sorry ^ z\nm✝ : Type u_1\nn : Type ?u.2590\nn' : ?m.2470\n𝕂 : Type ?u.2624\n𝔸✝ : Type u_2\ninst✝²⁵ : Fintype m✝\ninst✝²⁴ : DecidableEq m✝\ninst✝²³ : Fintype n\ninst✝²² : DecidableEq n\ninst✝²¹ : ?m.3067 → Fintype sorry\ninst✝²⁰ : Fintype m✝\ninst✝¹⁹ : DecidableEq m✝\ninst✝¹⁸ : Field 𝕂\ninst✝¹⁷ : CommRing 𝔸✝\ninst✝¹⁶ : TopologicalSpace 𝔸✝\ninst✝¹⁵ : RCLike 𝕂\ninst✝¹⁴ : Fintype m✝\ninst✝¹³ : DecidableEq m✝\ninst✝¹² : RCLike 𝕂\ninst✝¹¹ : Fintype m✝\ninst✝¹⁰ : DecidableEq m✝\nm : Type u_1\n𝔸 : Type u_2\ninst✝⁹ : Fintype m\ninst✝⁸ : DecidableEq m\ninst✝⁷ : Fintype m\ninst✝⁶ : DecidableEq m\ninst✝⁵ : CommRing 𝔸\ninst✝⁴ : TopologicalSpace 𝔸\ninst✝³ : Fintype m\ninst✝² : DecidableEq m\ninst✝¹ : Fintype m\ninst✝ : DecidableEq m\nz : ℤ\nA : Matrix m m 𝔸\n⊢ sorry = sorry ^ z") - Line 224
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 228
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 229
LeanError(message='Lean error:\ninternal exception #5') - Line 230
LeanError(message='Lean error:\ninternal exception #5') - Line 232
LeanError(message='Lean error:\nsimp made no progress') - Line 234
LeanError(message='Lean error:\ninternal exception #5') - Line 235
LeanError(message='Lean error:\ninternal exception #5') - Line 236
LeanError(message='Lean error:\nsimp made no progress') - Line 237
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HasSum ?m.20399 ?m.20396\nR : Type u_3\ninst✝¹ inst✝ : Ring R\nx✝¹ : Sort u_5\ntsze : x✝¹\nx✝ : Sort u_6\nsnd : x✝\nx : sorry\nhx : MulOpposite.op sorry • sorry = sorry • sorry\ne : R\nh : sorry\n⊢ HasSum (fun n => ?m.6479) (e • sorry)") - Line 238
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.46878 : Sort ?u.46877\nbut is expected to have type\n  HasSum (fun n => ?m.30600) (sorry + sorry) : Prop') - Line 239
LeanError(message="Lean error:\ntype mismatch\n  if h : Summable fun n => ?m.19732 then ?pos✝ else ?neg✝\nhas type\n  ?m.20179 : Sort ?u.20178\nbut is expected to have type\n  (∑' (n : ℕ), (NormedSpace.expSeries 𝕜 sorry n) fun x_1 => x) = sorry + sorry : Prop") - Line 240
LeanError(message='Lean error:\ninternal exception #5') - Line 241
LeanError(message='Lean error:\ninternal exception #5') - Line 242
LeanError(message='Lean error:\ninternal exception #5') - Line 244
LeanError(message='Lean error:\ninternal exception #5') - Line 245
LeanError(message='Lean error:\ninternal exception #5') - Line 246
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?f‖\nx✝² : Sort u_5\ntsze : x✝²\nx✝¹ : Sort u_6\nfst : x✝¹\nx✝ : Sort u_7\nsnd : x✝\nx : sorry\n⊢ ‖x‖ = ‖sorry‖ + ‖sorry‖") - Line 249
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 250
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  IsUltrametricDist ?m.225\nK : Type u_1\nL : Type u_2\ninst✝² : NormedField K\ninst✝¹ : NormedDivisionRing L\ninst✝ : NormedAlgebra K L\nh : IsUltrametricDist K\n⊢ IsUltrametricDist L") - Line 253
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Function.Injective ⇑?f\n𝕜 : Type u_1\nA : Type u_2\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : NonUnitalNormedRing A\ninst✝² : NormedSpace 𝕜 A\ninst✝¹ : IsScalarTower 𝕜 A A\ninst✝ : SMulCommClass 𝕜 A A\nx✝ : Sort u_3\nsplitMul : x✝\nh : Function.Injective ⇑(ContinuousLinearMap.mul 𝕜 A)\n⊢ Function.Injective sorry") - Line 256
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?f‖\n𝕜 : Type u_1\nA : Type u_2\ninst✝⁵ : NontriviallyNormedField 𝕜\ninst✝⁴ : NonUnitalNormedRing A\ninst✝³ : NormedSpace 𝕜 A\ninst✝² : IsScalarTower 𝕜 A A\ninst✝¹ : SMulCommClass 𝕜 A A\ninst✝ : RegularNormedAlgebra 𝕜 A\nx : Unitization 𝕜 A\n⊢ ‖x‖ = max ‖x.fst‖ ‖(algebraMap 𝕜 (A →L[𝕜] A)) x.fst + (ContinuousLinearMap.mul 𝕜 A) x.snd‖") - Line 260
LeanError(message='Lean error:\nno goals to be solved') - Line 262
LeanError(message='Lean error:\ntype mismatch\n  AddMonoidHomClass.antilipschitz_of_bound sorry fun x => ?m.18613\nhas type\n  AntilipschitzWith ?m.18010 ⇑sorry : Prop\nbut is expected to have type\n  AntilipschitzWith 2 sorry : Prop') - Line 263
LeanError(message='Lean error:\ninternal exception #5') - Line 264
LeanError(message='Lean error:\nfailed to synthesize\n  CStarRing (Unitization 𝕜 A)\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 267
LeanError(message='Lean error:\nsimp made no progress') - Line 283
LeanError(message='Lean error:\ninternal exception #5') - Line 288
LeanError(message='Lean error:\ninternal exception #5') - Line 289
LeanError(message='Lean error:\nsimp made no progress') - Line 290
LeanError(message="Lean error:\nunknown free variable '_fvar.1274'") - Line 291
LeanError(message="Lean error:\nunknown free variable '_fvar.1274'") - Line 292
LeanError(message="Lean error:\nunknown free variable '_fvar.1274'") - Line 293
LeanError(message='Lean error:\ninternal exception #5') - Line 295
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.25143 * ?m.24830⁻¹\n𝔸 : Type u_4\ninst✝¹ : DivisionRing 𝔸\ninst✝ : TopologicalSpace 𝔸\nx✝ : Sort u_5\nexpSeries : x✝\nx : 𝔸\nn : ℕ\n⊢ sorry = x ^ n * (↑n.factorial)⁻¹") - Line 298
LeanError(message='Lean error:\ninternal exception #5') - Line 307
LeanError(message='Lean error:\ntype mismatch\n  if h : sorry = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.11244 : Sort ?u.11243\nbut is expected to have type\n  AnalyticAt 𝕂 sorry x : Prop') - Line 311
LeanError(message='Lean error:\ninternal exception #5') - Line 312
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 314
LeanError(message='Lean error:\ninternal exception #5') - Line 315
LeanError(message='Lean error:\ninternal exception #5') - Line 317
LeanError(message='Lean error:\ninternal exception #5') - Line 319
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 322
LeanError(message='Lean error:\ninternal exception #5') - Line 323
LeanError(message='Lean error:\ninternal exception #5') - Line 332
LeanError(message='Lean error:\ninternal exception #5') - Line 339
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 341
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (a : ι) → ?m.17929 𝕂 x j xj a') - Line 350
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ n, z = ↑n ∨ z = -↑n) → sorry = sorry ^ z\n𝔸 : Type u_14\ninst✝¹ : NormedDivisionRing 𝔸\ninst✝ : CompleteSpace 𝔸\nx✝ : Sort u_15\nexp : x✝\nz : ℤ\nx : 𝔸\n⊢ sorry = sorry ^ z") - Line 356
LeanError(message='Lean error:\ninternal exception #5') - Line 360
LeanError(message='Lean error:\ninternal exception #5') - Line 361
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\ncase h\n𝔸 : Type u_19\ninst✝ : Ring 𝔸\nx✝ : Sort u_20\nexp : x✝\nx : 𝔸\n⊢ sorry x = sorry x") - Line 362
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'resolventSet'.") - Line 370
LeanError(message='Lean error:\ninternal exception #5') - Line 378
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CompleteLattice ?m.9981') - Line 381
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.11778 → ∃ k ∈ ?m.9683, ↑‖k‖₊ = sorry\n𝕜 : Type u_1\ninst✝⁶ : NormedField 𝕜\ninst✝⁵ : ProperSpace 𝕜\nA : Type u_4\ninst✝⁴ : NormedRing A\ninst✝³ : NormedAlgebra ℝ A\ninst✝² : CompleteSpace A\ninst✝¹ : NormOneClass A\nx✝ : Sort u_5\nσ : x✝\ninst✝ : ProperSpace 𝕜\na : A\nha : sorry\n⊢ ∃ k ∈ ?m.9683, ↑‖k‖₊ = sorry") - Line 382
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CompleteLattice ?m.14587') - Line 384
LeanError(message='Lean error:\n<input>:2:75: expected token') - Line 385
LeanError(message='Lean error:\ninternal exception #5') - Line 386
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∀ᶠ (x : ?m.18653) in Bornology.cobounded ?m.18653, ?m.18670 x\n𝕜 : Type u_1\ninst✝⁹ : NormedField 𝕜\ninst✝⁸ : ProperSpace 𝕜\nA : Type u_4\ninst✝⁷ : NormedRing A\ninst✝⁶ : NormedAlgebra ℝ A\ninst✝⁵ : CompleteSpace A\ninst✝⁴ : NormOneClass A\ninst✝³ : NontriviallyNormedField 𝕜\ninst✝² : NormedRing A\ninst✝¹ : NormedAlgebra 𝕜 A\ninst✝ : CompleteSpace A\na : A\n⊢ ∀ᶠ (z : 𝕜) in Bornology.cobounded 𝕜, IsUnit (resolvent a z)") - Line 387
LeanError(message='Lean error:\nno goals to be solved') - Line 388
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 391
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝕜 : Type u_1\ninst✝¹³ : NormedField 𝕜\ninst✝¹² : ProperSpace 𝕜\nA : Type u_4\ninst✝¹¹ : NormedRing A\ninst✝¹⁰ : NormedAlgebra ℝ A\ninst✝⁹ : CompleteSpace A\ninst✝⁸ : NormOneClass A\ninst✝⁷ : NontriviallyNormedField 𝕜\ninst✝⁶ : NormedRing A\ninst✝⁵ : NormedAlgebra 𝕜 A\ninst✝⁴ : CompleteSpace A\ninst✝³ : NontriviallyNormedField 𝕜\ninst✝² : NormedRing A\ninst✝¹ : NormedAlgebra 𝕜 A\ninst✝ : CompleteSpace A\na : A\nr : NNReal\nhr : ↑r < (spectralRadius 𝕜 a)⁻¹\n⊢ sorry") - Line 392
LeanError(message='Lean error:\n<input>:1:21: expected token') - Line 393
LeanError(message='Lean error:\nno goals to be solved') - Line 395
LeanError(message='Lean error:\ninternal exception #5') - Line 402
LeanError(message='Lean error:\ninternal exception #5') - Line 409
LeanError(message='Lean error:\ntype mismatch\n  Classical.byContradiction fun h => ?m.67895\nhas type\n  ?m.67891 : Prop\nbut is expected to have type\n  μ ∈ sorry : Prop') - Line 410
LeanError(message='Lean error:\ninternal exception #5') - Line 411
LeanError(message="Lean error:\n<input>:1:34: expected ')', ',' or ':'") - Line 412
LeanError(message='Lean error:\ninternal exception #5') - Line 413
LeanError(message='Lean error:\nnot a type\n  sorry') - Line 414
LeanError(message='Lean error:\ninternal exception #5') - Line 415
LeanError(message='Lean error:\nsimp made no progress') - Line 419
LeanError(message='Lean error:\nsimp made no progress') - Line 420
LeanError(message='Lean error:\nsimp made no progress') - Line 421
LeanError(message='Lean error:\nsimp made no progress') - Line 422
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 423
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.80536 is not an inductive datatype') - Line 424
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.78754 is not an inductive datatype') - Line 426
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CompactSpace ↑?m.95856\nx✝ : Sort u_13\nσₙ : x✝\nR : Type u_10\nS : Type u_11\nA : Type u_12\ninst✝¹⁰ : Semifield R\ninst✝⁹ : Field S\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : Algebra R S\ninst✝⁶ : Module R A\ninst✝⁵ : Module S A\ninst✝⁴ : IsScalarTower S A A\ninst✝³ : SMulCommClass S A A\ninst✝² : IsScalarTower R S A\ninst✝¹ : TopologicalSpace R\ninst✝ : TopologicalSpace S\na : A\nf : C(S, R)\nh : QuasispectrumRestricts a ⇑f\nh_cpct : CompactSpace sorry\n⊢ CompactSpace sorry") - Line 427
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a ↔ ∀ x ∈ ?m.91769, 0 ≤ x\nError: application type mismatch\n  @?m.93944 A inst✝³ σₙ\nargument\n  σₙ\nhas type\n  x✝ : Sort u_11\nbut is expected to have type\n  ?m.93943 : Sort u_11\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nA : Type u_10\ninst✝³ : NonUnitalRing A\nx✝ : Sort u_11\nσₙ : x✝\ninst✝² : Module ℝ A\ninst✝¹ : IsScalarTower ℝ A A\ninst✝ : SMulCommClass ℝ A A\na : A\n⊢ QuasispectrumRestricts a ⇑ContinuousMap.realToNNReal ↔ ∀ x ∈ ?m.91769, 0 ≤ x") - Line 428
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a ↔ ∀ x ∈ ?m.91254, x = ?m.91429\nError: application type mismatch\n  @?m.92456 A inst✝³ σₙ\nargument\n  σₙ\nhas type\n  x✝ : Sort u_11\nbut is expected to have type\n  ?m.92455 : Sort u_11\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nA : Type u_10\ninst✝³ : NonUnitalRing A\nx✝ : Sort u_11\nσₙ : x✝\ninst✝² : Module ℂ A\ninst✝¹ : IsScalarTower ℂ A A\ninst✝ : SMulCommClass ℂ A A\na : A\n⊢ QuasispectrumRestricts a ⇑Complex.reCLM ↔ ∀ x ∈ ?m.91254, x = ?m.91429") - Line 430
LeanError(message='Lean error:\nsimp made no progress') - Line 431
LeanError(message='Lean error:\nsimp made no progress') - Line 432
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 452
LeanError(message='Lean error:\nsimp made no progress') - Line 453
LeanError(message='Lean error:\ninternal exception #5') - Line 455
LeanError(message='Lean error:\nno goals to be solved') - Line 456
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nα : Type u_2\ninst✝ : NormedDivisionRing α\nz w : α\nhz : z ≠ 0\nhw : w ≠ 0\n⊢ dist z⁻¹ w⁻¹ = dist z w / (‖z‖ * ‖w‖)") - Line 467
LeanError(message='Lean error:\napplication type mismatch\n  Units.mk0 b hb\nargument\n  hb\nhas type\n  b ≠ @OfNat.ofNat α 0 (@Zero.toOfNat0 α (@MulZeroClass.toZero α NonUnitalNonAssocSemiring.toMulZeroClass)) : Prop\nbut is expected to have type\n  b ≠ @OfNat.ofNat α 0 (@Zero.toOfNat0 α (@MulZeroClass.toZero α MulZeroOneClass.toMulZeroClass)) : Prop') - Line 469
LeanError(message='Lean error:\napplication type mismatch\n  Units.mk0 b hb\nargument\n  hb\nhas type\n  b ≠ @OfNat.ofNat α 0 (@Zero.toOfNat0 α (@MulZeroClass.toZero α NonUnitalNonAssocSemiring.toMulZeroClass)) : Prop\nbut is expected to have type\n  b ≠ @OfNat.ofNat α 0 (@Zero.toOfNat0 α (@MulZeroClass.toZero α MulZeroOneClass.toMulZeroClass)) : Prop') - Line 470
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 471
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.1379 ?m.1380\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 479
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2675 is not an inductive datatype') - Line 486
LeanError(message='Lean error:\nsimp made no progress') - Line 490
LeanError(message='Lean error:\ninternal exception #5') - Line 491
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Bornology.cobounded ?m.6856\nα : Type u_1\ninst✝ : NormedDivisionRing α\n⊢ (Bornology.cobounded α)⁻¹ = nhdsWithin 0 {0}ᶜ") - Line 496
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a⁻¹⁻¹\nα : Type u_1\ninst✝ : NormedDivisionRing α\n⊢ (Bornology.cobounded α)⁻¹⁻¹ = Bornology.cobounded α") - Line 497
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 503
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1357 is not an inductive datatype') - Line 508
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1302 is not an inductive datatype') - Line 509
LeanError(message='Lean error:\nno goals to be solved') - Line 510
LeanError(message='Lean error:\nno goals to be solved') - Line 511
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 512
LeanError(message='Lean error:\nno goals to be solved') - Line 513
LeanError(message='Lean error:\nno goals to be solved') - Line 514
LeanError(message='Lean error:\ninternal exception #5') - Line 522
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nV : Type u_2\nP : Type u_3\ninst✝² : SeminormedAddCommGroup V\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor V P\nx y z : P\n⊢ dist (x -ᵥ y) (x -ᵥ z) = dist y z") - Line 528
LeanError(message="Lean error:\ntype mismatch, term\n  dist_triangle sorry sorry sorry\nafter simplification has type\n  True : Prop\nbut is expected to have type\n  dist (v +ᵥ p) (v' +ᵥ p') ≤ dist v v' + dist p p' : Prop") - Line 532
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nV : Type u_2\nP : Type u_3\ninst✝² : SeminormedAddCommGroup V\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor V P\np₁ p₂ p₃ p₄ : P\n⊢ dist (p₁ -ᵥ p₂) (p₃ -ᵥ p₄) ≤ dist p₁ p₃ + dist p₂ p₄") - Line 534
LeanError(message='Lean error:\nfailed to synthesize\n  NormedAddTorsor V P\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 536
LeanError(message='Lean error:\nfailed to synthesize\n  NormedAddTorsor V P\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 537
LeanError(message='Lean error:\nno goals to be solved') - Line 548
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 553
LeanError(message='Lean error:\nsimp made no progress') - Line 557
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 565
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 567
LeanError(message='Lean error:\napplication type mismatch\n  IsCompact.isBounded hK1\nargument\n  hK1\nhas type\n  @IsCompact α inst✝² K : Prop\nbut is expected to have type\n  @IsCompact ?m.6808 UniformSpace.toTopologicalSpace ?m.6810 : Prop') - Line 568
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.219 f g') - Line 577
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 584
LeanError(message='Lean error:\nrcases: scrutinee has type\n  hatg ∈ ↑f.completion.ker : Prop\nbut is expected to have type\n  sorry = 0 : Prop') - Line 587
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  NormedAddGroupHom (UniformSpace.Completion G) H') - Line 591
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 595
LeanError(message='Lean error:\ninternal exception #5') - Line 597
LeanError(message='Lean error:\nsimp made no progress') - Line 603
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.673⁻¹\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nx : E\ns : Set E\n⊢ EMetric.infEdist x⁻¹ s⁻¹ = EMetric.infEdist x s") - Line 605
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a⁻¹⁻¹\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nx : E\ns : Set E\n⊢ EMetric.infEdist x⁻¹⁻¹ s⁻¹ = EMetric.infEdist x s⁻¹") - Line 606
LeanError(message='Lean error:\nsimp made no progress') - Line 612
LeanError(message='Lean error:\nsimp made no progress') - Line 613
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\nx y : E\n⊢ Metric.ball x δ * {y} = Metric.ball (x * y) δ") - Line 614
LeanError(message='Lean error:\nsimp made no progress') - Line 615
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  {?x} / Metric.ball ?y ?δ\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\nx : E\n⊢ {x} / Metric.ball 1 δ = Metric.ball x δ") - Line 617
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.ball ?x ?δ / {?y}\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\nx : E\n⊢ Metric.ball 1 δ / {x} = Metric.ball x⁻¹ δ") - Line 619
LeanError(message='Lean error:\ninternal exception #5') - Line 620
LeanError(message='Lean error:\nsimp made no progress') - Line 621
LeanError(message='Lean error:\nsimp made no progress') - Line 622
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  {?x} / Metric.closedBall ?y ?δ\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\nx : E\n⊢ {x} / Metric.closedBall 1 δ = Metric.closedBall x δ") - Line 626
LeanError(message='Lean error:\nsimp made no progress') - Line 629
LeanError(message='Lean error:\nsimp made no progress') - Line 630
LeanError(message='Lean error:\nsimp made no progress') - Line 631
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\ns : Set E\n⊢ Metric.ball 1 δ * s = Metric.thickening δ s") - Line 632
LeanError(message='Lean error:\nsimp made no progress') - Line 633
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?s * Metric.ball 1 ?δ\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\ns : Set E\nx : E\n⊢ x • (s * Metric.ball 1 δ) = x • Metric.thickening δ s") - Line 634
LeanError(message='Lean error:\nsimp made no progress') - Line 635
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\ns : Set E\nx : E\n⊢ Metric.ball x δ * s = x • Metric.thickening δ s") - Line 636
LeanError(message='Lean error:\nsimp made no progress') - Line 637
LeanError(message='Lean error:\ninternal exception #5') - Line 638
LeanError(message='Lean error:\nsimp made no progress') - Line 639
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\ns : Set E\nhs : IsCompact s\nhδ : 0 ≤ δ\n⊢ Metric.closedBall 1 δ * s = Metric.cthickening δ s") - Line 640
LeanError(message='Lean error:\nsimp made no progress') - Line 641
LeanError(message='Lean error:\ninternal exception #5') - Line 642
LeanError(message='Lean error:\nsimp made no progress') - Line 643
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nE : Type u_1\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\nδ : ℝ\ns : Set E\nhs : IsCompact s\nhδ : 0 ≤ δ\nx : E\n⊢ Metric.closedBall x δ * s = x • Metric.cthickening δ s") - Line 644
LeanError(message='Lean error:\nsimp made no progress') - Line 645
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 647
LeanError(message='Lean error:\ninternal exception #5') - Line 684
LeanError(message='Lean error:\ninternal exception #5') - Line 685
LeanError(message='Lean error:\ntype mismatch, term\n  h sorry sorry\nafter simplification has type\n  ‖sorry * sorry‖ ≤ ‖sorry‖ ∨ ‖sorry * sorry‖ ≤ ‖sorry‖ : Prop\nbut is expected to have type\n  ‖x / z‖ ≤ ‖x / y‖ ∨ ‖x / z‖ ≤ ‖y / z‖ : Prop') - Line 698
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 707
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 713
LeanError(message="Lean error:\n<input>:1:11: unexpected end of input; expected '['") - Line 715
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 717
LeanError(message='Lean error:\ninternal exception #5') - Line 723
LeanError(message='Lean error:\nfailed to synthesize\n  Nonempty ι\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 724
LeanError(message='Lean error:\n<input>:1:27: expected end of input') - Line 725
LeanError(message='Lean error:\ninternal exception #5') - Line 730
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.Tendsto ?m.4730 ?m.4731 (nhds 0)\nE : Type u_1\nF : Type u_2\ninst✝² : SeminormedAddGroup E\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : ProperSpace E\nf : E → F\nh : ∀ (ε : ℝ), 0 < ε → ∃ r, ∀ (x : E), r < ‖x‖ → ‖f x‖ < ε\n⊢ Filter.Tendsto f (Filter.cocompact E) (nhds 0)") - Line 731
LeanError(message='Lean error:\nsimp made no progress') - Line 732
LeanError(message='Lean error:\nsimp made no progress') - Line 733
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 735
LeanError(message='Lean error:\ninternal exception #5') - Line 736
LeanError(message='Lean error:\ninternal exception #5') - Line 737
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 738
LeanError(message='Lean error:\nsimp made no progress') - Line 742
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 743
LeanError(message='Lean error:\ninternal exception #5') - Line 744
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1801 is not an inductive datatype') - Line 745
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3025 is not an inductive datatype') - Line 746
LeanError(message='Lean error:\ninternal exception #5') - Line 771
LeanError(message='Lean error:\nfailed to synthesize\n  SeminormedGroup E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 775
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 782
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 783
LeanError(message="Lean error:\ntype mismatch, term\n  norm_sub_norm_le' sorry sorry\nafter simplification has type\n  ‖sorry‖ - ‖sorry‖ ≤ ‖sorry / sorry‖ : Prop\nbut is expected to have type\n  ‖u / w‖ - ‖v / w‖ ≤ ‖u / v‖ : Prop") - Line 799
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  edist ?x 1\na : ℕ\nr : ENNReal\n⊢ edist a 1 < r ↔ ‖a‖ₑ < r") - Line 853
LeanError(message='Lean error:\napplication type mismatch\n  funext fun δ => congrArg (fun x_1 => x_1 ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y / x‖) Init.Core._auxLemma.7\nargument\n  fun δ => congrArg (fun x_1 => x_1 ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y / x‖) Init.Core._auxLemma.7\nhas type\n  ∀ (δ : ℝ), (δ > 0 ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y / x‖) = (0 < δ ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y / x‖) : Prop\nbut is expected to have type\n  ∀ (x : ?α), ?f x = ?g x : Prop') - Line 863
LeanError(message='Lean error:\napplication type mismatch\n  funext fun δ => congrArg (fun x => x ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y‖) Init.Core._auxLemma.7\nargument\n  fun δ => congrArg (fun x => x ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y‖) Init.Core._auxLemma.7\nhas type\n  ∀ (δ : ℝ), (δ > 0 ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y‖) = (0 < δ ∧ ∀ᶠ (y : E) in f, δ ≤ ‖y‖) : Prop\nbut is expected to have type\n  ∀ (x : ?α), ?f x = ?g x : Prop') - Line 864
LeanError(message='Lean error:\ninternal exception #5') - Line 875
LeanError(message='Lean error:\ninternal exception #5') - Line 876
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 878
LeanError(message='Lean error:\nsimp made no progress') - Line 879
LeanError(message='Lean error:\nno goals to be solved') - Line 881
LeanError(message='Lean error:\nno goals to be solved') - Line 883
LeanError(message='Lean error:\nsimp made no progress') - Line 885
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.2721 ∈ Metric.ball ?m.2720 ?m.2722\nE : Type u_4\ninst✝² : TopologicalSpace E\ninst✝¹ : ENormedMonoid E\ninst✝ : SeminormedCommGroup E\na b : E\nr : ℝ\n⊢ a * b ∈ Metric.ball a r ↔ ‖b‖ < r") - Line 887
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.2721 ∈ Metric.closedBall ?m.2720 ?m.2722\nE : Type u_4\ninst✝² : TopologicalSpace E\ninst✝¹ : ENormedMonoid E\ninst✝ : SeminormedCommGroup E\na b : E\nr : ℝ\n⊢ a * b ∈ Metric.closedBall a r ↔ ‖b‖ ≤ r") - Line 888
LeanError(message='Lean error:\nsimp made no progress') - Line 889
LeanError(message='Lean error:\nsimp made no progress') - Line 890
LeanError(message='Lean error:\nsimp made no progress') - Line 891
LeanError(message='Lean error:\nsimp made no progress') - Line 892
LeanError(message='Lean error:\nsimp made no progress') - Line 893
LeanError(message='Lean error:\nsimp made no progress') - Line 894
LeanError(message='Lean error:\nsimp made no progress') - Line 895
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?a‖\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na : E\n⊢ ‖a‖ ≤ 0 ↔ a = 1") - Line 905
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.2328‖ ≤ 0\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na : E\n⊢ ¬‖a‖ ≤ 0 ↔ a ≠ 1") - Line 906
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.2057‖ = 0\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na b : E\n⊢ ‖a / b‖ = 0 ↔ a = b") - Line 909
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  0 < ‖?m.2076‖\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na b : E\n⊢ 0 < ‖a / b‖ ↔ a ≠ b") - Line 910
LeanError(message="Lean error:\ntactic 'assumption' failed\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na b : E\nh : ‖a / b‖ ≤ 0\n⊢ ‖a / b‖ ≤ 0") - Line 911
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.2273‖ = 0\nE : Type u_4\ninst✝³ : TopologicalSpace E\ninst✝² : ENormedMonoid E\ninst✝¹ : SeminormedCommGroup E\ninst✝ : NormedGroup E\na : E\n⊢ ‖a‖ = 0 ↔ a = 1") - Line 914
LeanError(message='Lean error:\ninternal exception #5') - Line 920
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2270 is not an inductive datatype') - Line 921
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1021 is not an inductive datatype') - Line 923
LeanError(message='Lean error:\nfailed to synthesize\n  PseudoMetricSpace E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 924
LeanError(message='Lean error:\nno goals to be solved') - Line 925
LeanError(message='Lean error:\ninternal exception #5') - Line 950
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto.dist Filter.tendsto_id sorry\nargument\n  sorry\nhas type\n  Filter.Tendsto (fun _a => x) sorry (nhds x) : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.7973 (nhds ?m.7975) (nhds ?m.7976) : Prop') - Line 962
LeanError(message='Lean error:\ntype mismatch, term\n  Continuous.dist continuous_id sorry\nafter simplification has type\n  Continuous fun b => dist b (?m.1504 b) : Prop\nbut is expected to have type\n  Continuous fun a => ‖a‖ : Prop') - Line 966
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.1827\nE : Type u_5\ninst✝¹ inst✝ : SeminormedGroup E\nx : E\n⊢ ‖x‖ ≤ 0 ↔ ‖x‖ = 0") - Line 971
LeanError(message="Lean error:\nunknown free variable '_fvar.457'") - Line 985
LeanError(message='Lean error:\n<input>:5:43: expected end of input') - Line 987
LeanError(message='Lean error:\nrcases: scrutinee has type\n  Filter.Tendsto u Filter.atTop (nhds a) : Prop\nbut is expected to have type\n  Filter.Tendsto u Filter.atTop sorry : Prop') - Line 989
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 990
LeanError(message='Lean error:\nrcases: scrutinee has type\n  h ∈ K.topologicalClosure : Prop\nbut is expected to have type\n  h ∈ sorry : Prop') - Line 994
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 997
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ∀ {r₁ r₂ : NNReal}, ↑r₁ = ↑r₂ ↔ r₁ = r₂\nwith\n  Function.Injective toFun\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝ : SeminormedAddCommGroup V₁\ntoFun : sorry → V₁ → V₂\n⊢ Function.Injective toFun") - Line 998
LeanError(message='Lean error:\nno goals to be solved') - Line 1039
LeanError(message='Lean error:\nsimp made no progress') - Line 1043
LeanError(message='Lean error:\nsimp made no progress') - Line 1053
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => ‖sorry‖ ≤ _a\nError: application type mismatch\n  ?m.3131 C₁ C₂ _a h\nargument\n  h\nhas type\n  C₃ = C₂ * C₁ : Prop\nbut is expected to have type\n  _a = C₂ * C₁ : Prop\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\ng : sorry\nC₁ C₂ C₃ : ℝ\nh : C₃ = C₂ * C₁\nhg : sorry ≤ C₂\nhf : sorry ≤ C₁\n⊢ ‖sorry‖ ≤ C₃") - Line 1056
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 1057
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 1058
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2199 h g f') - Line 1059
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1063
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.4656') - Line 1064
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1070
LeanError(message='Lean error:\n<input>:1:58: expected end of input') - Line 1071
LeanError(message='Lean error:\n<input>:2:20: expected end of input') - Line 1072
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  NormedAddGroupHom (?m.10907 f g) W') - Line 1081
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.12597') - Line 1084
LeanError(message='Lean error:\n<input>:2:15: expected rcasesPat') - Line 1092
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1094
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nE : Type u_3\ninst✝ : SeminormedAddCommGroup E\nf : ℕ → E\ng : ℕ → ℝ\nhg✝ : CauchySeq fun n => ∑ i ∈ Finset.range n, g i\nhf : ∀ (i : ℕ), ‖f i‖ ≤ g i\nε : ℝ\nhε : ε > 0\nN n : ℕ\nhn : n ≥ N\nhg : ‖∑ i ∈ Finset.range n, g i - ∑ i ∈ Finset.range N, g i‖ < ε\n⊢ dist (∑ i ∈ Finset.range n, f i) (∑ i ∈ Finset.range N, f i) < ε") - Line 1096
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1102
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  IsClosed ((fun a => ‖a‖) ⁻¹' {?m.777})\nwith\n  IsClosed ↑(nullSubgroup M)\nM : Type u_1\ninst✝ : SeminormedCommGroup M\n⊢ IsClosed ↑(nullSubgroup M)") - Line 1111
LeanError(message='Lean error:\nsimp made no progress') - Line 1118
LeanError(message='Lean error:\nsimp made no progress') - Line 1119
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1\nM : Type u_1\ninst✝ : SeminormedCommGroup M\nS : Subgroup M\nthis : ∀ (ε : ℝ), sorry '' sorry = {x | ‖x‖ < ε}\n⊢ (nhds 1).HasBasis (fun ε => 0 < ε) fun ε => {x | ‖x‖ < ε}") - Line 1120
LeanError(message='Lean error:\ninternal exception #5') - Line 1121
LeanError(message='Lean error:\ninternal exception #5') - Line 1123
LeanError(message='Lean error:\ninternal exception #5') - Line 1124
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.3161 → ∃ s ∈ S, ‖m * s‖ < ‖?m.1947‖ + ε\nM : Type u_1\ninst✝ : SeminormedCommGroup M\nx✝ : Sort u_2\nmk' : x✝\nS : Subgroup M\nm : M\nε : ℝ\nhε : 0 < ε\n⊢ ∃ s ∈ S, ‖m * s‖ < ‖?m.1947‖ + ε") - Line 1126
LeanError(message='Lean error:\nsimp made no progress') - Line 1129
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  AddGroup ?m.4089') - Line 1143
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1151
LeanError(message='Lean error:\ntype mismatch\n  le_antisymm sorry ?m.1533\nhas type\n  ?m.1328 = ?m.1329 : Prop\nbut is expected to have type\n  ‖sorry‖ = 1 : Prop') - Line 1152
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SeminormedAddCommGroup ?m.1560') - Line 1153
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1155
LeanError(message='Lean error:\ninternal exception #5') - Line 1164
LeanError(message='Lean error:\n<input>:2:18: expected end of input') - Line 1238
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1239
LeanError(message='Lean error:\napplication type mismatch\n  le_of_tendsto (Filter.Tendsto.comp tendsto_norm ?m.5174)\nargument\n  Filter.Tendsto.comp tendsto_norm ?m.5174\nhas type\n  Filter.Tendsto ((fun a => ‖a‖) ∘ ?m.4529) ?m.4531 (nhds ‖?m.4512‖) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => ‖f n k‖) 𝓕 (nhds sorry) : Prop') - Line 1240
LeanError(message='Lean error:\ninternal exception #5') - Line 1241
LeanError(message='Lean error:\ninternal exception #5') - Line 1242
LeanError(message='Lean error:\ninternal exception #5') - Line 1244
LeanError(message='Lean error:\ninternal exception #5') - Line 1245
LeanError(message='Lean error:\nsimp made no progress') - Line 1253
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?a‖\nE : Type u_2\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\na b : E\n⊢ dist a (a * b) = ‖b‖") - Line 1266
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a (?a * ?b)\nE : Type u_2\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\na b : E\n⊢ dist a (a * b) = ‖b‖") - Line 1267
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a (?a * ?b)\nE : Type u_2\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\na b : E\n⊢ dist a (a * b⁻¹) = ‖b‖") - Line 1268
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a (?a / ?b)\nE : Type u_2\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\na b : E\n⊢ dist a (a / b) = ‖b‖") - Line 1269
LeanError(message='Lean error:\ntype mismatch, term\n  dist_triangle sorry sorry sorry\nafter simplification has type\n  dist sorry sorry ≤ dist sorry sorry + dist sorry sorry : Prop\nbut is expected to have type\n  dist (a₁ * a₂) (b₁ * b₂) ≤ dist a₁ b₁ + dist a₂ b₂ : Prop') - Line 1270
LeanError(message='Lean error:\ntype mismatch, term\n  abs_dist_sub_le sorry sorry sorry\nafter simplification has type\n  |dist sorry sorry - dist sorry sorry| ≤ dist sorry sorry : Prop\nbut is expected to have type\n  |dist a₁ b₁ - dist a₂ b₂| ≤ dist (a₁ * a₂) (b₁ * b₂) : Prop') - Line 1274
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  nndist\n      (@HMul.hMul ?E ?E ?E\n        (@instHMul ?E\n          (@MulOneClass.toMul ?E\n            (@Monoid.toMulOneClass ?E\n              (@DivInvMonoid.toMonoid ?E\n                (@Group.toDivInvMonoid ?E (@SeminormedGroup.toGroup ?E SeminormedCommGroup.toSeminormedGroup))))))\n        ?a₁ ?a₂)\n      (?b₁ * ?b₂) ≤\n    nndist ?a₁ ?b₁ + nndist ?a₂ ?b₂\nwith\n  nndist\n      (@HMul.hMul E E E\n        (@instHMul E\n          (@MulOneClass.toMul E\n            (@Monoid.toMulOneClass E\n              (@DivInvMonoid.toMonoid E (@Group.toDivInvMonoid E (@SeminormedGroup.toGroup E inst✝¹))))))\n        a₁ a₂)\n      (b₁ * b₂) ≤\n    nndist a₁ b₁ + nndist a₂ b₂\nE : Type u_2\ninst✝¹ : SeminormedGroup E\ninst✝ : SeminormedCommGroup E\na₁ a₂ b₁ b₂ : E\n⊢ nndist (a₁ * a₂) (b₁ * b₂) ≤ nndist a₁ b₁ + nndist a₂ b₂") - Line 1276
LeanError(message='Lean error:\ninternal exception #5') - Line 1294
LeanError(message="Lean error:\n<input>:1:38: expected ',' or 'in'") - Line 1296
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1320 is not an inductive datatype') - Line 1297
LeanError(message='Lean error:\nno goals to be solved') - Line 1306
LeanError(message='Lean error:\nno goals to be solved') - Line 1310
LeanError(message='Lean error:\nno goals to be solved') - Line 1311
LeanError(message='Lean error:\n<input>:1:37: expected end of input') - Line 1313
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  SeminormedAddCommGroup ?m.953') - Line 1317
LeanError(message='Lean error:\ninternal exception #5') - Line 1318
LeanError(message="Lean error:\nunknown constant 'explicitCokernel.map'") - Line 1323
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.12608\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_5\ninst✝¹ : Finite ι\nα : ι → Type u_6\ninst✝ : (i : ι) → PseudoMetricSpace (α i)\nf g : PiLp ⊤ α\nx✝ : ?m.12608\n⊢ ⨆ i, edist (f i) (g i) ≠ ⊤") - Line 1359
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11592 is not an inductive datatype') - Line 1360
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.12179 is not an inductive datatype') - Line 1362
LeanError(message='Lean error:\ninternal exception #5') - Line 1363
LeanError(message='Lean error:\ninternal exception #5') - Line 1382
LeanError(message='Lean error:\nsimp made no progress') - Line 1383
LeanError(message='Lean error:\nsimp made no progress') - Line 1385
LeanError(message='Lean error:\ninternal exception #5') - Line 1388
LeanError(message='Lean error:\ninternal exception #5') - Line 1390
LeanError(message='Lean error:\nsimp made no progress') - Line 1391
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nndist ?a ?b\np : ENNReal\nι : Type u_2\nβ : ι → Type u_4\ninst✝¹⁰ : (i : ι) → SeminormedAddCommGroup (β i)\ninst✝⁹ : (i : ι) → EDist (β i)\ninst✝⁸ : (i : ι) → PseudoEMetricSpace (β i)\ninst✝⁷ : (i : ι) → Norm (β i)\ninst✝⁶ : Fact (1 ≤ p)\ninst✝⁵ : (i : ι) → PseudoEMetricSpace (β i)\ninst✝⁴ inst✝³ : Fintype ι\ninst✝² inst✝¹ : (i : ι) → SeminormedAddCommGroup (β i)\ninst✝ : DecidableEq ι\ni : ι\nb₁ b₂ : β i\n⊢ nndist ((WithLp.equiv p ((i : ι) → β i)).symm (Pi.single i b₁))\n      ((WithLp.equiv p ((i : ι) → β i)).symm (Pi.single i b₂)) =\n    nndist b₁ b₂") - Line 1403
LeanError(message='Lean error:\nsimp made no progress') - Line 1405
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.64355 is not an inductive datatype') - Line 1406
LeanError(message='Lean error:\n<input>:1:17: expected token') - Line 1407
LeanError(message="Lean error:\nunknown free variable '_fvar.67089'") - Line 1412
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1435
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.13077 is not an inductive datatype') - Line 1443
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.13580 is not an inductive datatype') - Line 1445
LeanError(message='Lean error:\ninternal exception #5') - Line 1446
LeanError(message='Lean error:\ninternal exception #5') - Line 1472
LeanError(message='Lean error:\nsimp made no progress') - Line 1475
LeanError(message='Lean error:\nsimp made no progress') - Line 1477
LeanError(message='Lean error:\nsimp made no progress') - Line 1479
LeanError(message='Lean error:\ninternal exception #5') - Line 1480
LeanError(message='Lean error:\ninternal exception #5') - Line 1482
LeanError(message='Lean error:\nsimp made no progress') - Line 1483
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1486
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1487
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nndist ?a ?b\np : ENNReal\nα : Type u_1\nβ : Type u_2\ninst✝²³ : AddCommGroup α\ninst✝²² : AddCommGroup β\ninst✝²¹ : EDist α\ninst✝²⁰ : EDist β\ninst✝¹⁹ : PseudoEMetricSpace α\ninst✝¹⁸ : PseudoEMetricSpace β\ninst✝¹⁷ : Dist α\ninst✝¹⁶ : Dist β\ninst✝¹⁵ : Norm α\ninst✝¹⁴ : Norm β\nhp✝ : Fact (1 ≤ p)\ninst✝¹³ : T0Space α\ninst✝¹² : T0Space β\ninst✝¹¹ : UniformSpace α\ninst✝¹⁰ : UniformSpace β\ninst✝⁹ : CompleteSpace α\ninst✝⁸ : CompleteSpace β\ninst✝⁷ : TopologicalSpace α\ninst✝⁶ : TopologicalSpace β\ninst✝⁵ : AddCommGroup α\ninst✝⁴ : AddCommGroup β\nhp : Fact (1 ≤ p)\ninst✝³ : SeminormedAddCommGroup α\ninst✝² : SeminormedAddCommGroup β\ninst✝¹ : SeminormedAddCommGroup α\ninst✝ : SeminormedAddCommGroup β\nx₁ x₂ : α\n⊢ nndist ((WithLp.equiv p (α × β)).symm (x₁, 0)) ((WithLp.equiv p (α × β)).symm (x₂, 0)) = nndist x₁ x₂") - Line 1490
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nndist ?a ?b\np : ENNReal\nα : Type u_1\nβ : Type u_2\ninst✝²³ : AddCommGroup α\ninst✝²² : AddCommGroup β\ninst✝²¹ : EDist α\ninst✝²⁰ : EDist β\ninst✝¹⁹ : PseudoEMetricSpace α\ninst✝¹⁸ : PseudoEMetricSpace β\ninst✝¹⁷ : Dist α\ninst✝¹⁶ : Dist β\ninst✝¹⁵ : Norm α\ninst✝¹⁴ : Norm β\nhp✝ : Fact (1 ≤ p)\ninst✝¹³ : T0Space α\ninst✝¹² : T0Space β\ninst✝¹¹ : UniformSpace α\ninst✝¹⁰ : UniformSpace β\ninst✝⁹ : CompleteSpace α\ninst✝⁸ : CompleteSpace β\ninst✝⁷ : TopologicalSpace α\ninst✝⁶ : TopologicalSpace β\ninst✝⁵ : AddCommGroup α\ninst✝⁴ : AddCommGroup β\nhp : Fact (1 ≤ p)\ninst✝³ : SeminormedAddCommGroup α\ninst✝² : SeminormedAddCommGroup β\ninst✝¹ : SeminormedAddCommGroup α\ninst✝ : SeminormedAddCommGroup β\ny₁ y₂ : β\n⊢ nndist ((WithLp.equiv p (α × β)).symm (0, y₁)) ((WithLp.equiv p (α × β)).symm (0, y₂)) = nndist y₁ y₂") - Line 1491
LeanError(message='Lean error:\nsimp made no progress') - Line 1494
LeanError(message='Lean error:\nsimp made no progress') - Line 1495
LeanError(message='Lean error:\ninternal exception #5') - Line 1499
LeanError(message='Lean error:\ninternal exception #5') - Line 1500
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a = (‖sorry‖ ^ p.toReal + ‖sorry‖ ^ p.toReal) ^ (1 / p.toReal)\nError: unknown free variable '_fvar.51674'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nα : Type u_2\nβ : Type u_3\ninst✝²⁴ : AddCommGroup α\ninst✝²³ : AddCommGroup β\ninst✝²² : EDist α\ninst✝²¹ : EDist β\ninst✝²⁰ : PseudoEMetricSpace α\ninst✝¹⁹ : PseudoEMetricSpace β\ninst✝¹⁸ : Dist α\ninst✝¹⁷ : Dist β\ninst✝¹⁶ : Norm α\ninst✝¹⁵ : Norm β\ninst✝¹⁴ : T0Space α\ninst✝¹³ : T0Space β\ninst✝¹² : UniformSpace α\ninst✝¹¹ : UniformSpace β\ninst✝¹⁰ : CompleteSpace α\ninst✝⁹ : CompleteSpace β\ninst✝⁸ : TopologicalSpace α\ninst✝⁷ : TopologicalSpace β\ninst✝⁶ : AddCommGroup α\ninst✝⁵ : AddCommGroup β\ninst✝⁴ : SeminormedAddCommGroup α\ninst✝³ : SeminormedAddCommGroup β\ninst✝² : SeminormedAddCommGroup α\ninst✝¹ : SeminormedAddCommGroup β\np : ENNReal\nx✝¹ : Sort u_4\nidemFst : x✝¹\nx✝ : Sort u_5\nidemSnd : x✝\ninst✝ : Fact (1 ≤ p)\nhp : 0 < p.toReal\nx : WithLp p (α × β)\n⊢ ‖x‖ = (‖sorry‖ ^ p.toReal + ‖sorry‖ ^ p.toReal) ^ (1 / p.toReal)") - Line 1502
LeanError(message='Lean error:\ninternal exception #5') - Line 1503
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1519
LeanError(message='Lean error:\nfailed to synthesize\n  (i : α) → NormedAddCommGroup (E i)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1520
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 1526
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 1528
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 1529
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 1530
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1532
LeanError(message='Lean error:\ninternal exception #5') - Line 1548
LeanError(message='Lean error:\ninternal exception #5') - Line 1549
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1550
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1551
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1552
LeanError(message='Lean error:\ninternal exception #5') - Line 1553
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1554
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 1558
LeanError(message='Lean error:\ninternal exception #5') - Line 1559
LeanError(message='Lean error:\nno goals to be solved') - Line 1560
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.12247‖ ≤ C\nα : Type u_3\nE : α → Type u_4\np : ENNReal\ninst✝ : (i : α) → NormedAddCommGroup (E i)\nhp : 0 < p.toReal\nC : ℝ\nhC : 0 ≤ C\nf : ↥(lp E p)\nhf : ∑' (i : α), ‖↑f i‖ ^ p.toReal ≤ C ^ p.toReal\n⊢ ‖f‖ ≤ C") - Line 1562
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1567
LeanError(message='Lean error:\ninternal exception #5') - Line 1568
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 1569
LeanError(message='Lean error:\nrcases tactic failed: x✝¹ : ?m.231904 is not an inductive datatype') - Line 1573
LeanError(message='Lean error:\n<input>:1:65: expected token') - Line 1583
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  UniformContinuous ?m.661728\nα : Type u_3\nE : α → Type u_4\np : ENNReal\ninst✝³ : (i : α) → NormedAddCommGroup (E i)\ninst✝² : (i : α) → StarAddMonoid (E i)\ninst✝¹ : ∀ (i : α), NormedStarGroup (E i)\ninst✝ : DecidableEq α\n_i : Fact (1 ≤ p)\nhp : p ≠ 0\ni : α\n⊢ UniformContinuous fun x => ↑x i") - Line 1603
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.norm ?m.691594\nhas type\n  Filter.Tendsto (fun x => ‖?m.691422 x‖) ?m.691421 (nhds ‖?m.691420‖) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun k => sorry) l sorry : Prop') - Line 1604
LeanError(message='Lean error:\ninternal exception #5') - Line 1605
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.724250 is not an inductive datatype') - Line 1606
LeanError(message='Lean error:\ninternal exception #5') - Line 1608
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1610
LeanError(message='Lean error:\nfailed to synthesize\n  PseudoMetricSpace α\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1611
LeanError(message='Lean error:\ntype mismatch\n  Submodule.exists_isCompl ?m.4800\nhas type\n  ∃ (q : Submodule ?m.4662 ?m.4663), IsCompl ?m.4800 q : Prop\nbut is expected to have type\n  ∃ (q : Subspace 𝕜 E), IsCompl p q : Prop') - Line 1622
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?r‖ * ‖?x‖\n𝕜 : Type u_1\nE : Type u_3\ninst✝² : NormedField 𝕜\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nn : ℤ\nx : E\n⊢ ‖n • x‖ = ‖↑n‖ * ‖x‖") - Line 1626
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6184 is not an inductive datatype') - Line 1630
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1633
LeanError(message="Lean error:\ntype mismatch\n  norm_smul ?m.7128 ?m.7129\nhas type\n  ‖@HSMul.hSMul ?m.7122 ?m.7123 ?m.7123 (@instHSMul ?m.7122 ?m.7123 SMulZeroClass.toSMul) ?m.7128 ?m.7129‖ =\n    ‖?m.7128‖ * ‖?m.7129‖ : Prop\nbut is expected to have type\n  ‖@HSMul.hSMul 𝕜 𝕜' 𝕜' (@instHSMul 𝕜 𝕜' Algebra.toSMul) x 1‖ = ‖x‖ * ‖1‖ : Prop") - Line 1634
LeanError(message='Lean error:\nsimp made no progress') - Line 1636
LeanError(message='Lean error:\nsimp made no progress') - Line 1639
LeanError(message='Lean error:\nno goals to be solved') - Line 1642
LeanError(message='Lean error:\napplication type mismatch\n  Metric.mem_nhds_iff.mp hs\nargument\n  hs\nhas type\n  sorry : Prop\nbut is expected to have type\n  ?m.18952 ∈ nhds ?m.18951 : Prop') - Line 1643
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4790 is not an inductive datatype') - Line 1653
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4886 is not an inductive datatype') - Line 1654
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 1657
LeanError(message='Lean error:\nsimp made no progress') - Line 1658
LeanError(message='Lean error:\nsimp made no progress') - Line 1659
LeanError(message='Lean error:\ninternal exception #5') - Line 1662
LeanError(message="Lean error:\nunknown free variable '_fvar.282'") - Line 1663
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  LinearMap.SeparatingLeft ?m.887\nx✝ : Sort u_4\ndualPairing : x✝\n⊢ sorry") - Line 1665
LeanError(message='Lean error:\ntype mismatch\n  Eq.symm RCLike.norm_coe_norm\nhas type\n  ‖?m.9505‖ = ‖↑‖?m.9505‖‖ : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 1666
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a ↔ ∀ (g : sorry), ?m.957 = ?m.960\nError: unknown free variable '_fvar.931'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nE : Type u\ninst✝ : NormedAddCommGroup E\nx✝ : Sort u_4\nDual : x✝\nx y : E\n⊢ x = y ↔ ∀ (g : sorry), ?m.957 = ?m.960") - Line 1669
LeanError(message='Lean error:\ninternal exception #5') - Line 1673
LeanError(message='Lean error:\nno goals to be solved') - Line 1677
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1679
LeanError(message='Lean error:\nsimp made no progress') - Line 1680
LeanError(message='Lean error:\nsimp made no progress') - Line 1682
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1683
LeanError(message='Lean error:\ninternal exception #5') - Line 1684
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.9679\n𝕜 : Type u_6\nE : Type u_7\ninst✝² : RCLike 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nr : ℝ\nhr : 0 < r\n⊢ ⋂₀ ((NormedSpace.dualPairing 𝕜 E).flip.polar '' {F | F.Finite ∧ F ⊆ Metric.closedBall 0 r⁻¹}) =\n    (NormedSpace.dualPairing 𝕜 E).flip.polar (Metric.closedBall 0 r⁻¹)") - Line 1689
LeanError(message='Lean error:\ninternal exception #5') - Line 1690
LeanError(message='Lean error:\napplication type mismatch\n  LinearMap.det f\nargument\n  f\nhas type\n  sorry : Type (max ?u.30996 ?u.30997)\nbut is expected to have type\n  ?m.43801 f →ₗ[?m.37416] ?m.43801 f : Type ?u.34944') - Line 1699
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.5762 → ∀ᶠ (g : ι → E) in nhds f, LinearIndependent 𝕜 g\n𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nE : Type v\ninst✝¹ : NormedAddCommGroup E\nι : Type u_8\ninst✝ : Finite ι\nf : ι → E\nhf : sorry\n⊢ ∀ᶠ (g : ι → E) in nhds f, LinearIndependent 𝕜 g") - Line 1705
LeanError(message='Lean error:\nsimp made no progress') - Line 1707
LeanError(message='Lean error:\ntype mismatch, term\n  NNReal.coe_le_coe.mpr sorry\nafter simplification has type\n  ?m.27214 ≤ ?m.27215 : Prop\nbut is expected to have type\n  sorry () ≤ Fintype.card ι • ‖sorry ()‖ * M : Prop') - Line 1709
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type (max u_9 v)), ∃ C > 0, ∀ {u : x} (M : NNReal), (∀ (i : ?m.7745 v C M), ‖sorry‖₊ ≤ M) → sorry ≤ C * M\nF : Type u_9\nι : Type u_8\ninst✝ : Finite ι\nv : sorry\n⊢ ∃ C > 0, ∀ {u : sorry} (M : NNReal), (∀ (i : ?m.7745 v C M), ‖sorry‖₊ ≤ M) → sorry ≤ C * M") - Line 1710
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type (max u_9 v)), ∃ C > 0, ∀ {u : x} {M : ℝ}, 0 ≤ M → (∀ (i : ?m.7729 v C), ‖sorry‖ ≤ M) → sorry ≤ C * M\nF : Type u_9\nι : Type u_8\ninst✝ : Finite ι\nv : sorry\n⊢ ∃ C > 0, ∀ {u : sorry} {M : ℝ}, 0 ≤ M → (∀ (i : ?m.7729 v C), ‖sorry‖ ≤ M) → sorry ≤ C * M") - Line 1711
LeanError(message='Lean error:\napplication type mismatch\n  And.intro (Finset.finite_toSet ?m.9986)\nargument\n  Finset.finite_toSet ?m.9986\nhas type\n  (↑?m.9986).Finite : Prop\nbut is expected to have type\n  Set.Finite ?m.9975 : Prop') - Line 1713
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ∃ f, (ℕ → sorry ≤ R) ∧ Pairwise (Function.onFun (fun x y => 1 ≤ ‖sorry‖) f)\nwith\n  ∃ f, (∀ (n : ℕ), ‖f n‖ ≤ R) ∧ Pairwise fun m n => 1 ≤ ‖f m - f n‖\n𝕜 : Type u\ninst✝¹ : NontriviallyNormedField 𝕜\nE : Type v\ninst✝ : NormedAddCommGroup E\nc : 𝕜\nhc : 1 < ‖c‖\nR : ℝ\nhR : ‖c‖ < R\nh : ¬sorry\nthis : sorry\n⊢ ∃ f, (∀ (n : ℕ), ‖f n‖ ≤ R) ∧ Pairwise fun m n => 1 ≤ ‖f m - f n‖") - Line 1714
LeanError(message="Lean error:\napplication type mismatch\n  exists_seq_norm_le_one_le_norm_sub' ?m.4996 A\nargument\n  A\nhas type\n  sorry < sorry + 1 : Prop\nbut is expected to have type\n  ‖?m.4963‖ < ?m.4997 : Prop") - Line 1715
LeanError(message='Lean error:\ntype mismatch\n  exists_seq_norm_le_one_le_norm_sub sorry\nhas type\n  ∃ R f, 1 < R ∧ (∀ (n : ℕ), ‖f n‖ ≤ R) ∧ Pairwise fun m n => 1 ≤ ‖f m - f n‖ : Prop\nbut is expected to have type\n  ∃ R f, 1 < R ∧ (ℕ → sorry ≤ R) ∧ Pairwise fun m n => 1 ≤ ‖sorry‖ : Prop') - Line 1716
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4247 is not an inductive datatype') - Line 1721
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.14286 is not an inductive datatype') - Line 1726
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 1727
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2671 is not an inductive datatype') - Line 1736
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1948 is not an inductive datatype') - Line 1737
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3499 is not an inductive datatype') - Line 1738
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4566 is not an inductive datatype') - Line 1739
LeanError(message="Lean error:\nunknown free variable '_fvar.122'") - Line 1740
LeanError(message="Lean error:\n<input>:1:25: unexpected end of input; expected '['") - Line 1742
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 1743
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1744
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  IsBoundedSMul ?m.32252 ?m.32253') - Line 1748
LeanError(message='Lean error:\nsimp made no progress') - Line 1763
LeanError(message='Lean error:\nrcases tactic failed: hf : sorry is not an inductive datatype') - Line 1792
LeanError(message='Lean error:\ninternal exception #4') - Line 1815
LeanError(message='Lean error:\ntype mismatch\n  nonempty_interior_of_iUnion_of_closed (fun n => isClosed_closure) ?m.23080\nhas type\n  ∃ i, (interior (closure (?m.21890 i))).Nonempty : Prop\nbut is expected to have type\n  ∃ n x, x ∈ sorry : Prop') - Line 1818
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.18139 is not an inductive datatype') - Line 1819
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 1826
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\n𝕜 : Type u_1\n𝕜' : Type u_2\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NontriviallyNormedField 𝕜'\nσ : 𝕜 →+* 𝕜'\nE : Type u_3\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nF : Type u_4\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜' F\nσ' : 𝕜' →+* 𝕜\ninst✝⁴ : RingHomInvPair σ σ'\ninst✝³ : RingHomIsometric σ\ninst✝² : RingHomIsometric σ'\ninst✝¹ : CompleteSpace F\ninst✝ : CompleteSpace E\nx✝ : Sort u_5\nnonlinearRightInverseOfSurjective : x✝\nf : E →SL[σ] F\nhsurj : LinearMap.range f = ⊤\n⊢ 0 < sorry") - Line 1827
LeanError(message='Lean error:\ninternal exception #5') - Line 1828
LeanError(message='Lean error:\ndsimp made no progress') - Line 1834
LeanError(message='Lean error:\nno goals to be solved') - Line 1858
LeanError(message='Lean error:\nno goals to be solved') - Line 1859
LeanError(message='Lean error:\ninternal exception #5') - Line 1861
LeanError(message='Lean error:\ninternal exception #5') - Line 1874
LeanError(message='Lean error:\ninternal exception #5') - Line 1875
LeanError(message='Lean error:\ninternal exception #5') - Line 1876
LeanError(message='Lean error:\ninternal exception #5') - Line 1877
LeanError(message='Lean error:\ninternal exception #5') - Line 1878
LeanError(message='Lean error:\ninternal exception #5') - Line 1879
LeanError(message='Lean error:\nsimp made no progress') - Line 1893
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Metric.thickening ?δ ?s\nα : Type u_1\ninst✝² : NormedCommGroup α\ninst✝¹ : PartialOrder α\ninst✝ : IsOrderedMonoid α\ns : Set α\nhs : IsLowerSet s\nε : ℝ\n⊢ IsLowerSet (Metric.thickening ε s)") - Line 2072
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.2298\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → ℝ)\nx y : ι → ℝ\nhs : IsUpperSet s\nhx : x ∈ closure s\nh : ∀ (i : ι), x i < y i\nx✝ : ?m.2298\n⊢ y ∈ interior s") - Line 2075
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.2298\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → ℝ)\nx y : ι → ℝ\nhs : IsLowerSet s\nhx : x ∈ closure s\nh : ∀ (i : ι), y i < x i\nx✝ : ?m.2298\n⊢ y ∈ interior s") - Line 2076
LeanError(message='Lean error:\nsimp made no progress') - Line 2077
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2083
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2084
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.3155\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_2\ninst✝² : Finite ι\ninst✝¹ : Fintype ι\ninst✝ : Finite ι\ns : Set (ι → ℝ)\nhs : IsClosed s\nhs' : BddBelow s\nx✝ : ?m.3155\n⊢ IsClosed ↑(upperClosure s)") - Line 2085
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.3155\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_2\ninst✝² : Finite ι\ninst✝¹ : Fintype ι\ninst✝ : Finite ι\ns : Set (ι → ℝ)\nhs : IsClosed s\nhs' : BddAbove s\nx✝ : ?m.3155\n⊢ IsClosed ↑(lowerClosure s)") - Line 2086
LeanError(message='Lean error:\nfailed to synthesize\n  HasSolidNorm α\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2093
LeanError(message='Lean error:\ninternal exception #5') - Line 2095
LeanError(message='Lean error:\ninternal exception #5') - Line 2096
LeanError(message='Lean error:\ninternal exception #5') - Line 2097
LeanError(message='Lean error:\ninternal exception #5') - Line 2098
LeanError(message='Lean error:\ninternal exception #5') - Line 2107
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  {p | sorry}\nG : Type u_3\ninst✝⁴ : AddCommGroup G\ninst✝³ : PartialOrder G\ninst✝² : IsOrderedAddMonoid G\ninst✝¹ : TopologicalSpace G\ninst✝ : ContinuousSub G\nh : IsClosed {x | 0 ≤ x}\nthis : {p | sorry} = (fun p => sorry) ⁻¹' {x | sorry}\n⊢ IsClosed {p | p.1 ≤ p.2}") - Line 2108
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2130
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2139
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 2140
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2143
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7090 is not an inductive datatype') - Line 2157
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2162
LeanError(message="Lean error:\n<input>:1:11: unexpected end of input; expected '['") - Line 2164
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2169
LeanError(message='Lean error:\ntype mismatch\n  norm_nonneg ?m.3989\nhas type\n  0 ≤ @norm ?m.3987 SeminormedAddGroup.toNorm ?m.3989 : Prop\nbut is expected to have type\n  0 x✝ ≤ @norm R NormedRing.toNorm (g x✝) : Prop') - Line 2172
LeanError(message='Lean error:\nsimp made no progress') - Line 2176
LeanError(message='Lean error:\nsimp made no progress') - Line 2177
LeanError(message='Lean error:\nsimp made no progress') - Line 2178
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2179
LeanError(message='Lean error:\nsimp made no progress') - Line 2180
LeanError(message='Lean error:\ninternal exception #5') - Line 2196
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a 0\nR : Type u_1\ninst✝¹ : NormedRing R\ninst✝ : HasSummableGeomSeries R\nx : Rˣ\na✝ : Nontrivial R\nt : R\nht : dist t 0 < sorry⁻¹\n⊢ Ring.inverse (↑x + t) = Ring.inverse (1 + ↑x⁻¹ * t) * ↑x⁻¹") - Line 2197
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 2198
LeanError(message="Lean error:\ntype mismatch\n  Continuous.tendsto' (mulLeft_continuous ?m.8062) ?m.8391 ?m.8392 ?m.12253\nhas type\n  Filter.Tendsto (⇑(AddMonoidHom.mulLeft ?m.8062)) (nhds ?m.8391) (nhds ?m.8392) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x => sorry) sorry sorry : Prop") - Line 2200
LeanError(message='Lean error:\nno goals to be solved') - Line 2202
LeanError(message='Lean error:\nno goals to be solved') - Line 2203
LeanError(message='Lean error:\nno goals to be solved') - Line 2205
LeanError(message='Lean error:\ninternal exception #5') - Line 2206
LeanError(message='Lean error:\napplication type mismatch\n  mt h one_not_mem_nonunits\nargument\n  one_not_mem_nonunits\nhas type\n  1 ∉ nonunits ?m.3086 : Prop\nbut is expected to have type\n  sorry ∉ nonunits R : Prop') - Line 2210
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 2225
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 2226
LeanError(message='Lean error:\ninternal exception #5') - Line 2229
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 2230
LeanError(message='Lean error:\napplication type mismatch\n  ge_of_tendsto hlim\nargument\n  hlim\nhas type\n  Filter.Tendsto (fun n => C ^ (1 / ↑n) * sorry) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.2233 ?m.2236 (nhds (nα x)) : Prop') - Line 2232
LeanError(message='Lean error:\napplication type mismatch\n  ⟨hs0, hs⟩\nargument\n  hs\nhas type\n  ∀ (a : α), g a ≤ s * f a : Prop\nbut is expected to have type\n  ∀ (x : ?m.3766), ?m.3764 ((RingHom.id ?m.3766) x) ≤ s * ?m.2685 x : Prop') - Line 2234
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  AlgebraNorm R S') - Line 2235
LeanError(message='Lean error:\nsimp made no progress') - Line 2236
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2237
LeanError(message='Lean error:\nsimp made no progress') - Line 2239
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2240
LeanError(message='Lean error:\nno goals to be solved') - Line 2242
LeanError(message='Lean error:\n<input>:2:17: expected end of input') - Line 2243
LeanError(message='Lean error:\n<input>:2:11: expected end of input') - Line 2245
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  -?a * ?b\ncase refine_2.e_s.h\nR : Type u_1\ninst✝ : CommRing R\nf : R → ℝ\nf_neg : ∀ (x : R), f (-x) = f x\nx y : R\n⊢ f sorry / f y = f (x * y) / f y") - Line 2246
LeanError(message='Lean error:\nfailed to synthesize\n  Nonempty R\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2247
LeanError(message='Lean error:\nsimp made no progress') - Line 2248
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2249
LeanError(message='Lean error:\nno goals to be solved') - Line 2250
LeanError(message='Lean error:\nno goals to be solved') - Line 2251
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2252
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2253
LeanError(message='Lean error:\ninternal exception #5') - Line 2254
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2256
LeanError(message='Lean error:\ninternal exception #5') - Line 2257
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2262
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 2263
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 2264
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2265
LeanError(message='Lean error:\ntype mismatch\n  LinearIndepOn.id_singleton ?m.7484 one_ne_zero\nhas type\n  LinearIndepOn ?m.7484 id {1} : Prop\nbut is expected to have type\n  sorry : Prop') - Line 2266
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3905 is not an inductive datatype') - Line 2272
LeanError(message='Lean error:\ninternal exception #5') - Line 2276
LeanError(message='Lean error:\nrcases tactic failed: hfg : sorry is not an inductive datatype') - Line 2289
LeanError(message='Lean error:\nrcases tactic failed: hfg : sorry is not an inductive datatype') - Line 2290
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2291
LeanError(message="Lean error:\n<input>:1:48: unexpected end of input; expected '['") - Line 2292
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2294
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1 * ?a\nR : Type u_1\ninst✝ : CommRing R\nc : R\nf : RingSeminorm R\nn : ℕ\nhn : 1 ≤ n\n⊢ f (1 * c ^ n) / f c ^ n = 1") - Line 2299
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2300
LeanError(message='Lean error:\nno goals to be solved') - Line 2305
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 2306
LeanError(message='Lean error:\ninternal exception #5') - Line 2311
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 2314
LeanError(message='Lean error:\ntype mismatch, term\n  tendsto_atTop_of_eventually_const h0\nafter simplification has type\n  Filter.Tendsto (fun i => μ sorry ^ (1 / ↑i)) Filter.atTop (nhds 0) : Prop\nbut is expected to have type\n  Filter.Tendsto (smoothingSeminormSeq μ x) Filter.atTop (nhds (smoothingFun μ x)) : Prop') - Line 2317
LeanError(message='Lean error:\n<input>:1:73: unterminated comment') - Line 2318
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  smoothingFun μ sorry ≤ ?m.652\nwith\n  smoothingFun μ 1 ≤ 1\nR : Type u_1\ninst✝ : CommRing R\nμ : RingSeminorm R\nhμ1 : μ 1 ≤ 1\n⊢ smoothingFun μ 1 ≤ 1") - Line 2321
LeanError(message='Lean error:\nno goals to be solved') - Line 2323
LeanError(message='Lean error:\napplication type mismatch\n  div_nonneg (Nat.cast_nonneg sorry)\nargument\n  Nat.cast_nonneg sorry\nhas type\n  0 ≤ ↑sorry : Prop\nbut is expected to have type\n  0 ≤ sorry : Prop') - Line 2326
LeanError(message='Lean error:\n<input>:11:13: expected end of input') - Line 2328
LeanError(message='Lean error:\nno goals to be solved') - Line 2329
LeanError(message='Lean error:\ninternal exception #5') - Line 2331
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2332
LeanError(message='Lean error:\n<input>:2:81: unexpected end of input') - Line 2334
LeanError(message="Lean error:\napplication type mismatch\n  le_mul_of_one_le_left' hm\nargument\n  hm\nhas type\n  (1 : ℕ) ≤ m : Prop\nbut is expected to have type\n  (1 : Unit) ≤ ?m.6023 n : Prop") - Line 2336
LeanError(message='Lean error:\ninternal exception #5') - Line 2337
LeanError(message='Lean error:\n<input>:6:4: expected end of input') - Line 2338
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  smoothingFun μ sorry = ?m.3408\nwith\n  smoothingFun μ (x * y) = smoothingFun μ x * smoothingFun μ y\nR : Type u_1\ninst✝ : CommRing R\nμ : RingSeminorm R\nhμ1 : μ 1 ≤ 1\nx : R\nhx : ∀ (y : R), μ (x * y) = μ x * μ y\ny : R\nhlim : Filter.Tendsto (fun n => μ x * sorry) Filter.atTop sorry\n⊢ smoothingFun μ (x * y) = smoothingFun μ x * smoothingFun μ y") - Line 2340
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  DualNumber R\n𝕜 : Type u_1\nR : Type u_2\ninst✝⁶ : Field 𝕜\ninst✝⁵ : CharZero 𝕜\ninst✝⁴ : CommRing R\ninst✝³ : Algebra 𝕜 R\ninst✝² : UniformSpace R\ninst✝¹ : IsTopologicalRing R\ninst✝ : T2Space R\neps : DualNumber R\nr : R\n⊢ NormedSpace.exp 𝕜 (r • eps) = 1 + r • eps") - Line 2353
LeanError(message='Lean error:\nsimp made no progress') - Line 2355
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2356
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2357
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 2374
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 2375
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2376
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 2377
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2378
LeanError(message="Lean error:\nunknown free variable '_fvar.123'") - Line 2379
LeanError(message='Lean error:\nfailed to synthesize\n  ENormedAddMonoid ε\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2384
LeanError(message='Lean error:\nfailed to synthesize\n  SeminormedAddGroup E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2389
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2390
LeanError(message='Lean error:\ninternal exception #5') - Line 2391
LeanError(message='Lean error:\ninternal exception #5') - Line 2393
LeanError(message='Lean error:\ntype mismatch, term\n  congrArg NNReal.toReal sorry\nafter simplification has type\n  ↑?m.316 = ↑?m.317 : Prop\nbut is expected to have type\n  ↑n.toNat + ↑(-n).toNat = ‖n‖ : Prop') - Line 2394
LeanError(message='Lean error:\nsimp made no progress') - Line 2395
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2396
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 2397
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2398
LeanError(message='Lean error:\nfailed to synthesize\n  NormedSpace 𝕜 E\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2400
LeanError(message='Lean error:\napplication type mismatch\n  LE.le.trans_lt (norm_nonneg ?m.1858) hR\nargument\n  hR\nhas type\n  @norm 𝕜 NormedField.toNorm c < R : Prop\nbut is expected to have type\n  @norm ?m.1856 SeminormedAddGroup.toNorm ?m.1858 < R : Prop') - Line 2403
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2404
LeanError(message='Lean error:\nno goals to be solved') - Line 2405
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2410
LeanError(message='Lean error:\n<input>:1:73: unterminated comment') - Line 2415
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7329 is not an inductive datatype') - Line 2418
LeanError(message='Lean error:\n<input>:2:15: expected token') - Line 2424
LeanError(message='Lean error:\ninternal exception #5') - Line 2425
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2427
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?b - ?a\nV : Type u_2\ninst✝ : AddCommGroup V\nx✝ : Sort u_3\ne : x✝\nx y : V\n⊢ sorry = sorry") - Line 2428
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2430
LeanError(message='Lean error:\ntype mismatch\n  hfu n x hx\nhas type\n  ‖f n x‖ ≤ u n : Prop\nbut is expected to have type\n  sorry ≤ u n : Prop') - Line 2437
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2439
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 2441
LeanError(message='Lean error:\nno goals to be solved') - Line 2444
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\nX : Type u_1\ninst✝³ : NormedAddCommGroup X\nM : Type u_2\ninst✝² : Ring M\ninst✝¹ : Module M X\ninst✝ : FaithfulSMul M X\nP Q : M\nh₁ : IsLprojection X P\nh₂ : IsLprojection X Q\nPR_eq_RPR : M → sorry → sorry\nQP_eq_QPQ : sorry\n⊢ sorry") - Line 2448
LeanError(message='Lean error:\napplication type mismatch\n  IsLprojection.mk (IsIdempotentElem.mul_of_commute sorry sorry sorry)\nargument\n  IsIdempotentElem.mul_of_commute sorry sorry sorry\nhas type\n  IsIdempotentElem (@HMul.hMul ?m.3606 ?m.3606 ?m.3606 (@instHMul ?m.3606 Semigroup.toMul) ?m.3608 ?m.3609) : Prop\nbut is expected to have type\n  IsIdempotentElem (@HMul.hMul M M M (@instHMul M Distrib.toMul) P Q) : Prop') - Line 2449
LeanError(message='Lean error:\nno goals to be solved') - Line 2450
LeanError(message='Lean error:\ninternal exception #5') - Line 2460
LeanError(message='Lean error:\ninternal exception #5') - Line 2461
LeanError(message='Lean error:\ninternal exception #5') - Line 2462
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2464
LeanError(message='Lean error:\nsimp made no progress') - Line 2465
LeanError(message='Lean error:\napplication type mismatch\n  smul_inv_smul₀ hc\nargument\n  hc\nhas type\n  c ≠ @OfNat.ofNat 𝕜 0 (@Zero.toOfNat0 𝕜 (@MulZeroClass.toZero 𝕜 NonUnitalNonAssocSemiring.toMulZeroClass)) : Prop\nbut is expected to have type\n  ?m.38025 ≠\n    @OfNat.ofNat ?m.38021 0\n      (@Zero.toOfNat0 ?m.38021 (@MulZeroClass.toZero ?m.38021 MulZeroOneClass.toMulZeroClass)) : Prop') - Line 2466
LeanError(message='Lean error:\nsimp made no progress') - Line 2467
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.55470 • ?A\ncase h\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁰ : SeminormedAddCommGroup 𝕜\ninst✝⁹ : SeminormedAddCommGroup E\ninst✝⁸ : SMulZeroClass 𝕜 E\ninst✝⁷ : IsBoundedSMul 𝕜 E\ninst✝⁶ : NormedDivisionRing 𝕜\ninst✝⁵ : SeminormedAddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : IsBoundedSMul 𝕜 E\ninst✝² : NormedField 𝕜\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nc : 𝕜\nhc : c ≠ 0\nx : E\nr : ℝ\ny : E\n⊢ y ∈ c • Metric.ball x r ↔ y ∈ Metric.ball (c • x) (‖c‖ * r)") - Line 2468
LeanError(message='Lean error:\ninternal exception #5') - Line 2469
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ ?m.55470 • ?A\ncase h\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁰ : SeminormedAddCommGroup 𝕜\ninst✝⁹ : SeminormedAddCommGroup E\ninst✝⁸ : SMulZeroClass 𝕜 E\ninst✝⁷ : IsBoundedSMul 𝕜 E\ninst✝⁶ : NormedDivisionRing 𝕜\ninst✝⁵ : SeminormedAddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : IsBoundedSMul 𝕜 E\ninst✝² : NormedField 𝕜\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nc : 𝕜\nhc : c ≠ 0\nx : E\nr : ℝ\ny : E\n⊢ y ∈ c • Metric.sphere x r ↔ y ∈ Metric.sphere (c • x) (‖c‖ * r)") - Line 2470
LeanError(message='Lean error:\nsimp made no progress') - Line 2471
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 2472
LeanError(message='Lean error:\ntype mismatch\n  (Filter.HasBasis.mem_iff Metric.nhds_basis_closedBall).mp hu\nhas type\n  ∃ i, 0 < i ∧ Metric.closedBall x i ⊆ u : Prop\nbut is expected to have type\n  ∃ ε, 0 < ε ∧ sorry ⊆ u : Prop') - Line 2474
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 2476
LeanError(message='Lean error:\ninternal exception #5') - Line 2477
LeanError(message='Lean error:\n<input>:4:27: expected end of input') - Line 2478
LeanError(message='Lean error:\n<input>:4:56: expected end of input') - Line 2479
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  sorry < δ + ε : Prop\nbut is expected to have type\n  dist ?m.68078 ?m.68079 < δ + ε : Prop') - Line 2480
LeanError(message='Lean error:\n<input>:4:39: expected end of input') - Line 2481
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.69253 is not an inductive datatype') - Line 2482
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.69253 is not an inductive datatype') - Line 2483
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.69257 is not an inductive datatype') - Line 2485
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2486
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  closure ?E\nE : Type u_2\ninst✝³ inst✝² inst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nδ : ℝ\nhδ : 0 < δ\ns : Set E\n⊢ closure (Metric.thickening δ s) = Metric.cthickening δ s") - Line 2489
LeanError(message='Lean error:\ninternal exception #5') - Line 2497
LeanError(message='Lean error:\nsimp made no progress') - Line 2498
LeanError(message='Lean error:\ninternal exception #5') - Line 2499
LeanError(message='Lean error:\nsimp made no progress') - Line 2500
LeanError(message='Lean error:\nsimp made no progress') - Line 2502
LeanError(message='Lean error:\ninternal exception #5') - Line 2503
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  -Metric.closedBall ?x ?δ\nE : Type u_2\ninst✝⁴ inst✝³ inst✝² : SeminormedAddCommGroup E\ninst✝¹ : NormedSpace ℝ E\nδ ε : ℝ\ninst✝ : ProperSpace E\nhε : 0 ≤ ε\nhδ : 0 ≤ δ\na b : E\n⊢ Metric.closedBall a ε - Metric.closedBall b δ = Metric.closedBall (a + -b) (ε + δ)") - Line 2504
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.84138 • Metric.closedBall ?m.84139 1\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹³ : SeminormedAddCommGroup 𝕜\ninst✝¹² : SeminormedAddCommGroup E\ninst✝¹¹ : SMulZeroClass 𝕜 E\ninst✝¹⁰ : IsBoundedSMul 𝕜 E\ninst✝⁹ : NormedDivisionRing 𝕜\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : IsBoundedSMul 𝕜 E\ninst✝⁵ : NormedField 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nc : 𝕜\n⊢ c • Metric.closedBall 0 1 = Metric.closedBall 0 ‖c‖") - Line 2506
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?c • Metric.closedBall 0 1\nE : Type u_2\ninst✝⁵ inst✝⁴ inst✝³ : SeminormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nr : ℝ\nhr : 0 ≤ r\n⊢ r • sorry = Metric.closedBall 0 r") - Line 2507
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.94576 is not an inductive datatype') - Line 2508
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  r • Metric.ball 0 1\nE : Type u_2\ninst✝⁵ inst✝⁴ inst✝³ : SeminormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nr : ℝ\nhr : 0 < r\nx : E\n⊢ x +ᵥ r • sorry = Metric.ball x r") - Line 2510
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?c • Metric.closedBall 0 1\nE : Type u_2\ninst✝⁵ inst✝⁴ inst✝³ : SeminormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nr : ℝ\nhr : 0 ≤ r\nx : E\n⊢ x +ᵥ r • sorry = Metric.closedBall x r") - Line 2511
LeanError(message='Lean error:\nsimp made no progress') - Line 2512
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?r • ?x‖\nE : Type u_1\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace ℝ E\nt : ℝ\nht : 0 ≤ t\nx : E\n⊢ ‖t • x‖ = t * ‖x‖") - Line 2513
LeanError(message='Lean error:\nsimp made no progress') - Line 2514
LeanError(message='Lean error:\ntype mismatch\n  Continuous.continuousWithinAt (Continuous.add (Continuous.smul continuous_id continuous_const) continuous_const)\nhas type\n  ContinuousWithinAt (fun x => id x • ?m.4239 + ?m.6437) ?m.7998 ?m.7999 : Prop\nbut is expected to have type\n  ContinuousWithinAt (fun c => sorry) (Set.Ico 0 1) 1 : Prop') - Line 2515
LeanError(message='Lean error:\ninternal exception #5') - Line 2516
LeanError(message='Lean error:\ntype mismatch, term\n  hc\nafter simplification has type\n  sorry () ∈ sorry () : Prop\nbut is expected to have type\n  |c| * dist y x ≤ dist y x : Prop') - Line 2517
LeanError(message='Lean error:\ninternal exception #5') - Line 2518
LeanError(message='Lean error:\ninternal exception #5') - Line 2519
LeanError(message='Lean error:\ninternal exception #5') - Line 2520
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2386 is not an inductive datatype') - Line 2521
LeanError(message='Lean error:\ninternal exception #5') - Line 2526
LeanError(message='Lean error:\ninternal exception #5') - Line 2527
LeanError(message='Lean error:\ninternal exception #5') - Line 2528
LeanError(message='Lean error:\napplication type mismatch\n  le_trans (le_abs_self (↑sorry x)) (ContinuousLinearMap.le_opNorm ?m.13284 ?m.13285)\nargument\n  ContinuousLinearMap.le_opNorm ?m.13284 ?m.13285\nhas type\n  ‖?m.13284 ?m.13285‖ ≤ ‖?m.13284‖ * ‖?m.13285‖ : Prop\nbut is expected to have type\n  |↑sorry x| ≤ (fun x => sorry * sorry) ↑x : Prop') - Line 2529
LeanError(message='Lean error:\ntype mismatch\n  RestrictScalars.isScalarTower ?m.9775 ?m.9776 ?m.9777\nhas type\n  @IsScalarTower ?m.9775 ?m.9776 (RestrictScalars ?m.9775 ?m.9776 ?m.9777) Algebra.toSMul SMulZeroClass.toSMul\n    SMulZeroClass.toSMul : Prop\nbut is expected to have type\n  @IsScalarTower ℝ sorry sorry Algebra.toSMul Algebra.toSMul Algebra.toSMul : Prop') - Line 2530
LeanError(message='Lean error:\ninternal exception #5') - Line 2533
LeanError(message='Lean error:\ninternal exception #5') - Line 2534
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 2535
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2536
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x_1 : Type (max u_1 u_2)), ∃ f, sorry ≠ sorry\nV : Type u_2\ninst✝¹ : AddCommGroup V\ninst✝ : TopologicalSpace V\nx y : V\nh : x ≠ y\n⊢ ∃ f, sorry ≠ sorry") - Line 2538
LeanError(message='Lean error:\nsimp made no progress') - Line 2541
LeanError(message='Lean error:\ninternal exception #5') - Line 2542
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Type (max u_1 u_2) is not an inductive datatype') - Line 2543
LeanError(message='Lean error:\nstuck at solving universe constraint\n  max (u_1+1) (u_2+1) =?= max (u_2+1) (?u.3094+1)\nwhile trying to unify\n  sorry : Type (max u_1 u_2)\nwith\n  sorryAx.{(max (?u.3094 + 1) (u_2 + 1)) + 1} (Unit → Type (max ?u.3094 u_2)) true\n    (Function.const Lean.Name () `0.0.0.0.0.0._sorry._@._hyg.22) : Type (max ?u.3094 u_2)') - Line 2544
LeanError(message='Lean error:\ntype mismatch\n  gauge_smul_of_nonneg (LT.lt.le hc)\nhas type\n  ∀ (x : ?m.19349), gauge ?m.19360 (c • x) = c • gauge ?m.19360 x : Prop\nbut is expected to have type\n  ∀ (x : E), sorry (c • x) = c * sorry x : Prop') - Line 2550
LeanError(message='Lean error:\ninternal exception #5') - Line 2551
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.21216 is not an inductive datatype') - Line 2554
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.23960 is not an inductive datatype') - Line 2555
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.12864 is not an inductive datatype') - Line 2559
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.17518 is not an inductive datatype') - Line 2560
LeanError(message='Lean error:\ninternal exception #5') - Line 2561
LeanError(message='Lean error:\nsimp made no progress') - Line 2562
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2563
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2564
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2566
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2567
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.50256 → ∃ f, ?m.32096 < ?m.32099\n𝕜 : Type u_1\nE : Type u_2\ninst✝¹² : TopologicalSpace E\ninst✝¹¹ : AddCommGroup E\ninst✝¹⁰ : Module ℝ E\ninst✝⁹ : IsTopologicalAddGroup E\ninst✝⁸ : ContinuousSMul ℝ E\ninst✝⁷ : LocallyConvexSpace ℝ E\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : IsScalarTower ℝ 𝕜 E\ninst✝³ : IsTopologicalAddGroup E\ninst✝² : ContinuousSMul 𝕜 E\ninst✝¹ : LocallyConvexSpace ℝ E\nα✝ : Sort u_3\nx y : α✝\nx✝ : Sort u_4\nre : x✝\ninst✝ : T1Space E\nhxy : x ≠ y\n⊢ ∃ f, ?m.32096 < ?m.32099") - Line 2571
LeanError(message='Lean error:\napplication type mismatch\n  ⟨hx, le_rfl⟩\nargument\n  le_rfl\nhas type\n  ?m.43848 ≤ ?m.43848 : Prop\nbut is expected to have type\n  ?m.35891 ≤ ?m.35894 : Prop') - Line 2572
LeanError(message='Lean error:\n`sorry` is not a `fun_prop` goal! Maybe you forgot marking `sorryAx` with `@[fun_prop]`.') - Line 2573
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ((∃ i, sorry = 0) ∨ ¬∃ i, sorry = 0) → ‖sorry‖ ≤ C * ∏ i, sorry\n𝕜 : Type u\nι : Type v\nE : ι → Type wE\ninst✝ : Fintype ι\nG : Type u_5\nf : sorry\nhf₀ : ∀ {m : ?m.12668 f} {i : ?m.12669 f}, ‖?m.4620‖ = 0 → ‖sorry‖ = 0\nε : ι → ℝ\nC : ℝ\nhε : ∀ (i : ι), 0 < ε i\nc : ι → 𝕜\nhc : ι → 1 < sorry\nhf : ∀ (m : (i : ι) → E i), (∀ (i : ι), ε i / sorry ≤ sorry) → (∀ (i : ι), sorry < ε i) → ‖sorry‖ ≤ C * ∏ i, sorry\nm : (i : ι) → E i\n⊢ ‖sorry‖ ≤ C * ∏ i, sorry") - Line 2578
LeanError(message='Lean error:\ninternal exception #5') - Line 2581
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2582
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => ‖sorry‖ ≤ _a\nError: application type mismatch\n  ?m.10642 f s hk z H\nargument\n  H\nhas type\n  ∀ (m : ?m.10634 f s hk z), ‖sorry‖ ≤ C * ∏ i, ‖?m.3866‖ : Prop\nbut is expected to have type\n  ∀ (m : ?m.10634 f s hk z), ‖sorry‖ ≤ C * ∏ i, ‖?m.3866‖ : Prop\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nG : Type u_5\nG' : Type u_6\nk n : ℕ\nf : sorry\ns : Finset (Fin n)\nhk : s.card = k\nz : G\nC : ℝ\nH : ∀ (m : ?m.10634 f s hk z), ‖sorry‖ ≤ C * ∏ i, ‖?m.3866‖\nv : Fin k → G\n⊢ ‖sorry‖ ≤ C * sorry ^ (n - k) * ∏ i, sorry") - Line 2585
LeanError(message='Lean error:\ntype mismatch\n  IsClosed.isLeast_csInf ?m.11818 sorry sorry\nhas type\n  IsLeast ?m.11817 (sInf ?m.11817) : Prop\nbut is expected to have type\n  IsLeast {c | 0 ≤ c ∧ ∀ (m : ?m.11794 f c), ‖sorry‖ ≤ c * ∏ i, ‖?m.6736‖} sorry : Prop') - Line 2590
LeanError(message="Lean error:\nunknown free variable '_fvar.845'") - Line 2595
LeanError(message='Lean error:\n<input>:1:31: expected end of input') - Line 2609
LeanError(message='Lean error:\ntype mismatch, term\n  isLeast_Ici\nafter simplification has type\n  IsLeast (Set.Ici ?m.11373) ?m.11373 : Prop\nbut is expected to have type\n  IsLeast {C | ∀ (m : ?m.11149 f C), ‖sorry‖₊ ≤ C * ∏ i, ‖?m.6722‖₊} sorry : Prop') - Line 2610
LeanError(message="Lean error:\nunknown free variable '_fvar.1071'") - Line 2615
LeanError(message='Lean error:\ninternal exception #5') - Line 2617
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  ‖sorry‖ = sorry\nι : Type v\ninst✝² inst✝¹ : Fintype ι\nG : Type u_7\nx✝ : Sort u_5\nconstOfIsEmpty : x✝\ninst✝ : IsEmpty ι\nx : G\n⊢ ‖sorry‖ = sorry") - Line 2619
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖MultilinearMap.mkContinuous ?f ?C ?H‖ ≤ ?C\nwith\n  ‖sorry‖ ≤ sorry * sorry ^ (n - k)\nG : Type u_6\nG' : Type u_5\nk n : ℕ\nf : sorry\ns : Finset (Fin n)\nhk : s.card = k\nz : G\n⊢ ‖sorry‖ ≤ sorry * sorry ^ (n - k)") - Line 2626
LeanError(message='Lean error:\nno goals to be solved') - Line 2627
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  ‖sorry‖ = sorry\n𝕜 : Type u\nι : Type v\ninst✝³ inst✝² inst✝¹ : Fintype ι\nA : Type u_5\ninst✝ : IsEmpty ι\n⊢ ‖sorry‖ = sorry") - Line 2628
LeanError(message='Lean error:\nno goals to be solved') - Line 2630
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ k, n = k.succ) → ‖sorry‖ ≤ 1\n𝕜 : Type u\nn : ℕ\nA : Type u_5\nhn : 0 < n\n⊢ ‖sorry‖ ≤ 1") - Line 2631
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  PartialOrder ?m.4115') - Line 2632
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  PartialOrder ?m.7706') - Line 2635
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'ContinuousMultilinearMap.mkPiRing'.") - Line 2637
LeanError(message='Lean error:\nsimp made no progress') - Line 2642
LeanError(message='Lean error:\ndsimp made no progress') - Line 2643
LeanError(message='Lean error:\ndsimp made no progress') - Line 2646
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Fintype ?m.8484') - Line 2649
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.8493 = ?m.8494\nwith\n  ‖sorry‖ = sorry\nι : Type v\ninst✝² inst✝¹ inst✝ : Fintype ι\ng : sorry\nf : ι → sorry\n⊢ ‖sorry‖ = sorry") - Line 2650
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 2657
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2658
LeanError(message="Lean error:\nunknown free variable '_fvar.2051'") - Line 2660
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2663
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry * ((∏ i, ‖Fin.init sorry i.castSucc‖) * ‖Fin.init sorry (Fin.last ?m.94617)‖ * sorry)\nis not definitionally equal to the right-hand side\n  sorry * ∏ i, sorry\nx✝ : Sort u_1\nEi : x✝\nG : Type u_2\nf : sorry\nm : ?m.12205 f → sorry\n⊢ sorry * ((∏ i, ‖Fin.init sorry i.castSucc‖) * ‖Fin.init sorry (Fin.last ?m.94617)‖ * sorry) = sorry * ∏ i, sorry") - Line 2664
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2669
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2677
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2678
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2687
LeanError(message="Lean error:\ntactic 'subst' failed, 'x' occurs at\n  0\nG : Type u_2\nf : sorry\nx : Fin 0 → G\nx✝ : x = 0\n⊢ ‖sorry‖ = sorry") - Line 2691
LeanError(message="Lean error:\nunknown free variable '_fvar.38804'") - Line 2735
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.opNorm_le_of_shell ε_pos hC hc\nargument\n  hc\nhas type\n  IsCauSeq abs c : Prop\nbut is expected to have type\n  1 < ‖?m.43617‖ : Prop') - Line 2743
LeanError(message='Lean error:\n<input>:3:25: expected end of input') - Line 2745
LeanError(message='Lean error:\nno goals to be solved') - Line 2746
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2750
LeanError(message='Lean error:\napplication type mismatch\n  le_antisymm ?m.58234 (norm_nonneg ?m.58440)\nargument\n  norm_nonneg ?m.58440\nhas type\n  (0 : ℝ) ≤ ‖?m.58440‖ : Prop\nbut is expected to have type\n  (0 : ℕ) ≤ sorry : Prop') - Line 2752
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.197090 ?m.197092') - Line 2756
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2771
LeanError(message="Lean error:\nunknown free variable '_fvar.35504'") - Line 2791
LeanError(message='Lean error:\nno goals to be solved') - Line 2810
LeanError(message='Lean error:\nno goals to be solved') - Line 2824
LeanError(message='Lean error:\nno goals to be solved') - Line 2826
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.72551 ?m.72553') - Line 2829
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  NNReal') - Line 2830
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Preorder ?m.37454') - Line 2837
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  RingHomIsometric ?m.47093') - Line 2839
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 2841
LeanError(message='Lean error:\napplication type mismatch\n  not_mem_of_lt_csInf sorry\nargument\n  sorry\nhas type\n  r < sorry : Prop\nbut is expected to have type\n  ?m.57329 < sInf ?m.64497 : Prop') - Line 2845
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.57956 ?m.57957\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2846
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 2847
LeanError(message='Lean error:\n<input>:2:15: expected end of input') - Line 2849
LeanError(message='Lean error:\ninternal exception #5') - Line 2850
LeanError(message='Lean error:\ninternal exception #5') - Line 2852
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5151 is not an inductive datatype') - Line 2855
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 2857
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.2041 ?m.2042') - Line 2858
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  Subsingleton sorry ∨ Nontrivial sorry → ‖f.comp sorry‖ = ‖f‖\nF : Type u_5\nG : Type u_7\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedAddCommGroup G\nα✝³ : Type u_10\nα✝² : Type u_11\nself✝³ : Semiring α✝³\nself✝² : Semiring α✝²\nσ₂₃ : α✝³ →+* α✝²\nα✝¹ : Type u_12\nα✝ : Type u_13\nself✝¹ : Semiring α✝¹\nself✝ : Semiring α✝\nσ₂' : α✝¹ →+* α✝\nf : F →SL[σ₂₃] G\ng : sorry\n⊢ ‖f.comp sorry‖ = ‖f‖") - Line 2864
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  Subsingleton E ∨ Nontrivial E → Subsingleton E ∨ 0 < ‖sorry‖\nE : Type u_4\nF : Type u_5\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedAddCommGroup F\nα✝³ : Type u_10\nα✝² : Type u_11\nself✝³ : Semiring α✝³\nself✝² : Semiring α✝²\nσ₁₂ : α✝³ →+* α✝²\nα✝¹ : Type u_12\nα✝ : Type u_13\nself✝¹ : Semiring α✝¹\nself✝ : Semiring α✝\nσ₂₁ : α✝¹ →+* α✝\ninst✝ : RingHomIsometric σ₁₂\ne : sorry\n⊢ Subsingleton E ∨ 0 < ‖sorry‖") - Line 2873
LeanError(message='Lean error:\ntype mismatch\n  norm_pos_iff.mpr ?m.9544\nhas type\n  (0 : ℝ) < ‖?m.9382‖ : Prop\nbut is expected to have type\n  (0 : ℕ) < sorry : Prop') - Line 2875
LeanError(message='Lean error:\n[EquicontinuousAt (sorry ∘ f) 0, Equicontinuous (sorry ∘ f), UniformEquicontinuous (sorry ∘ f),\n  ∃ C, ∀ (i : ι✝) (x : ?m.27415 C i), ‖sorry‖ ≤ C * ‖x‖, ∃ C ≥ 0, ∀ (i : ι✝) (x : ?m.27419 C i), ‖sorry‖ ≤ C * ‖x‖,\n  ∃ C, ∀ (i : ι✝), ‖f i‖ ≤ C, ∃ C ≥ 0, ∀ (i : ι✝), ‖f i‖ ≤ C, BddAbove (Set.range fun x => ‖f x‖),\n  ⨆ i, ↑‖f i‖₊ < ⊤] must be an explicit list of propositions') - Line 2876
LeanError(message="Lean error:\nunknown free variable '_fvar.349'") - Line 2886
LeanError(message='Lean error:\ntype mismatch\n  Exists.intro sorry ?m.33258\nhas type\n  Exists ?m.33253 : Prop\nbut is expected to have type\n  BddAbove {p | ∃ G x x_1, p = (normSeminorm 𝕜 (ContinuousMultilinearMap 𝕜 E G →L[𝕜] G)).comp ?m.18714} : Prop') - Line 2887
LeanError(message="Lean error:\nunknown free variable '_fvar.349'") - Line 2888
LeanError(message='Lean error:\n<input>:1:86: unterminated comment') - Line 2889
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\ninjectiveSeminorm : x✝\nα✝ : Type u_2\nprojectiveSeminorm : α✝\n⊢ sorry ≤ projectiveSeminorm") - Line 2890
LeanError(message='Lean error:\nno goals to be solved') - Line 2892
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ContinuousMultilinearMap 𝕜 (?m.15090 𝕜 l) F') - Line 2894
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (PiTensorProduct 𝕜 fun i => E i) →L[𝕜] PiTensorProduct 𝕜 fun i => E i') - Line 2895
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.55432') - Line 2896
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2897
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a₁ = ?a₂\nwith\n  sorry = sorry.comp sorry\nE' : ?m.21535\nE'' : ?m.21773\nι : Type uι\ninst✝⁹ : Fintype ι\n𝕜 : Type u𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\nE : ι → Type uE\ninst✝⁷ : (i : ι) → SeminormedAddCommGroup (E i)\ninst✝⁶ : (i : ι) → NormedSpace 𝕜 (E i)\nF : Type uF\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : ?m.53929 → SeminormedAddCommGroup sorry\ninst✝² : (i : ?m.53931) → NormedSpace 𝕜 sorry\ninst✝¹ : ?m.53939 → SeminormedAddCommGroup sorry\ninst✝ : (i : ?m.53947) → NormedSpace 𝕜 sorry\ng : (i : ?m.53979) → sorry →L[𝕜] sorry\nf : (i : ι) → E i →L[𝕜] sorry\nx✝ : Sort u_1\nmapL : x✝\n⊢ sorry = sorry.comp sorry") - Line 2898
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a₁ = ?a₂\nwith\n  sorry = ContinuousLinearMap.id ?m.67067 ?m.67069\nE' : ?m.21535\nE'' : ?m.21773\nι : Type uι\ninst✝⁹ : Fintype ι\n𝕜 : Type u𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\nE : ι → Type uE\ninst✝⁷ : (i : ι) → SeminormedAddCommGroup (E i)\ninst✝⁶ : (i : ι) → NormedSpace 𝕜 (E i)\nF : Type uF\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : ?m.53929 → SeminormedAddCommGroup sorry\ninst✝² : (i : ?m.53931) → NormedSpace 𝕜 sorry\ninst✝¹ : ?m.53939 → SeminormedAddCommGroup sorry\ninst✝ : (i : ?m.53947) → NormedSpace 𝕜 sorry\ng : (i : ?m.53979) → sorry →L[𝕜] sorry\nf : (i : ι) → E i →L[𝕜] sorry\nx✝ : Sort u_1\nmapL : x✝\n⊢ sorry = ContinuousLinearMap.id ?m.67067 ?m.67069") - Line 2900
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.59674‖ ≤ ?m.59675\nι✝ : Type u_3\nE'✝ : ?m.21553\nE''✝ : ?m.21786\n𝕜✝ : Type u𝕜\ninst✝¹⁷ : NontriviallyNormedField 𝕜✝\nE✝ : ι✝ → Type uE\ninst✝¹⁶ : (i : ι✝) → SeminormedAddCommGroup (E✝ i)\ninst✝¹⁵ : (i : ι✝) → NormedSpace 𝕜✝ (E✝ i)\nF✝ : Type uF\ninst✝¹⁴ : SeminormedAddCommGroup F✝\ninst✝¹³ : NormedSpace 𝕜✝ F✝\ninst✝¹² : ?m.53937 → SeminormedAddCommGroup sorry\ninst✝¹¹ : (i : ?m.53939) → NormedSpace 𝕜✝ sorry\ninst✝¹⁰ : ?m.53947 → SeminormedAddCommGroup sorry\ninst✝⁹ : (i : ?m.53955) → NormedSpace 𝕜✝ sorry\ng✝ : (i : ?m.53987) → sorry →L[𝕜✝] sorry\nf✝ : (i : ι✝) → E✝ i →L[𝕜✝] sorry\nι : Type u_3\nx✝² : Sort u_5\nE' : x✝²\nx✝¹ : Sort u_6\nE'' : x✝¹\n𝕜 : Type u𝕜\ninst✝⁸ : NontriviallyNormedField 𝕜\nE : ι → Type uE\ninst✝⁷ : (i : ι) → SeminormedAddCommGroup (E i)\ninst✝⁶ : (i : ι) → NormedSpace 𝕜 (E i)\nF : Type uF\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : ?m.53937 → SeminormedAddCommGroup sorry\ninst✝² : (i : ?m.53939) → NormedSpace 𝕜 sorry\ninst✝¹ : ?m.53947 → SeminormedAddCommGroup sorry\ninst✝ : (i : ?m.53955) → NormedSpace 𝕜 sorry\ng : (i : ?m.53987) → sorry →L[𝕜] sorry\nf : (i : ι) → E i →L[𝕜] sorry\nx✝ : Sort u_1\nmapL : x✝\n⊢ ‖sorry‖ ≤ ∏ i, ‖f i‖") - Line 2907
LeanError(message='Lean error:\nsimp made no progress') - Line 2909
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  OfNat (?m.3826 x) 0\nnumerals are polymorphic in Lean, but the numeral `0` cannot be used in a context where the expected type is\n  ?m.3826 x\ndue to the absence of the instance above') - Line 2912
LeanError(message='Lean error:\ninternal exception #5') - Line 2914
LeanError(message='Lean error:\ninternal exception #5') - Line 2915
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2918
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2923
LeanError(message='Lean error:\nsimp made no progress') - Line 2926
LeanError(message="Lean error:\napplication type mismatch\n  dist_le_of_approx_trajectories_ODE_of_mem hv hf hf' ?m.10396 hfs hg hg' g_bound\nargument\n  g_bound\nhas type\n  ∀ t ∈ Set.Ico a b, sorry ≤ 0 : Prop\nbut is expected to have type\n  ∀ t ∈ Set.Ico a b, dist (v t (g t)) (v t (g t)) ≤ ?m.10019 : Prop") - Line 2928
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 2931
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2943
LeanError(message='Lean error:\nsimp made no progress') - Line 2945
LeanError(message='Lean error:\nsimp made no progress') - Line 2953
LeanError(message='Lean error:\nsimp made no progress') - Line 2960
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 2961
LeanError(message='Lean error:\nno goals to be solved') - Line 2962
LeanError(message='Lean error:\nsimp made no progress') - Line 2963
LeanError(message='Lean error:\n<input>:1:43: expected no space before or term') - Line 2964
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6689 is not an inductive datatype') - Line 2966
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ℝ sorry ?m.6863 ?m.6864\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2968
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4182 is not an inductive datatype') - Line 2969
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.8709 is not an inductive datatype') - Line 2970
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2973
LeanError(message='Lean error:\ninternal exception #5') - Line 2975
LeanError(message='Lean error:\nsimp made no progress') - Line 2976
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2968 is not an inductive datatype') - Line 2978
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2981
LeanError(message='Lean error:\nno goals to be solved') - Line 2982
LeanError(message='Lean error:\ninternal exception #5') - Line 2983
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2984
LeanError(message='Lean error:\nno goals to be solved') - Line 2985
LeanError(message='Lean error:\ninternal exception #5') - Line 2986
LeanError(message='Lean error:\ninternal exception #5') - Line 2988
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2990
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2991
LeanError(message='Lean error:\nno goals to be solved') - Line 2999
LeanError(message='Lean error:\ninternal exception #5') - Line 3000
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 3003
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousLinearMap.ratio_le_opNorm RCLike.reCLM\nargument\n  RCLike.reCLM\nhas type\n  @ContinuousLinearMap ℝ ℝ Real.semiring Real.semiring (RingHom.id ℝ) K\n    (@UniformSpace.toTopologicalSpace K PseudoMetricSpace.toUniformSpace) ENormedAddCommMonoid.toAddCommMonoid ℝ\n    UniformSpace.toTopologicalSpace Real.instAddCommMonoid NormedSpace.toModule NormedSpace.toModule : Type u_1\nbut is expected to have type\n  @ContinuousLinearMap ?m.5199 ?m.5200 DivisionSemiring.toSemiring DivisionSemiring.toSemiring ?m.5209 K\n    (@UniformSpace.toTopologicalSpace K PseudoMetricSpace.toUniformSpace) AddCommGroup.toAddCommMonoid ?m.5202\n    UniformSpace.toTopologicalSpace AddCommGroup.toAddCommMonoid NormedSpace.toModule\n    NormedSpace.toModule : Type (max u_1 ?u.5195)') - Line 3006
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (?x • 1) • ?y\nK : Type u_1\nE : Type u_2\ninst✝⁴ : RCLike K\ninst✝³ : AddCommGroup E\ninst✝² : Module K E\ninst✝¹ : Module ℝ E\ninst✝ : IsScalarTower ℝ K E\nr : ℝ\nx : E\n⊢ r • x = (r • 1) • x") - Line 3013
LeanError(message='Lean error:\ninternal exception #5') - Line 3025
LeanError(message='Lean error:\ninternal exception #5') - Line 3026
LeanError(message='Lean error:\nsimp made no progress') - Line 3041
LeanError(message='Lean error:\nsimp made no progress') - Line 3042
LeanError(message='Lean error:\ninternal exception #5') - Line 3043
LeanError(message='Lean error:\ninternal exception #5') - Line 3044
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nK : Type u_1\ninst✝ : RCLike K\nx✝ : Sort u_3\nim : x✝\nz : K\n⊢ sorry * sorry = sorry") - Line 3050
LeanError(message='Lean error:\nsimp made no progress') - Line 3051
LeanError(message='Lean error:\ninternal exception #5') - Line 3057
LeanError(message='Lean error:\ninternal exception #5') - Line 3060
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3062
LeanError(message='Lean error:\ninternal exception #5') - Line 3063
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3064
LeanError(message='Lean error:\ninternal exception #5') - Line 3065
LeanError(message='Lean error:\ninternal exception #5') - Line 3066
LeanError(message='Lean error:\ngoal must be of the form TFAE [P₁, P₂, ...]') - Line 3067
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 3079
LeanError(message="Lean error:\nunknown free variable '_fvar.28'") - Line 3080
LeanError(message="Lean error:\nunknown free variable '_fvar.28'") - Line 3081
LeanError(message='Lean error:\nsimp made no progress') - Line 3083
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nK : Type ?u.36\nz : K\n⊢ sorry") - Line 3087
LeanError(message='Lean error:\nsimp made no progress') - Line 3089
LeanError(message='Lean error:\ninternal exception #5') - Line 3090
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ntactic 'induction' failed, recursor 'Or.casesOn' can only eliminate into Prop\nK : Type ?u.33\nz : K\nx✝ : z = sorry ∨ z ≠ sorry\n⊢ sorry") - Line 3092
LeanError(message='Lean error:\ninternal exception #5') - Line 3093
LeanError(message='Lean error:\ninternal exception #5') - Line 3094
LeanError(message="Lean error:\nunknown free variable '_fvar.28'") - Line 3095
LeanError(message="Lean error:\nunknown free variable '_fvar.28'") - Line 3096
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  x = sorry ∨ x ≠ sorry → ∃ c, ‖c‖ = 1 ∧ sorry = c * x\nK : Type u_2\nx : K\n⊢ ∃ c, ‖c‖ = 1 ∧ sorry = c * x") - Line 3099
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  x = sorry ∨ x ≠ sorry → ∃ c, ‖c‖ = 1 ∧ c * sorry = x\nK : Type u_2\nx : K\n⊢ ∃ c, ‖c‖ = 1 ∧ c * sorry = x") - Line 3100
LeanError(message="Lean error:\nunknown free variable '_fvar.28'") - Line 3109
LeanError(message='Lean error:\ninternal exception #5') - Line 3112
LeanError(message='Lean error:\ninternal exception #5') - Line 3113
LeanError(message='Lean error:\ninternal exception #5') - Line 3117
LeanError(message='Lean error:\ninternal exception #5') - Line 3118
LeanError(message='Lean error:\ninternal exception #5') - Line 3120
LeanError(message='Lean error:\ninternal exception #5') - Line 3121
LeanError(message='Lean error:\ninternal exception #5') - Line 3123
LeanError(message='Lean error:\ninternal exception #5') - Line 3124
LeanError(message='Lean error:\ninternal exception #5') - Line 3126
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 3131
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.8124 : Sort ?u.8123\nbut is expected to have type\n  ‖sorry ()‖ = q • sorry () : Prop') - Line 3135
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.6912 : Sort ?u.6911\nbut is expected to have type\n  ‖sorry ()‖₊ = q • sorry () : Prop') - Line 3136
LeanError(message='Lean error:\ninternal exception #5') - Line 3138
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  |?m.3939| ≤ ‖?m.16043‖\nK : Type u_3\nx✝ : Sort u_1\nre : x✝\nz : K\n⊢ |sorry| ≤ sorry") - Line 3139
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  |?m.3939| ≤ ‖?m.16043‖\nK : Type u_3\nx✝ : Sort u_1\nim : x✝\nz : K\n⊢ |sorry| ≤ sorry") - Line 3140
LeanError(message='Lean error:\ntype mismatch, term\n  congr_arg (fun z => z * z) sorry\nafter simplification has type\n  ?m.3560 * ?m.3560 = ?m.3561 * ?m.3561 : Prop\nbut is expected to have type\n  sorry = 0 : Prop') - Line 3145
LeanError(message='Lean error:\ninternal exception #5') - Line 3146
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  |‖?z‖|\nK : Type u_1\ninst✝ : RCLike K\nx✝ : Sort u_3\nre : x✝\nz : K\n⊢ |sorry| / |‖z‖| ≤ 1") - Line 3147
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  |‖?z‖|\nK : Type u_1\ninst✝ : RCLike K\nx✝ : Sort u_3\nim : x✝\nz : K\n⊢ |sorry| / |‖z‖| ≤ 1") - Line 3148
LeanError(message='Lean error:\ninternal exception #5') - Line 3149
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 3150
LeanError(message='Lean error:\ninternal exception #5') - Line 3151
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\nK : Type u_1\ninst✝ : RCLike K\nx✝ : Sort u_3\nre : x✝\nx : K\n⊢ ‖(starRingEnd K) x + x‖ ^ 2 = sorry ^ 2") - Line 3152
LeanError(message='Lean error:\nsimp made no progress') - Line 3156
LeanError(message='Lean error:\n<input>:1:47: expected end of input') - Line 3161
LeanError(message='Lean error:\n<input>:1:44: expected end of input') - Line 3162
LeanError(message='Lean error:\n<input>:1:47: expected end of input') - Line 3163
LeanError(message='Lean error:\n<input>:1:44: expected end of input') - Line 3164
LeanError(message='Lean error:\ninternal exception #5') - Line 3165
LeanError(message='Lean error:\ninternal exception #5') - Line 3166
LeanError(message='Lean error:\ninternal exception #5') - Line 3167
LeanError(message='Lean error:\ninternal exception #5') - Line 3168
LeanError(message='Lean error:\ninternal exception #5') - Line 3169
LeanError(message='Lean error:\ninternal exception #5') - Line 3170
LeanError(message='Lean error:\ntype mismatch, term\n  this\nafter simplification has type\n  sorry () : Sort ?u.15659\nbut is expected to have type\n  x < y : Prop') - Line 3178
LeanError(message='Lean error:\nsimp made no progress') - Line 3179
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.694 is not an inductive datatype') - Line 3181
LeanError(message='Lean error:\nsimp made no progress') - Line 3209
LeanError(message='Lean error:\ninternal exception #5') - Line 3210
LeanError(message='Lean error:\ninternal exception #5') - Line 3212
LeanError(message='Lean error:\n<input>:2:74: expected end of input') - Line 3213
LeanError(message='Lean error:\nsimp made no progress') - Line 3214
LeanError(message='Lean error:\nsimp made no progress') - Line 3215
LeanError(message='Lean error:\nsimp made no progress') - Line 3216
LeanError(message='Lean error:\nsimp made no progress') - Line 3217
LeanError(message='Lean error:\nsimp made no progress') - Line 3218
LeanError(message='Lean error:\nsimp made no progress') - Line 3219
LeanError(message='Lean error:\nsimp made no progress') - Line 3220
LeanError(message='Lean error:\ninternal exception #5') - Line 3221
LeanError(message='Lean error:\nsimp made no progress') - Line 3222
LeanError(message='Lean error:\nsimp made no progress') - Line 3228
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3233
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 3244
LeanError(message='Lean error:\nsimp made no progress') - Line 3249
LeanError(message='Lean error:\ninternal exception #5') - Line 3253
LeanError(message='Lean error:\ninternal exception #5') - Line 3254
LeanError(message='Lean error:\n<input>:1:34: expected no space before or term') - Line 3257
LeanError(message="Lean error:\ntype mismatch\n  Continuous.sub (Continuous.cexp continuous_id') continuous_one\nhas type\n  Continuous fun x => Complex.exp x - 1 x : Prop\nbut is expected to have type\n  Continuous (?m.762 - 1) : Prop") - Line 3264
LeanError(message='Lean error:\ninternal exception #5') - Line 3274
LeanError(message="Lean error:\ntype mismatch\n  Filter.tendsto_atTop_mono' Filter.atTop sorry A\nhas type\n  Filter.Tendsto ?m.3805 Filter.atTop Filter.atTop : Prop\nbut is expected to have type\n  Filter.Tendsto sorry sorry sorry : Prop") - Line 3275
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NoMaxOrder ?m.1238') - Line 3282
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3284
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3285
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.exp\n⊢ sorry = Set.Ioi 0") - Line 3288
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.exp\n⊢ sorry = Filter.atTop") - Line 3289
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.atTop\n⊢ Filter.comap sorry sorry = Filter.atTop") - Line 3290
LeanError(message='Lean error:\nsimp made no progress') - Line 3291
LeanError(message='Lean error:\nsimp made no progress') - Line 3292
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.exp\n⊢ sorry = nhdsWithin 0 (Set.Ioi 0)") - Line 3293
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  nhdsWithin 0 (Set.Ioi 0)\n⊢ Filter.comap sorry (nhdsWithin 0 sorry) = Filter.atBot") - Line 3294
LeanError(message='Lean error:\nsimp made no progress') - Line 3297
LeanError(message='Lean error:\nsimp made no progress') - Line 3303
LeanError(message='Lean error:\nsimp made no progress') - Line 3304
LeanError(message='Lean error:\nsimp made no progress') - Line 3305
LeanError(message='Lean error:\nsimp made no progress') - Line 3306
LeanError(message='Lean error:\nsimp made no progress') - Line 3307
LeanError(message='Lean error:\nsimp made no progress') - Line 3308
LeanError(message='Lean error:\nsimp made no progress') - Line 3309
LeanError(message='Lean error:\ntype mismatch, term\n  Real.summable_exp_nat_mul_iff.mpr neg_one_lt_zero\nafter simplification has type\n  Summable fun n => Real.exp (-↑n) : Prop\nbut is expected to have type\n  Summable fun n => sorry : Prop') - Line 3310
LeanError(message='Lean error:\nsimp made no progress') - Line 3311
LeanError(message='Lean error:\nsimp made no progress') - Line 3313
LeanError(message='Lean error:\nsimp made no progress') - Line 3314
LeanError(message='Lean error:\nsimp made no progress') - Line 3316
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  𝔸 →L[𝕂] 𝔸') - Line 3321
LeanError(message='Lean error:\napplication type mismatch\n  LE.le.trans_lt (zero_le ?m.9316) hx\nargument\n  hx\nhas type\n  x ∈ EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop\nbut is expected to have type\n  ?m.9316 < sorry : Prop') - Line 3323
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 3338
LeanError(message='Lean error:\napplication type mismatch\n  LE.le.trans_lt (zero_le ?m.22416) htx\nargument\n  htx\nhas type\n  t • x ∈ EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop\nbut is expected to have type\n  ?m.22416 < sorry : Prop') - Line 3339
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  𝕊 →L[𝕂] 𝔸') - Line 3340
LeanError(message='Lean error:\ninternal exception #4') - Line 3342
LeanError(message='Lean error:\napplication type mismatch\n  hasStrictFDerivAt_exp_smul_const_of_mem_ball 𝕂 x t htx\nargument\n  htx\nhas type\n  @HSMul.hSMul 𝕂 𝔸 𝔸\n      (@instHSMul 𝕂 𝔸 (@Algebra.toSMul 𝕂 𝔸 Semifield.toCommSemiring Ring.toSemiring NormedAlgebra.toAlgebra)) t x ∈\n    EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop\nbut is expected to have type\n  @HSMul.hSMul 𝕂 𝔸 𝔸 (@instHSMul 𝕂 𝔸 (@Algebra.toSMul 𝕂 𝔸 CommRing.toCommSemiring Ring.toSemiring ?m.40664)) t x ∈\n    EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop') - Line 3343
LeanError(message="Lean error:\napplication type mismatch\n  hasStrictFDerivAt_exp_smul_const_of_mem_ball' 𝕂 x t htx\nargument\n  htx\nhas type\n  @HSMul.hSMul 𝕂 𝔸 𝔸\n      (@instHSMul 𝕂 𝔸 (@Algebra.toSMul 𝕂 𝔸 Semifield.toCommSemiring Ring.toSemiring NormedAlgebra.toAlgebra)) t x ∈\n    EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop\nbut is expected to have type\n  @HSMul.hSMul 𝕂 𝔸 𝔸 (@instHSMul 𝕂 𝔸 (@Algebra.toSMul 𝕂 𝔸 CommRing.toCommSemiring Ring.toSemiring ?m.40664)) t x ∈\n    EMetric.ball 0 (NormedSpace.expSeries 𝕂 𝔸).radius : Prop") - Line 3344
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3359
LeanError(message='Lean error:\ninternal exception #5') - Line 3363
LeanError(message='Lean error:\ntarget\n  p\nhas type\n  ℝ[X] : Sort u_2\nbut is expected to have type\n  Polynomial ?m.1428 : Type ?u.1420') - Line 3365
LeanError(message='Lean error:\nno goals to be solved') - Line 3366
LeanError(message='Lean error:\ninternal exception #5') - Line 3368
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3369
LeanError(message='Lean error:\ninternal exception #5') - Line 3370
LeanError(message='Lean error:\ninternal exception #5') - Line 3382
LeanError(message='Lean error:\ninternal exception #5') - Line 3383
LeanError(message='Lean error:\nno goals to be solved') - Line 3386
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  dist (f ?m.30045) (f ?m.30046) < ε / 2\nwith\n  |sorry| < ε / 2\nx✝ : Sort u_1\nS : x✝\nf : C(↑unitInterval, ℝ)\nε : ℝ\nh : 0 < ε\nn : ℕ\nx : ↑unitInterval\nk : Fin (n + 1)\nm : k ∈ sorry\n⊢ |sorry| < ε / 2") - Line 3414
LeanError(message='Lean error:\nsimp made no progress') - Line 3415
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3419
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'binEntropy' has no definition") - Line 3420
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\np : ℝ\nx✝ : Sort u_1\nbinEntropy : x✝\nhp : p < 0\n⊢ sorry < 0") - Line 3422
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3424
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3425
LeanError(message='Lean error:\ntype mismatch\n  { mp := ?m.1437, mpr := fun h => ?m.1443 }\nhas type\n  ?m.1435 ↔ ?m.1436 : Prop\nbut is expected to have type\n  sorry < sorry ↔ p ≠ 2⁻¹ : Prop') - Line 3427
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = 2⁻¹ ∨ sorry ≠ 2⁻¹ → sorry ≤ sorry\nx✝¹ : Sort u_1\nbinEntropy : x✝¹\nx✝ : Sort u_2\nlog : x✝\n⊢ sorry ≤ sorry") - Line 3428
LeanError(message='Lean error:\ninternal exception #5') - Line 3429
LeanError(message='Lean error:\ntype mismatch\n  if hp : p ≠ 0 ∧ p ≠ 1 then ?pos✝ else ?neg✝\nhas type\n  ?m.15215 : Sort ?u.15214\nbut is expected to have type\n  deriv binEntropy p = sorry - sorry : Prop') - Line 3431
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'qaryEntropy' has no definition") - Line 3432
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'qaryEntropy' has no definition") - Line 3436
LeanError(message="Lean error:\n<input>:1:46: expected ':' or term") - Line 3439
LeanError(message="Lean error:\n<input>:1:47: expected ':' or term") - Line 3440
LeanError(message="Lean error:\n<input>:1:73: expected ':' or term") - Line 3441
LeanError(message="Lean error:\n<input>:1:73: expected ':' or term") - Line 3442
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3443
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.4433 ?m.4436 < ?m.4433 ?m.4537\nwith\n  sorry p1 < sorry p2\nq : ℕ\nx✝ : Sort u_1\nqaryEntropy : x✝\nqLe2 : 2 ≤ q\np1 : ℕ\nhp1 : p1 ∈ Set.Icc 0 (1 - 1 / q)\np2 : ℕ\nhp2 : p2 ∈ Set.Icc 0 (1 - 1 / q)\np1le2 : p1 < p2\n⊢ sorry p1 < sorry p2") - Line 3445
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.4411 ?m.4683 < ?m.4411 ?m.4414\nwith\n  sorry p2 < sorry p1\nq : ℕ\nx✝ : Sort u_1\nqaryEntropy : x✝\nqLe2 : 2 ≤ q\np1 : ℕ\nhp1 : p1 ∈ Set.Icc (1 - 1 / q) 1\np2 : ℕ\nhp2 : p2 ∈ Set.Icc (1 - 1 / q) 1\np1le2 : p1 < p2\n⊢ sorry p2 < sorry p1") - Line 3446
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Set.Icc 0 2⁻¹\nβ✝ : Type u_1\nbinEntropy : ℕ → β✝\n⊢ StrictMonoOn binEntropy (Set.Icc 0 2⁻¹)") - Line 3447
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Set.Icc 2⁻¹ 1\nβ✝ : Type u_1\nbinEntropy : ℕ → β✝\n⊢ StrictAntiOn binEntropy (Set.Icc 2⁻¹ 1)") - Line 3448
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  StrictConcaveOn ℝ (Set.Icc 0 1) ?m.19045\nwith\n  StrictConcaveOn ℝ (Set.Icc 0 1) sorry\nx✝ : Sort u_1\nqaryEntropy : x✝\n⊢ StrictConcaveOn ℝ (Set.Icc 0 1) sorry") - Line 3449
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3459
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.exp\n⊢ AnalyticOnNhd ℝ Complex.exp Set.univ") - Line 3484
LeanError(message='Lean error:\nsimp made no progress') - Line 3520
LeanError(message='Lean error:\ntype mismatch, term\n  Filter.Tendsto.neg_mul_atTop ha tendsto_const_nhds Filter.tendsto_id\nafter simplification has type\n  Filter.Tendsto (fun x => a.re * x) Filter.atTop Filter.atBot : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x => Complex.exp (a * ↑x)) Filter.atTop (sorry ()) : Prop') - Line 3528
LeanError(message='Lean error:\ninternal exception #5') - Line 3532
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3533
LeanError(message='Lean error:\n<input>:2:47: expected end of input') - Line 3535
LeanError(message='Lean error:\nsimp made no progress') - Line 3537
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3543
LeanError(message='Lean error:\n<input>:3:47: expected end of input') - Line 3544
LeanError(message='Lean error:\nsimp made no progress') - Line 3546
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3554
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3555
LeanError(message='Lean error:\ninternal exception #5') - Line 3556
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3557
LeanError(message='Lean error:\ninternal exception #5') - Line 3558
LeanError(message='Lean error:\nno goals to be solved') - Line 3569
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3570
LeanError(message='Lean error:\n<input>:2:26: expected end of input') - Line 3582
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3583
LeanError(message='Lean error:\napplication type mismatch\n  integral_rpow h\nargument\n  h\nhas type\n  -1 < ↑n ∨ ↑n ≠ -1 ∧ ¬sorry : Prop\nbut is expected to have type\n  -1 < ?m.8036 ∨ ?m.8036 ≠ -1 ∧ 0 ∉ Set.uIcc ?m.8034 ?m.8035 : Prop') - Line 3584
LeanError(message='Lean error:\ntype mismatch\n  this\nhas type\n  True : Prop\nbut is expected to have type\n  ∫ (x : ℝ) in a..b, x = (b ^ 2 - a ^ 2) / 2 : Prop') - Line 3587
LeanError(message='Lean error:\nsimp made no progress') - Line 3588
LeanError(message='Lean error:\napplication type mismatch\n  ne_of_mem_of_not_mem hx h\nargument\n  h\nhas type\n  0 ∉ Set.uIcc a b : Prop\nbut is expected to have type\n  ?m.1352 x hx ∉ [[a, b]] : Prop') - Line 3590
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3598
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3600
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3603
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3607
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3608
LeanError(message='Lean error:\ninternal exception #5') - Line 3609
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.9238\nargument\n  ?m.9238\nhas type\n  (∫ (x : ℝ) in a..b, sorry () ^ (n + 2) = 0 + (n + 1) / (n + 2) * ∫ (x : ℝ) in a..b, sorry () ^ n) =\n    ((∫ (x : ℝ) in ?convert_1..?convert_2, Real.sin x ^ (n + 2)) +\n        (↑n + 1) * ∫ (x : ℝ) in ?convert_1..?convert_2, Real.sin x ^ (n + 2) =\n      Real.sin ?convert_1 ^ (n + 1) * Real.cos ?convert_1 - Real.sin ?convert_2 ^ (n + 1) * Real.cos ?convert_2 +\n        (↑n + 1) * ∫ (x : ℝ) in ?convert_1..?convert_2, Real.sin x ^ n) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 3610
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 3612
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 3613
LeanError(message="Lean error:\n<input>:1:45: unexpected end of input; expected '['") - Line 3614
LeanError(message='Lean error:\ntype mismatch\n  intervalIntegral.integral_mono_on (LT.lt.le Real.pi_pos) ?m.6431 ?m.6432 H\nhas type\n  ∫ (u : ℝ) in 0 ..Real.pi, Real.sin u ^ (n + 1) ∂?m.5824 ≤ ∫ (u : ℝ) in 0 ..Real.pi, Real.sin u ^ n ∂?m.5824 : Prop\nbut is expected to have type\n  ∫ (x : ℝ) in 0 ..Real.pi, sorry ^ (n + 1) ≤ ∫ (x : ℝ) in 0 ..Real.pi, sorry ^ n : Prop') - Line 3615
LeanError(message='Lean error:\ninternal exception #5') - Line 3617
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.9238\nargument\n  ?m.9238\nhas type\n  (∫ (x : ℝ) in a..b, sorry () ^ (n + 2) = 0 + (n + 1) / (n + 2) * ∫ (x : ℝ) in a..b, sorry () ^ n) =\n    ((∫ (x : ℝ) in ?convert_1..?convert_2, Real.cos x ^ (n + 2)) +\n        (↑n + 1) * ∫ (x : ℝ) in ?convert_1..?convert_2, Real.cos x ^ (n + 2) =\n      Real.cos ?convert_2 ^ (n + 1) * Real.sin ?convert_2 - Real.cos ?convert_1 ^ (n + 1) * Real.sin ?convert_1 +\n        (↑n + 1) * ∫ (x : ℝ) in ?convert_1..?convert_2, Real.cos x ^ n) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 3618
LeanError(message='Lean error:\ntype mismatch, term\n  integral_sin_pow_mul_cos_pow_odd 1 0\nafter simplification has type\n  True : Prop\nbut is expected to have type\n  ∫ (x : ℝ) in a..b, sorry () * sorry () = 0 : Prop') - Line 3621
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3622
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3623
LeanError(message='Lean error:\ntype mismatch, term\n  integral_sin_pow_odd_mul_cos_pow 0 1\nafter simplification has type\n  (Real.sin ?m.12406 ^ 2 - Real.sin ?m.12405 ^ 2) / 2 = (Real.cos ?m.12405 ^ 2 - Real.cos ?m.12406 ^ 2) / 2 : Prop\nbut is expected to have type\n  ∫ (x : ℝ) in a..b, sorry () * sorry () = 0 : Prop') - Line 3625
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3626
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3627
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.18048\nargument\n  ?m.18048\nhas type\n  (∫ (x : ℝ) in a..b, sorry ^ 2 * sorry ^ 2 = (b - a) / ↑8 - (sorry - sorry) / 32) =\n    (∫ (x : ℝ) in ?convert_1..?convert_2, Real.sin x ^ (2 * 1) * Real.cos x ^ (2 * 1) =\n      ∫ (x : ℝ) in ?convert_1..?convert_2, ((1 - Real.cos (2 * x)) / 2) ^ 1 * ((1 + Real.cos (2 * x)) / 2) ^ 1) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 3629
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3630
LeanError(message='Lean error:\nlinarith failed to find a contradiction\ncase h.a\nE : Type u_1\ninst✝ : NormedAddCommGroup E\nx : E\nthis : 0 ≤ (sorry - 1) ^ 2\na✝ : (1 + ‖x‖) ^ 2 > 2 * (1 + ‖x‖ ^ 2)\n⊢ False failed') - Line 3632
LeanError(message='Lean error:\ninternal exception #5') - Line 3633
LeanError(message='Lean error:\ninternal exception #5') - Line 3636
LeanError(message='Lean error:\ninternal exception #5') - Line 3637
LeanError(message='Lean error:\ntype mismatch\n  MeasureTheory.lintegral_enorm_of_nonneg fun x => Real.rpow_nonneg sorry (?m.20912 x)\nhas type\n  ∫⁻ (x : ?m.20392), ‖r ^ ?m.20912 x‖ₑ ∂?m.20394 = ∫⁻ (x : ?m.20392), ENNReal.ofReal (r ^ ?m.20912 x) ∂?m.20394 : Prop\nbut is expected to have type\n  ∫⁻ (a : E), ‖(1 + sorry) ^ (-r)‖ₑ ∂μ = ∫⁻ (a : E), ENNReal.ofReal ((1 + sorry) ^ (-r)) ∂μ : Prop') - Line 3638
LeanError(message='Lean error:\nno goals to be solved') - Line 3639
LeanError(message='Lean error:\ninternal exception #5') - Line 3642
LeanError(message='Lean error:\ninternal exception #5') - Line 3643
LeanError(message='Lean error:\ninternal exception #5') - Line 3648
LeanError(message='Lean error:\ninternal exception #5') - Line 3650
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑‖?a‖₊\nε : ℝ\nx✝ : Sort u_1\nmulExpNegMulSq : x✝\nhε : 0 < ε\nx : ℝ\n⊢ ↑‖deriv sorry x‖₊ ≤ ↑1") - Line 3651
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  @LipschitzWith ?m.1096 ?m.1097 EMetricSpace.toPseudoEMetricSpace EMetricSpace.toPseudoEMetricSpace ?m.1102 ?m.1101\nwith\n  @LipschitzWith (?m.1084 hε) (?m.1085 hε) (?m.1086 hε) (?m.1087 hε) 1 sorry\nε : ℝ\nx✝ : Sort u_1\nmulExpNegMulSq : x✝\nhε : 0 < ε\n⊢ LipschitzWith 1 sorry") - Line 3652
LeanError(message='Lean error:\nsimp made no progress') - Line 3653
LeanError(message='Lean error:\ninternal exception #5') - Line 3654
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  @dist ?m.2938 PseudoMetricSpace.toDist sorry sorry ≤ ?m.2896\nwith\n  @dist (?m.2881 hε x y) (?m.2882 hε x y) sorry sorry ≤ 2 * ↑(NNReal.sqrt sorry)⁻¹\nε : ℝ\nx✝ : Sort u_1\nmulExpNegMulSq : x✝\nhε : 0 < ε\nx y : ℝ\n⊢ dist sorry sorry ≤ 2 * ↑(NNReal.sqrt sorry)⁻¹") - Line 3655
LeanError(message='Lean error:\ninternal exception #5') - Line 3656
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  x\nx✝ : Sort u_1\nmulExpNegMulSq : x✝\nx : ℝ\nthis : x = (fun ε => sorry) 0\n⊢ Filter.Tendsto (fun ε => sorry) (nhds 0) (nhds x)") - Line 3657
LeanError(message='Lean error:\nsimp made no progress') - Line 3658
LeanError(message='Lean error:\nno goals to be solved') - Line 3659
LeanError(message='Lean error:\n<input>:6:4: expected end of input') - Line 3662
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 3663
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ‖∫ (x : E), ε.mulExpNegMulSq (f x) ∂?m.4700 - ∫ (x : E) in K, ε.mulExpNegMulSq (f x) ∂?m.4700‖ < ?m.2884\nwith\n  |∫ (x : E), ε.mulExpNegMulSq (f x) ∂P - ∫ (x : E) in K, ε.mulExpNegMulSq (f x) ∂P| < √ε\nE : Type u_1\ninst✝³ : TopologicalSpace E\ninst✝² : MeasurableSpace E\ninst✝¹ : BorelSpace E\nε : ℝ\ninst✝ : MeasurableSpace E\nP : MeasureTheory.Measure E\nf : C(E, ℝ)\nK : Set E\nhK : MeasurableSet K\nhε : 0 < ε\nhKP : P Kᶜ < ↑ε.toNNReal\n⊢ |∫ (x : E), ε.mulExpNegMulSq (f x) ∂P - ∫ (x : E) in K, ε.mulExpNegMulSq (f x) ∂P| < √ε") - Line 3664
LeanError(message='Lean error:\ninternal exception #5') - Line 3665
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11187 is not an inductive datatype') - Line 3666
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3667
LeanError(message='Lean error:\ntype mismatch\n  UniformSpace.Completion.toComplₗᵢ\nhas type\n  ?m.4848 →ₗᵢ[?m.4847] UniformSpace.Completion ?m.4848 : Type ?u.4845\nbut is expected to have type\n  sorry : Type u_1') - Line 3668
LeanError(message="Lean error:\n<input>:4:16: expected ':' or term") - Line 3670
LeanError(message="Lean error:\n<input>:1:19: expected ':' or term") - Line 3672
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3673
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'ordinaryHypergeometricSeries'.") - Line 3677
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'ordinaryHypergeometricSeries'.") - Line 3678
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'ordinaryHypergeometricSeries'.") - Line 3681
LeanError(message="Lean error:\ntactic 'unfold' failed to unfold 'ordinaryHypergeometricSeries' at\n  sorry = sorry") - Line 3683
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'ordinaryHypergeometricSeries'.") - Line 3684
LeanError(message='Lean error:\nno goals to be solved') - Line 3685
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ordinaryHypergeometricSeries ?m.17040 ?a ?b ?c\nk : ℕ\n⊢ sorry = ⊤") - Line 3686
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.17038 ?m.17040') - Line 3687
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3688
LeanError(message='Lean error:\nsimp made no progress') - Line 3689
LeanError(message='Lean error:\ninternal exception #5') - Line 3690
LeanError(message="Lean error:\n<input>:3:95: unexpected end of input; expected '['") - Line 3692
LeanError(message='Lean error:\nsimp made no progress') - Line 3693
LeanError(message='Lean error:\ninternal exception #4') - Line 3695
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HasFDerivAt (fun x i => ?m.3873 i x) (ContinuousLinearMap.pi ?m.3874) ?m.3867\nι : Type u_1\ninst✝ : Fintype ι\np : ι → ℝ × ℝ\n⊢ HasFDerivAt (fun x i => ↑polarCoord.symm (x i))\n    (ContinuousLinearMap.pi fun i => (fderivPolarCoordSymm (p i)).comp (ContinuousLinearMap.proj i)) p") - Line 3707
LeanError(message='Lean error:\nsimp made no progress') - Line 3708
LeanError(message='Lean error:\ninternal exception #5') - Line 3711
LeanError(message='Lean error:\ninternal exception #5') - Line 3712
LeanError(message='Lean error:\napplication type mismatch\n  HasFDerivAt.hasFDerivWithinAt (hasFDerivAt_pi_polarCoord_symm p)\nargument\n  hasFDerivAt_pi_polarCoord_symm p\nhas type\n  HasFDerivAt (fun x i => ↑polarCoord.symm (x i)) (fderivPiPolarCoordSymm p) p : Prop\nbut is expected to have type\n  HasFDerivAt (fun p i => ↑polarCoord.symm (p i)) (?m.4982 p) p : Prop') - Line 3713
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3718
LeanError(message="Lean error:\n<input>:1:49: expected ':' or term") - Line 3719
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3720
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3723
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3739
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nstirlingSeq : x✝\n⊢ sorry = 0") - Line 3761
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nstirlingSeq : x✝\n⊢ sorry = Real.exp 1 / √2") - Line 3762
LeanError(message='Lean error:\n<input>:2:15: expected end of input') - Line 3764
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3766
LeanError(message='Lean error:\nno goals to be solved') - Line 3767
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 3768
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : ?m.1474), ∃ c, ∀ (n : ℕ), c ≤ x\nx✝ : Sort u_1\nstirlingSeq : x✝\n⊢ ∃ c, ∀ (n : ℕ), c ≤ sorry") - Line 3769
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 3770
LeanError(message='Lean error:\ninternal exception #5') - Line 3771
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nstirlingSeq : x✝\nn : ℕ\nhn : n ≠ 0\nthis : 4 = 2 * 2\n⊢ sorry ^ 4 / sorry ^ 2 * (↑n / (2 * ↑n + 1)) = Real.Wallis.W n") - Line 3775
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3778
LeanError(message='Lean error:\napplication type mismatch\n  HMul.hMul ⋯\nargument\n  AnalyticWithinAt.log sorry\nhas type\n  0 < ?m.1132 ?m.1134 → AnalyticWithinAt ℝ (fun z => Real.log (?m.1132 z)) ?m.1133 ?m.1134 : Prop\nbut is expected to have type\n  ℂ : Type') - Line 3784
LeanError(message='Lean error:\nno goals to be solved') - Line 3804
LeanError(message='Lean error:\ninternal exception #5') - Line 3805
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  x\nx✝ : Sort u_1\narctan : x✝\nx : ℝ\n| sorry") - Line 3806
LeanError(message='Lean error:\ninternal exception #5') - Line 3807
LeanError(message='Lean error:\ninternal exception #5') - Line 3808
LeanError(message='Lean error:\ninternal exception #5') - Line 3809
LeanError(message='Lean error:\ninternal exception #5') - Line 3813
LeanError(message='Lean error:\nstuck at solving universe constraint\n  u_1 =?= max 1 ?u.421\nwhile trying to unify\n  sorry = sorry : Prop\nwith\n  Eq.{max 1 ?u.421} sorry sorry : Prop') - Line 3818
LeanError(message='Lean error:\nsimp made no progress') - Line 3829
LeanError(message='Lean error:\ntarget\n  a\nhas type\n  ?m.467 hT : Sort u_2\nbut is expected to have type\n  ?m.492 ⧸ ?m.494 : Type ?u.484') - Line 3831
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\ncase H\nT : ℝ\nx✝¹ : Sort u_1\nhomeomorphCircle : x✝¹\nx✝ : Sort u_2\ntoCircle : x✝\nhT : T ≠ 0\nx : ℝ\n⊢ sorry = sorry") - Line 3833
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 3834
LeanError(message='Lean error:\nsimp made no progress') - Line 3835
LeanError(message='Lean error:\nsimp made no progress') - Line 3836
LeanError(message='Lean error:\nsimp made no progress') - Line 3837
LeanError(message='Lean error:\nsimp made no progress') - Line 3838
LeanError(message='Lean error:\ninternal exception #5') - Line 3839
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nlog : x✝\nx : ℂ\nhx₁ : -Real.pi < x.im\nhx₂ : x.im ≤ Real.pi\n⊢ sorry = x") - Line 3841
LeanError(message='Lean error:\ninternal exception #5') - Line 3842
LeanError(message='Lean error:\nsimp made no progress') - Line 3847
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b\nx✝ : Sort u_1\nlog : x✝\nr : ℝ\nhr : 0 < r\nx : ℂ\nhx : x ≠ 0\n⊢ sorry = Real.log r + sorry") - Line 3848
LeanError(message='Lean error:\ntype mismatch\n  Iff.trans Complex.ext_iff (Iff.trans ?m.4442 sorry)\nhas type\n  ?m.4412 = ?m.4413 ↔ ?m.4441 : Prop\nbut is expected to have type\n  sorry = sorry + sorry ↔ sorry + sorry ∈ Set.Ioc (-Real.pi) Real.pi : Prop') - Line 3849
LeanError(message='Lean error:\nsimp made no progress') - Line 3855
LeanError(message='Lean error:\ninternal exception #5') - Line 3856
LeanError(message='Lean error:\ninternal exception #5') - Line 3857
LeanError(message='Lean error:\ninternal exception #5') - Line 3858
LeanError(message='Lean error:\n<input>:2:68: expected end of input') - Line 3860
LeanError(message='Lean error:\ninternal exception #5') - Line 3861
LeanError(message='Lean error:\nsimp made no progress') - Line 3862
LeanError(message='Lean error:\ninternal exception #5') - Line 3863
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3864
LeanError(message='Lean error:\nno goals to be solved') - Line 3865
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3896
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\narg : x✝\nx : ℂ\nhx : x ≠ 0\n⊢ Real.cos sorry = x.re / ‖x‖") - Line 3897
LeanError(message='Lean error:\ninternal exception #5') - Line 3899
LeanError(message='Lean error:\ntype mismatch, term\n  congr_arg sorry sorry\nafter simplification has type\n  sorry () ?m.1057 = sorry () ?m.1058 : Prop\nbut is expected to have type\n  ‖x‖ * Real.cos (sorry ()) = x.re : Prop') - Line 3900
LeanError(message='Lean error:\nsimp made no progress') - Line 3903
LeanError(message='Lean error:\nsimp made no progress') - Line 3904
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.829 + ?m.832\nx✝ : Sort u_1\narg : x✝\nθ : ℝ\nhθ : θ ∈ Set.Ioc (-Real.pi) Real.pi\n⊢ sorry = θ") - Line 3905
LeanError(message='Lean error:\nno goals to be solved') - Line 3906
LeanError(message='Lean error:\ninternal exception #5') - Line 3908
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  -?a + (?a + ?b)\ncase inr.intro.intro\nx✝ : Sort u_1\narg : x✝\nz : ℂ\nhπ : 0 < sorry\nhz : z ≠ 0\nN : ℤ\nhN : sorry + N • (Real.pi + Real.pi) ∈ Set.Ioc (-sorry) (-sorry + (Real.pi + Real.pi))\n⊢ sorry ∈ Set.Ioc (-Real.pi) Real.pi") - Line 3910
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 3915
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 3917
LeanError(message='Lean error:\nsimp made no progress') - Line 3919
LeanError(message='Lean error:\ninternal exception #5') - Line 3923
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3927
LeanError(message='Lean error:\ninternal exception #5') - Line 3928
LeanError(message="Lean error:\n<input>:2:14: expected '⟩'") - Line 3929
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.498\nx✝ : Sort u_1\narg : x✝\nz : ℂ\n⊢ sorry < Real.pi ↔ 0 ≤ z.re ∨ z.im ≠ 0") - Line 3931
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3933
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3934
LeanError(message='Lean error:\nsimp made no progress') - Line 3936
LeanError(message='Lean error:\nsimp made no progress') - Line 3937
LeanError(message='Lean error:\ninternal exception #5') - Line 3938
LeanError(message='Lean error:\ninternal exception #5') - Line 3940
LeanError(message='Lean error:\nsimp made no progress') - Line 3941
LeanError(message='Lean error:\ninternal exception #5') - Line 3942
LeanError(message='Lean error:\ninternal exception #5') - Line 3943
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3944
LeanError(message='Lean error:\nsimp made no progress') - Line 3945
LeanError(message='Lean error:\nsimp made no progress') - Line 3946
LeanError(message='Lean error:\ninternal exception #5') - Line 3947
LeanError(message='Lean error:\ninternal exception #5') - Line 3948
LeanError(message='Lean error:\ninternal exception #5') - Line 3949
LeanError(message='Lean error:\ninternal exception #5') - Line 3950
LeanError(message='Lean error:\ninternal exception #5') - Line 3951
LeanError(message='Lean error:\ninternal exception #5') - Line 3952
LeanError(message='Lean error:\ninternal exception #5') - Line 3953
LeanError(message='Lean error:\ninternal exception #5') - Line 3954
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3955
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3956
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3957
LeanError(message='Lean error:\nno goals to be solved') - Line 3958
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.639 + ?m.642\nx✝ : Sort u_1\narg : x✝\nθ : ℝ\n⊢ sorry = toIocMod Real.two_pi_pos (-Real.pi) θ") - Line 3959
LeanError(message='Lean error:\ninternal exception #5') - Line 3960
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.833 + ?m.836\nx✝ : Sort u_1\narg : x✝\nθ : ℝ\n⊢ sorry - θ = 2 * Real.pi * ↑⌊(Real.pi - θ) / (2 * Real.pi)⌋") - Line 3961
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (↑?x).cos\ncase h\nx✝ : Sort u_1\narg : x✝\nr : ℝ\nhr : 0 < r\nθ : ℝ\n⊢ sorry = ↑θ") - Line 3962
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.442 + ?m.445\nx✝ : Sort u_1\narg : x✝\nθ : Real.Angle\n⊢ sorry = θ") - Line 3963
LeanError(message='Lean error:\nno goals to be solved') - Line 3964
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a / ?b\nx✝ : Sort u_1\narg : x✝\nx y : ℂ\nhx : x ≠ 0\nhy : y ≠ 0\n⊢ sorry = sorry - sorry") - Line 3965
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 3967
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (↑?m.844).toReal = ?m.844\nx✝ : Sort u_1\narg : x✝\nz : ℂ\n⊢ sorry.toReal = sorry") - Line 3968
LeanError(message='Lean error:\ninternal exception #5') - Line 3969
LeanError(message='Lean error:\nno goals to be solved') - Line 3970
LeanError(message='Lean error:\ninternal exception #5') - Line 3971
LeanError(message='Lean error:\ntype mismatch\n  IsOpen.eventually_mem ?m.10378 ⟨hx_re, hx_im⟩\nhas type\n  Filter.Eventually (fun (x : Prop) => x ∈ And (sorry < 0)) (nhds (0 < sorry)) : Prop\nbut is expected to have type\n  Filter.Eventually (fun (y : ℂ) => y.re < 0 ∧ 0 < y.im) sorry : Prop') - Line 3975
LeanError(message='Lean error:\ntype mismatch\n  IsOpen.eventually_mem ?m.10340 ⟨hx_re, hx_im⟩\nhas type\n  Filter.Eventually (fun (x : Prop) => x ∈ And (sorry < 0)) (nhds (sorry < 0)) : Prop\nbut is expected to have type\n  Filter.Eventually (fun (y : ℂ) => y.re < 0 ∧ y.im < 0) sorry : Prop') - Line 3976
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3980
LeanError(message='Lean error:\ninternal exception #5') - Line 3983
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CommMonoid ?m.2084') - Line 3991
LeanError(message='Lean error:\nsimp made no progress') - Line 4013
LeanError(message='Lean error:\nsimp made no progress') - Line 4017
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => _a ∈ slitPlane\nError: application type mismatch\n  @?m.2466 slitPlane\nargument\n  slitPlane\nhas type\n  γ✝ : Type u_1\nbut is expected to have type\n  ?m.97 : Type u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nγ✝ : Type u_1\nslitPlane : γ✝\nx✝ : Sort u_2\nlog : x✝\nz : ℂ\nhz : 1 - z ∈ slitPlane\n⊢ sorry = z * ∫ (t : ℝ) in 0 ..1, (1 - t • z)⁻¹") - Line 4018
LeanError(message='Lean error:\nsimp made no progress') - Line 4019
LeanError(message='Lean error:\ntype mismatch, term\n  Finset.sum_range_succ ?m.1698 ?m.1699\nafter simplification has type\n  ∑ x ∈ Finset.range (?m.1699 + 1), ?m.1698 x = ∑ x ∈ Finset.range ?m.1699, ?m.1698 x + ?m.1698 ?m.1699 : Prop\nbut is expected to have type\n  sorry x✝ = (sorry + fun z => (-1) ^ (n + 1) * z ^ n / ↑n) x✝ : Prop') - Line 4020
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4021
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4022
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4023
LeanError(message='Lean error:\ninternal exception #5') - Line 4025
LeanError(message='Lean error:\nsimp made no progress') - Line 4026
LeanError(message='Lean error:\nno goals to be solved') - Line 4027
LeanError(message='Lean error:\ninternal exception #5') - Line 4028
LeanError(message='Lean error:\nsimp made no progress') - Line 4029
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => ‖sorry + sorry‖ ≤ ‖z‖ ^ (n + 1) * _a⁻¹ / (↑n + 1)\nError: application type mismatch\n  @?m.3283 log\nargument\n  log\nhas type\n  x✝¹ : Sort u_1\nbut is expected to have type\n  ?m.81 : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nx✝¹ : Sort u_1\nlog : x✝¹\nx✝ : Sort u_2\nlogTaylor : x✝\nn : ℕ\nz : ℂ\nhz : ‖z‖ < 1\n⊢ ‖sorry + sorry‖ ≤ ‖z‖ ^ (n + 1) * (1 - ‖z‖)⁻¹ / (↑n + 1)") - Line 4030
LeanError(message='Lean error:\nno goals to be solved') - Line 4031
LeanError(message='Lean error:\n<input>:11:28: expected end of input') - Line 4032
LeanError(message='Lean error:\nno goals to be solved') - Line 4033
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  C(α, 𝕜)') - Line 4034
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4035
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4036
LeanError(message='Lean error:\nfailed to synthesize\n  Algebra ℝ A\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4037
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4038
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4041
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4042
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4043
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4044
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a⁺\nA : Type u_1\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : Module ℝ A\ninst✝⁴ : SMulCommClass ℝ A A\ninst✝³ : IsScalarTower ℝ A A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\na : A\n⊢ a⁺ * a⁻ = 0") - Line 4051
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a⁺\nA : Type u_1\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : Module ℝ A\ninst✝⁴ : SMulCommClass ℝ A A\ninst✝³ : IsScalarTower ℝ A A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\na : A\n⊢ a⁻ * a⁺ = 0") - Line 4052
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4054
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a⁻\nA : Type u_1\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : Module ℝ A\ninst✝⁵ : SMulCommClass ℝ A A\ninst✝⁴ : IsScalarTower ℝ A A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝ : T2Space A\na : A\n⊢ a⁺ - (-a)⁻ = 0") - Line 4055
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4056
LeanError(message='Lean error:\ninternal exception #5') - Line 4059
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (-?a)⁻\nA : Type u_1\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : Module ℝ A\ninst✝⁶ : SMulCommClass ℝ A A\ninst✝⁵ : IsScalarTower ℝ A A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝¹ : T2Space A\ninst✝ : StarModule ℝ A\nr : ℝ\nhr : 0 ≤ r\na : A\n| (-(-r • a))⁻") - Line 4060
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (-?a)⁻\nA : Type u_1\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : Module ℝ A\ninst✝⁶ : SMulCommClass ℝ A A\ninst✝⁵ : IsScalarTower ℝ A A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝¹ : T2Space A\ninst✝ : StarModule ℝ A\nr : ℝ\nhr : r ≤ 0\na : A\n| (-(-r • a))⁻") - Line 4061
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4064
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4065
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4067
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.46584\nA : Type u_1\ninst✝¹¹ : NonUnitalRing A\ninst✝¹⁰ : Module ℝ A\ninst✝⁹ : SMulCommClass ℝ A A\ninst✝⁸ : IsScalarTower ℝ A A\ninst✝⁷ : StarRing A\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝⁴ : T2Space A\ninst✝³ : StarModule ℝ A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : NonnegSpectrumClass ℝ A\na : A\nha : 0 ≤ a\n| a") - Line 4068
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.45289⁺ = ?m.45289\nA : Type u_1\ninst✝¹¹ : NonUnitalRing A\ninst✝¹⁰ : Module ℝ A\ninst✝⁹ : SMulCommClass ℝ A A\ninst✝⁸ : IsScalarTower ℝ A A\ninst✝⁷ : StarRing A\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝⁴ : T2Space A\ninst✝³ : StarModule ℝ A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : NonnegSpectrumClass ℝ A\na : A\n⊢ a⁺ = a ↔ 0 ≤ a") - Line 4069
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4070
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  - -?a\nA : Type u_1\ninst✝¹¹ : NonUnitalRing A\ninst✝¹⁰ : Module ℝ A\ninst✝⁹ : SMulCommClass ℝ A A\ninst✝⁸ : IsScalarTower ℝ A A\ninst✝⁷ : StarRing A\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝⁴ : T2Space A\ninst✝³ : StarModule ℝ A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : NonnegSpectrumClass ℝ A\na : A\n⊢ -a⁻ = - -a ↔ a ≤ 0") - Line 4071
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  - -?a\nA : Type u_1\ninst✝¹¹ : NonUnitalRing A\ninst✝¹⁰ : Module ℝ A\ninst✝⁹ : SMulCommClass ℝ A A\ninst✝⁸ : IsScalarTower ℝ A A\ninst✝⁷ : StarRing A\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝⁴ : T2Space A\ninst✝³ : StarModule ℝ A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : NonnegSpectrumClass ℝ A\na : A\n⊢ -a = - -a⁻ ↔ a ≤ 0") - Line 4072
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4073
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4074
LeanError(message='Lean error:\nsimp made no progress') - Line 4075
LeanError(message='Lean error:\nsimp made no progress') - Line 4076
LeanError(message='Lean error:\nsimp made no progress') - Line 4077
LeanError(message='Lean error:\nsimp made no progress') - Line 4078
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  Prop\nA : Type u_1\ninst✝⁵ : Ring A\ninst✝⁴ : Algebra ℝ A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : ContinuousFunctionalCalculus ℝ A IsSelfAdjoint\ninst✝ : T2Space A\nr : NNReal\n⊢ cfc (fun x => x⁺) ((algebraMap NNReal A) r) = (algebraMap NNReal A) r") - Line 4079
LeanError(message='Lean error:\ninternal exception #5') - Line 4080
LeanError(message='Lean error:\ninternal exception #5') - Line 4082
LeanError(message='Lean error:\ntype mismatch\n  norm_cfcₙ_le fun x hx => ?m.12182\nhas type\n  ‖cfcₙ ?m.10233 ?m.10234‖ ≤ ?m.10235 : Prop\nbut is expected to have type\n  ‖sorry‖ ≤ ‖a‖ : Prop') - Line 4083
LeanError(message='Lean error:\ntype mismatch, term\n  CStarAlgebra.norm_posPart_le sorry\nafter simplification has type\n  ‖(sorry ())⁺‖ ≤ ‖sorry ()‖ : Prop\nbut is expected to have type\n  ‖sorry ()‖ ≤ ‖a‖ : Prop') - Line 4084
LeanError(message='Lean error:\nsimp made no progress') - Line 4091
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4093
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4094
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4095
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4098
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4099
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4100
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4102
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4103
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4104
LeanError(message='Lean error:\nsimp made no progress') - Line 4106
LeanError(message='Lean error:\ninternal exception #5') - Line 4108
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4109
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4110
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4112
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4113
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4114
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4115
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4116
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4117
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4118
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4119
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4123
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4125
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4127
LeanError(message='Lean error:\ninternal exception #5') - Line 4128
LeanError(message='Lean error:\nsimp made no progress') - Line 4129
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4130
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4131
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4132
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4133
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4134
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4136
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4137
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4138
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4139
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4140
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4141
LeanError(message='Lean error:\ninternal exception #5') - Line 4142
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  sorry\nA : Type u_8\ninst✝⁹ : PartialOrder A\ninst✝⁸ : Ring A\ninst✝⁷ : StarRing A\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : IsTopologicalRing A\ninst✝⁴ : T2Space A\ninst✝³ : IsTopologicalRing A\ninst✝² : T2Space A\ninst✝¹ : IsTopologicalRing A\ninst✝ : T2Space A\nx✝ : Sort u_12\nsqrt : x✝\na : A\nthis : sorry\n⊢ sorry") - Line 4143
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'sqrt' has no definition") - Line 4144
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4145
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4146
LeanError(message='Lean error:\ninternal exception #5') - Line 4147
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4150
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4152
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4153
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4154
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4155
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4156
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4157
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4158
LeanError(message="Lean error:\n<input>:1:56: expected ':' or term") - Line 4168
LeanError(message='Lean error:\n<input>:1:4: unexpected end of input') - Line 4169
LeanError(message='Lean error:\n<input>:1:2: expected end of input') - Line 4170
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4171
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 4173
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4175
LeanError(message='Lean error:\n<input>:5:4: expected end of input') - Line 4176
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nGammaIntegral : x✝\ns : ℂ\n⊢ sorry = (starRingEnd (?m.2667 s)) sorry") - Line 4177
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nGammaIntegral : x✝\ns : ℝ\nthis : ∀ (r : ℝ), ↑r = ↑r\n⊢ sorry = ∫ (x : ℝ) in Set.Ioi 0, Real.exp (-x) * x ^ (s - 1)") - Line 4178
LeanError(message='Lean error:\ntype mismatch, term\n  integral_exp_neg_Ioi_zero\nafter simplification has type\n  ∫ (x : ℝ) in Set.Ioi 0, Real.exp (-x) = 1 : Prop\nbut is expected to have type\n  sorry = 1 : Prop') - Line 4179
LeanError(message='Lean error:\nno goals to be solved') - Line 4182
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\npartialGamma : x✝\ns : ℂ\nhs : 0 < s.re\nX : ℝ\nhX : 0 ≤ X\n⊢ sorry = s * sorry - ↑(Real.exp (-X)) * ↑X ^ s") - Line 4184
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.Tendsto ?m.6487 ?m.6488 (nhds 0)\nx✝ : Sort u_1\nGammaIntegral : x✝\ns : ℂ\nhs : 0 < s.re\nthis : (fun X => s * sorry - ↑X ^ s * ↑(Real.exp (-X))) =ᶠ[Filter.atTop] (s + 1).partialGamma\n⊢ Filter.Tendsto (fun X => -↑X ^ s * ↑(Real.exp (-X))) Filter.atTop sorry") - Line 4185
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4186
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nx✝ : Sort u_1\nGammaAux : x✝\ns : ℂ\nn : ℕ\nh1 : -s.re < ↑n\n⊢ sorry = sorry") - Line 4187
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 4188
LeanError(message='Lean error:\ninternal exception #5') - Line 4189
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4192
LeanError(message='Lean error:\nsimp made no progress') - Line 4194
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4195
LeanError(message='Lean error:\ninternal exception #5') - Line 4196
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  ↑?m.10618 : ℂ\nbut previous right-hand side is\n  1 / r * ∫ (t : ℝ) in Set.Ioi 0, sorry : ℝ") - Line 4197
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4198
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4206
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑(Real.Gamma ?s)\na r : ℝ\nha : 0 < a\nhr : 0 < r\n⊢ ↑(∫ (t : ℝ) in Set.Ioi 0, t ^ (a - 1) * sorry) = ↑((↑1 / r) ^ a) * ↑sorry") - Line 4208
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4209
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 4211
LeanError(message='Lean error:\nno goals to be solved') - Line 4212
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nbetaIntegral : x✝\nu v : ℂ\n⊢ sorry = sorry") - Line 4213
LeanError(message='Lean error:\nsimp made no progress') - Line 4214
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nbetaIntegral : x✝\ns t : ℂ\na : ℝ\nha : 0 < a\nha' : ↑a ≠ 0\n⊢ ∫ (x : ℝ) in 0 ..a, ↑x ^ (s - 1) * (↑a - ↑x) ^ (t - 1) = ↑a ^ (s + t - 1) * sorry") - Line 4215
LeanError(message='Lean error:\napplication type mismatch\n  Real.GammaIntegral_convergent ht\nargument\n  ht\nhas type\n  (0 : ℕ) < sorry : Prop\nbut is expected to have type\n  (0 : ℝ) < ?m.10176 : Prop') - Line 4216
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4217
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4218
LeanError(message='Lean error:\ninternal exception #5') - Line 4219
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a / ?b / ?c\ns : ℂ\nn : ℕ\nhn : n ≠ 0\n| ↑(↑n ^ sorry * ↑n.factorial / ((∏ x ∈ Finset.range n, (sorry + ↑x)) * (sorry + ↑n))) / s") - Line 4220
LeanError(message='Lean error:\ninternal exception #5') - Line 4221
LeanError(message='Lean error:\napplication type mismatch\n  Real.Gamma_eq_integral hs\nargument\n  hs\nhas type\n  (0 : ℕ) < sorry : Prop\nbut is expected to have type\n  (0 : ℝ) < sorry : Prop') - Line 4222
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.GammaSeq'.") - Line 4224
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4225
LeanError(message='Lean error:\n<input>:7:4: expected end of input') - Line 4226
LeanError(message='Lean error:\ntype mismatch, term\n  Nat.cast_nonneg ?m.1997\nafter simplification has type\n  0 ≤ ↑?m.1997 : Prop\nbut is expected to have type\n  sorry ≤ 0 : Prop') - Line 4228
LeanError(message="Lean error:\n<input>:1:35: expected ':' or term") - Line 4233
LeanError(message='Lean error:\ntype mismatch, term\n  Complex.Gamma_mul_Gamma_add_half ↑s\nafter simplification has type\n  Complex.Gamma ↑s * Complex.Gamma (↑s + 1 / 2) = Complex.Gamma (2 * ↑s) * 2 ^ (1 - 2 * ↑s) * ↑√Real.pi : Prop\nbut is expected to have type\n  ↑sorry * ↑sorry = ↑sorry * ↑2 ^ (↑1 - ↑2 * ↑s) * ↑√Real.pi : Prop') - Line 4234
LeanError(message='Lean error:\ninternal exception #5') - Line 4235
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  OrderedSMul ?m.25827 ?m.25828') - Line 4236
LeanError(message="Lean error:\ntype mismatch\n  ConvexOn.congr\n    (ConvexOn.comp (ConvexOn.subset convexOn_exp (Set.subset_univ (?m.12616 '' ?m.13271)) ?m.12502) sorry sorry)\n    fun x hx => sorry\nhas type\n  ConvexOn ℝ ?m.13271 ?m.13273 : Prop\nbut is expected to have type\n  ConvexOn ℝ (Set.Ioi 0) Gamma : Prop") - Line 4237
LeanError(message='Lean error:\nsimp made no progress') - Line 4238
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4239
LeanError(message='Lean error:\ndsimp made no progress') - Line 4242
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nf : ℝ → ℝ\nx : ℝ\nx✝¹ : Sort u_1\nlog : x✝¹\nx✝ : Sort u_2\nlogGammaSeq : x✝\nhf_conv : ConvexOn ℝ (Set.Ioi 0) f\nhf_feq : ∀ {y : ℝ}, 0 < y → f (y + 1) = f y + sorry\nhx : 0 < x\nhx' : x ≤ 1\nn : ℕ\n⊢ f x ≤ f 1 + x * sorry - x * sorry + sorry") - Line 4243
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + (?b - ?c)\nf : ℝ → ℝ\nx : ℝ\nn : ℕ\nx✝¹ : Sort u_1\nlog : x✝¹\nx✝ : Sort u_2\nlogGammaSeq : x✝\nhf_conv : ConvexOn ℝ (Set.Ioi 0) f\nhf_feq : ∀ {y : ℝ}, 0 < y → f (y + 1) = f y + sorry\nhx : 0 < x\nhn : n ≠ 0\n⊢ f 1 + sorry () ≤ f x") - Line 4244
LeanError(message="Lean error:\ntype mismatch\n  tendsto_of_tendsto_of_tendsto_of_le_of_le' ?m.4221 tendsto_const_nhds ?m.5967 ?m.5968\nhas type\n  Filter.Tendsto (sorry `«[anonymous]:0:0») ?m.5756 (nhds ?m.5755) : Prop\nbut is expected to have type\n  Filter.Tendsto (sorry `«[anonymous]:7:13») Filter.atTop (nhds (f x - f 1)) : Prop") - Line 4245
LeanError(message='Lean error:\ninternal exception #5') - Line 4246
LeanError(message='Lean error:\napplication type mismatch\n  Function.comp log\nargument\n  log\nhas type\n  x✝ : Sort u_2\nbut is expected to have type\n  ?m.4530 → ?m.7080 : Sort (max ?u.4527 (?u.3659 + 1))') - Line 4247
LeanError(message='Lean error:\ninternal exception #5') - Line 4250
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\ndoublingGamma : x✝\ns : ℝ\nhs : s ≠ 0\n⊢ sorry = s * sorry") - Line 4252
LeanError(message='Lean error:\nsimp made no progress') - Line 4253
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ℝ\nlog : ℝ → ℕ\ndoublingGamma : ℕ → ℝ\nx✝ : Sort u_1\nGamma : x✝\ns : ℕ\nhs : s ∈ Set.Ioi 0\nh1 : √sorry ≠ 0\nh2 : sorry ≠ 0\nh3 : sorry ≠ 0\nh4 : 2 ^ (s - 1) ≠ 0\n⊢ log (doublingGamma s) = (fun s => log sorry + log sorry + s * log 2 - log (2 * √Real.pi)) s") - Line 4254
LeanError(message='Lean error:\nno goals to be solved') - Line 4256
LeanError(message='Lean error:\ninternal exception #5') - Line 4257
LeanError(message='Lean error:\ninternal exception #5') - Line 4259
LeanError(message='Lean error:\n<input>:2:23: expected end of input') - Line 4260
LeanError(message='Lean error:\nno goals to be solved') - Line 4261
LeanError(message='Lean error:\ninternal exception #5') - Line 4262
LeanError(message='Lean error:\ninternal exception #5') - Line 4264
LeanError(message="Lean error:\nunknown identifier 'rexp'") - Line 4267
LeanError(message='Lean error:\ninternal exception #5') - Line 4269
LeanError(message='Lean error:\nsimp made no progress') - Line 4272
LeanError(message='Lean error:\ninternal exception #5') - Line 4273
LeanError(message='Lean error:\ninternal exception #5') - Line 4274
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.Tendsto ?m.2295 ?m.2296 (nhds 0)\nb : ℂ\nx✝ : Sort u_1\nverticalIntegral : x✝\nhb : 0 < b.re\nc : ℝ\n⊢ Filter.Tendsto sorry Filter.atTop (nhds 0)") - Line 4275
LeanError(message='Lean error:\nsimp made no progress') - Line 4276
LeanError(message='Lean error:\ninternal exception #5') - Line 4277
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4278
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4279
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4280
LeanError(message="Lean error:\n<input>:1:82: unexpected end of input; expected ']'") - Line 4281
LeanError(message='Lean error:\nsimp made no progress') - Line 4282
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  MeasureTheory.Integrable (fun x => ∏ i, sorry) MeasureTheory.volume\nwith\n  MeasureTheory.Integrable (fun v => ∏ x, Complex.exp (-b x * ↑(v x) ^ 2 + c x * ↑(v x))) MeasureTheory.volume\nι : Type u_2\ninst✝ : Fintype ι\nb : ι → ℂ\nhb : ∀ (i : ι), 0 < (b i).re\nc : ι → ℂ\n⊢ MeasureTheory.Integrable (fun v => ∏ x, Complex.exp (-b x * ↑(v x) ^ 2 + c x * ↑(v x))) MeasureTheory.volume") - Line 4284
LeanError(message='Lean error:\nno goals to be solved') - Line 4286
LeanError(message='Lean error:\ninternal exception #5') - Line 4287
LeanError(message='Lean error:\ninternal exception #5') - Line 4288
LeanError(message='Lean error:\nsimp made no progress') - Line 4289
LeanError(message='Lean error:\ninternal exception #5') - Line 4290
LeanError(message='Lean error:\ninternal exception #5') - Line 4291
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.2800 = ?m.2801\nV : Type u_1\ninst✝² : NormedAddCommGroup V\ninst✝¹ : InnerProductSpace ℝ V\ninst✝ : FiniteDimensional ℝ V\nb : ℝ\nhb : 0 < b\n⊢ ∫ (v : V), Real.exp (-b * ‖v‖ ^ 2) = (Real.pi / b) ^ (↑(Module.finrank ℝ V) / 2)") - Line 4293
LeanError(message='Lean error:\nsimp made no progress') - Line 4294
LeanError(message='Lean error:\n<input>:13:6: expected end of input') - Line 4300
LeanError(message='Lean error:\nsimp made no progress') - Line 4303
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4305
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4311
LeanError(message='Lean error:\n<input>:1:90: unterminated comment') - Line 4312
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4313
LeanError(message='Lean error:\napplication type mismatch\n  MeasureTheory.continuousAt_of_dominated (Filter.Eventually.of_forall sorry) f_le_bd\nargument\n  f_le_bd\nhas type\n  ∀ᶠ (c : ℂ) in sorry, ∀ᵐ (x : ℝ), ‖f c x‖ ≤ Real.exp (-d * x ^ 2) : Prop\nbut is expected to have type\n  ∀ᶠ (x : ℂ) in nhds b, ∀ᵐ (a : ℝ), ‖Complex.exp (-x * ↑a ^ 2)‖ ≤ Real.exp (-d * a ^ 2) : Prop') - Line 4314
LeanError(message='Lean error:\ninternal exception #5') - Line 4316
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4317
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4318
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4320
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4321
LeanError(message='Lean error:\ninternal exception #5') - Line 4330
LeanError(message='Lean error:\ninternal exception #5') - Line 4331
LeanError(message='Lean error:\ninternal exception #5') - Line 4332
LeanError(message='Lean error:\nsimp made no progress') - Line 4333
LeanError(message='Lean error:\ninternal exception #5') - Line 4335
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4336
LeanError(message='Lean error:\ninternal exception #5') - Line 4338
LeanError(message='Lean error:\nno goals to be solved') - Line 4339
LeanError(message="Lean error:\nunknown identifier 'posLog'") - Line 4342
LeanError(message='Lean error:\ninternal exception #5') - Line 4343
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4344
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ x ∈ s, ∀ x' ∈ s, |f x'| ≤ |f x|) → sorry ≤ sorry + ∑ t ∈ s, ?m.280\ncase neg\nx✝ : Type u_2\nlog : x✝\nα : Type u_1\ns : Finset α\nf : α → ℝ\nhs : ¬s = ∅\n⊢ sorry ≤ sorry + ∑ t ∈ s, ?m.280") - Line 4345
LeanError(message='Lean error:\nsimp made no progress') - Line 4350
LeanError(message='Lean error:\nsimp made no progress') - Line 4351
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nlogb : x✝\nx : ℝ\n⊢ sorry = sorry") - Line 4354
LeanError(message='Lean error:\ninternal exception #5') - Line 4355
LeanError(message='Lean error:\nsimp made no progress') - Line 4356
LeanError(message='Lean error:\nsimp made no progress') - Line 4357
LeanError(message='Lean error:\nsimp made no progress') - Line 4359
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 4360
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 4361
LeanError(message='Lean error:\ninternal exception #5') - Line 4362
LeanError(message='Lean error:\ninternal exception #5') - Line 4363
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'logb' has no definition") - Line 4364
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nhx : 0 < x\n⊢ sorry = y * sorry") - Line 4366
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\nlogb : x✝\nb x : ℝ\nk : ℕ\n⊢ sorry = k * sorry") - Line 4367
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx : ℝ\nx✝ : Sort u_1\nlogb : x✝\n⊢ sorry = x") - Line 4369
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4370
LeanError(message='Lean error:\ninternal exception #5') - Line 4371
LeanError(message='Lean error:\ninternal exception #5') - Line 4372
LeanError(message="Lean error:\ntype mismatch\n  -sorry ^ sorry\nhas type\n  ℤ : Type\nbut is expected to have type\n  x ∈ sorry '' Set.Iio 0 : Prop") - Line 4377
LeanError(message='Lean error:\nlinarith failed to find a contradiction\ncase h\nb : ℝ\na✝ : b = 1\n⊢ False failed') - Line 4379
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nh : 0 < x\nh₁ : 0 < y\n⊢ sorry ≤ sorry ↔ x ≤ y") - Line 4380
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nhx : 0 < x\nhxy : x < y\n⊢ sorry < sorry") - Line 4382
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nhx : 0 < x\nhy : 0 < y\n⊢ sorry < sorry ↔ x < y") - Line 4383
LeanError(message='Lean error:\ninternal exception #5') - Line 4384
LeanError(message='Lean error:\ninternal exception #5') - Line 4385
LeanError(message='Lean error:\ninternal exception #5') - Line 4386
LeanError(message='Lean error:\ninternal exception #5') - Line 4387
LeanError(message='Lean error:\ninternal exception #5') - Line 4388
LeanError(message='Lean error:\ninternal exception #5') - Line 4389
LeanError(message='Lean error:\ninternal exception #5') - Line 4390
LeanError(message='Lean error:\ninternal exception #5') - Line 4392
LeanError(message='Lean error:\ninternal exception #5') - Line 4394
LeanError(message='Lean error:\ninternal exception #5') - Line 4398
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nhx : 0 < x\nhxy : x < y\n⊢ sorry < sorry") - Line 4405
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx y : ℝ\nx✝ : Sort u_1\nlogb : x✝\nhx : 0 < x\nhy : 0 < y\n⊢ sorry < sorry ↔ y < x") - Line 4406
LeanError(message='Lean error:\ninternal exception #5') - Line 4407
LeanError(message='Lean error:\ninternal exception #5') - Line 4408
LeanError(message='Lean error:\ninternal exception #5') - Line 4409
LeanError(message='Lean error:\ninternal exception #5') - Line 4410
LeanError(message='Lean error:\ninternal exception #5') - Line 4411
LeanError(message='Lean error:\ninternal exception #5') - Line 4412
LeanError(message='Lean error:\ninternal exception #5') - Line 4413
LeanError(message='Lean error:\ninternal exception #5') - Line 4415
LeanError(message='Lean error:\ninternal exception #5') - Line 4416
LeanError(message='Lean error:\ninternal exception #5') - Line 4417
LeanError(message='Lean error:\ninternal exception #5') - Line 4419
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Filter.Tendsto ?m.2381 Filter.atTop Filter.atBot\nx✝ : Sort u_1\nlogb : x✝\n⊢ Filter.Tendsto sorry Filter.atTop Filter.atBot") - Line 4423
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  0 = r ∨ 0 < r → ⌊sorry⌋ = Int.log b r\nx✝ : Sort u_1\nlogb : x✝\nb : ℕ\nr : ℝ\nhr : 0 ≤ r\n⊢ ⌊sorry⌋ = Int.log b r") - Line 4424
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  0 = r ∨ 0 < r → ⌈sorry⌉ = Int.clog b r\nx✝ : Sort u_1\nlogb : x✝\nb : ℕ\nr : ℝ\nhr : 0 ≤ r\n⊢ ⌈sorry⌉ = Int.clog b r") - Line 4425
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ⌊sorry⌋₊ = Nat.log b n\nx✝ : Sort u_1\nlogb : x✝\nb n : ℕ\n⊢ ⌊sorry⌋₊ = Nat.log b n") - Line 4426
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ⌈sorry⌉₊ = Nat.clog b n\nx✝ : Sort u_1\nlogb : x✝\nb n : ℕ\n⊢ ⌈sorry⌉₊ = Nat.clog b n") - Line 4427
LeanError(message='Lean error:\nsimp made no progress') - Line 4429
LeanError(message='Lean error:\ntype mismatch\n  { mp := ?m.2950, mpr := sorry }\nhas type\n  ?m.2948 ↔ ?m.2949 : Prop\nbut is expected to have type\n  ContinuousAt sorry x ↔ x ≠ 0 : Prop') - Line 4438
LeanError(message='Lean error:\nsimp made no progress') - Line 4441
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4442
LeanError(message='Lean error:\ninternal exception #5') - Line 4444
LeanError(message='Lean error:\ninternal exception #5') - Line 4445
LeanError(message='Lean error:\ninternal exception #5') - Line 4446
LeanError(message='Lean error:\ninternal exception #5') - Line 4447
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4448
LeanError(message='Lean error:\n<input>:2:70: expected end of input') - Line 4450
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4451
LeanError(message='Lean error:\ntype mismatch\n  if h : x = 0 then ?pos✝ else ?neg✝\nhas type\n  ?m.890 : Sort ?u.889\nbut is expected to have type\n  sorry = sorry : Prop') - Line 4457
LeanError(message='Lean error:\ninternal exception #5') - Line 4458
LeanError(message='Lean error:\ninternal exception #5') - Line 4459
LeanError(message='Lean error:\ninternal exception #5') - Line 4460
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 4464
LeanError(message='Lean error:\ninternal exception #5') - Line 4465
LeanError(message='Lean error:\ninternal exception #5') - Line 4467
LeanError(message='Lean error:\ninternal exception #5') - Line 4468
LeanError(message='Lean error:\ninternal exception #5') - Line 4469
LeanError(message='Lean error:\ninternal exception #5') - Line 4470
LeanError(message='Lean error:\ninternal exception #5') - Line 4471
LeanError(message='Lean error:\ninternal exception #5') - Line 4472
LeanError(message='Lean error:\ninternal exception #5') - Line 4473
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  x\nx : ℝ\nx✝ : Sort u_1\nlog : x✝\nhx : x < -1\n⊢ 0 < sorry") - Line 4475
LeanError(message='Lean error:\ninternal exception #5') - Line 4476
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  x\nx : ℝ\nx✝ : Sort u_1\nlog : x✝\nh0 : x < 0\nh1 : -1 < x\n⊢ sorry < 0") - Line 4478
LeanError(message='Lean error:\ninternal exception #5') - Line 4479
LeanError(message='Lean error:\ninternal exception #5') - Line 4481
LeanError(message="Lean error:\n<input>:2:13: unexpected end of input; expected 'else'") - Line 4483
LeanError(message='Lean error:\ninternal exception #5') - Line 4484
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4485
LeanError(message="Lean error:\nunknown identifier 'add_one_lt_exp'") - Line 4489
LeanError(message='Lean error:\n<input>:2:29: expected end of input') - Line 4492
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4494
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.1906 = ?m.1904 / ?m.1905\nx✝ : Sort u_1\nlog : x✝\nx : ℝ\nhx : 0 ≤ x\n⊢ sorry = sorry / 2") - Line 4496
LeanError(message='Lean error:\nno goals to be solved') - Line 4497
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4500
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4511
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4513
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3701 =o[?m.3700] ?m.3702\nx✝ : Sort u_1\nlog : x✝\nn : ℕ\n⊢ (fun x => ?m.660 ^ n) =o[Filter.atTop] id") - Line 4515
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.add tendsto_const_nhds (Filter.Tendsto.div_atTop tendsto_const_nhds Filter.tendsto_id)\nhas type\n  Filter.Tendsto (fun x => ?m.1021 + ?m.1884 / id x) Filter.atTop (nhds (?m.1021 + 0)) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x => 1 + y / x) Filter.atTop sorry : Prop') - Line 4521
LeanError(message='Lean error:\ninternal exception #5') - Line 4523
LeanError(message='Lean error:\ninternal exception #5') - Line 4524
LeanError(message='Lean error:\ninternal exception #5') - Line 4525
LeanError(message='Lean error:\ninternal exception #5') - Line 4526
LeanError(message='Lean error:\ninternal exception #5') - Line 4531
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4532
LeanError(message="Lean error:\ntactic 'exact' failed, attempting to close the goal using\n  sorry\nthis is often due occurs-check failure\nF✝ : Type u_1\nlog : ℕ → F✝\nn : WithTop ℕ∞\nx : ℕ\nhx : ¬x = 0\n⊢ ContDiffWithinAt ℝ n log {0}ᶜ x") - Line 4539
LeanError(message='Lean error:\nsimp made no progress') - Line 4545
LeanError(message="Lean error:\n<input>:1:54: expected ':' or term") - Line 4559
LeanError(message='Lean error:\n<input>:2:48: unexpected end of input') - Line 4560
LeanError(message='Lean error:\n<input>:6:4: expected end of input') - Line 4561
LeanError(message="Lean error:\n<input>:5:23: expected '⟩'") - Line 4562
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4563
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4564
LeanError(message='Lean error:\nsimp made no progress') - Line 4567
LeanError(message='Lean error:\ninternal exception #5') - Line 4568
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  OrderBot ?m.35') - Line 4575
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  TopologicalSpace ?m.8563') - Line 4586
LeanError(message='Lean error:\ninternal exception #5') - Line 4589
LeanError(message='Lean error:\ninternal exception #5') - Line 4590
LeanError(message="Lean error:\n<input>:1:40: expected ':' or term") - Line 4593
LeanError(message='Lean error:\ninternal exception #5') - Line 4594
LeanError(message='Lean error:\ninternal exception #5') - Line 4595
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4599
LeanError(message='Lean error:\nsimp made no progress') - Line 4600
LeanError(message='Lean error:\nsimp made no progress') - Line 4607
LeanError(message='Lean error:\ninternal exception #5') - Line 4610
LeanError(message='Lean error:\ninternal exception #5') - Line 4611
LeanError(message='Lean error:\ninternal exception #5') - Line 4612
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Summable ?m.7450\nwith\n  Summable fun i => ?m.2104\nι : Type u_1\nx✝ : Sort u_2\nlog : x✝\nf : ι → ℂ\nhf : Summable f\n⊢ Summable fun i => ?m.2104") - Line 4618
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4622
LeanError(message='Lean error:\ninternal exception #5') - Line 4624
LeanError(message='Lean error:\nno goals to be solved') - Line 4625
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4626
LeanError(message='Lean error:\ntype mismatch, term\n  abs_norm_sub_norm_le (1 + f i) 1\nafter simplification has type\n  |‖1 + f i‖ - ‖1‖| ≤ ‖1 + f i - 1‖ : Prop\nbut is expected to have type\n  |‖1 + f i‖ - 1| ≤ ‖f i‖ : Prop') - Line 4628
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4629
LeanError(message='Lean error:\napplication type mismatch\n  Summable.vanishing hf this\nargument\n  this\nhas type\n  {x | Real.exp x - 1 < ε} ∈ sorry : Prop\nbut is expected to have type\n  ?m.21999 ∈ nhds 0 : Prop') - Line 4630
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4631
LeanError(message='Lean error:\nsimp made no progress') - Line 4636
LeanError(message='Lean error:\ninternal exception #5') - Line 4637
LeanError(message='Lean error:\n<input>:2:25: expected end of input') - Line 4640
LeanError(message='Lean error:\ninternal exception #5') - Line 4641
LeanError(message='Lean error:\ninternal exception #5') - Line 4643
LeanError(message='Lean error:\nsimp made no progress') - Line 4644
LeanError(message='Lean error:\nsimp made no progress') - Line 4645
LeanError(message='Lean error:\nsimp made no progress') - Line 4646
LeanError(message='Lean error:\ninternal exception #5') - Line 4647
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4649
LeanError(message='Lean error:\ninternal exception #5') - Line 4650
LeanError(message='Lean error:\ninternal exception #5') - Line 4653
LeanError(message='Lean error:\ninternal exception #5') - Line 4659
LeanError(message='Lean error:\ninternal exception #5') - Line 4661
LeanError(message='Lean error:\ninternal exception #5') - Line 4664
LeanError(message='Lean error:\ninternal exception #5') - Line 4667
LeanError(message='Lean error:\nno goals to be solved') - Line 4669
LeanError(message='Lean error:\nsimp made no progress') - Line 4670
LeanError(message='Lean error:\ninternal exception #5') - Line 4671
LeanError(message='Lean error:\ninternal exception #5') - Line 4672
LeanError(message='Lean error:\nsimp made no progress') - Line 4673
LeanError(message='Lean error:\ninternal exception #5') - Line 4674
LeanError(message='Lean error:\ninternal exception #5') - Line 4675
LeanError(message='Lean error:\nno goals to be solved') - Line 4687
LeanError(message='Lean error:\n<input>:1:34: expected token') - Line 4689
LeanError(message='Lean error:\nsimp made no progress') - Line 4692
LeanError(message='Lean error:\nno goals to be solved') - Line 4694
LeanError(message='Lean error:\nno goals to be solved') - Line 4702
LeanError(message='Lean error:\nno goals to be solved') - Line 4703
LeanError(message='Lean error:\n<input>:2:42: expected end of input') - Line 4708
LeanError(message='Lean error:\napplication type mismatch\n  tendsto_nhdsWithin_congr h_eq\nargument\n  h_eq\nhas type\n  ∀ x ∈ Set.Iio 0, (-(fun x => sorry * x) ∘ fun x => |x|) x = Real.log x * x : Prop\nbut is expected to have type\n  ∀ x ∈ Set.Iio 0, ?m.4834 x = sorry * x : Prop') - Line 4715
LeanError(message='Lean error:\ntype mismatch\n  IsOpen.eventually_mem isOpen_ne hb\nhas type\n  ∀ᶠ (x : ℂ) in nhds b, x ∈ {y | y ≠ 0} : Prop\nbut is expected to have type\n  ∀ᶠ (x : ℂ) in sorry, x ≠ 0 : Prop') - Line 4716
LeanError(message='Lean error:\ntype mismatch\n  IsOpen.eventually_mem isOpen_ne ha\nhas type\n  ∀ᶠ (x : ℂ) in nhds a, x ∈ {y | y ≠ 0} : Prop\nbut is expected to have type\n  ∀ᶠ (x : ℂ) in sorry, x ≠ 0 : Prop') - Line 4717
LeanError(message='Lean error:\napplication type mismatch\n  IsOpen.eventually_mem ?m.4872 hp_fst\nargument\n  hp_fst\nhas type\n  p.1 ≠ 0 : Prop\nbut is expected to have type\n  ?m.4870 ∈ ?m.4871 : Prop') - Line 4718
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4720
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4724
LeanError(message='Lean error:\napplication type mismatch\n  IsOpen.eventually_mem (isOpen_lt continuous_fst continuous_const) hp_fst\nargument\n  hp_fst\nhas type\n  p.1 < 0 : Prop\nbut is expected to have type\n  ?m.4524 ∈ {b | b.1 < ?m.6025} : Prop') - Line 4733
LeanError(message='Lean error:\napplication type mismatch\n  IsOpen.eventually_mem (isOpen_lt continuous_const continuous_fst) hp_fst\nargument\n  hp_fst\nhas type\n  0 < p.1 : Prop\nbut is expected to have type\n  ?m.4130 ∈ {b | ?m.4832 < b.1} : Prop') - Line 4734
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4735
LeanError(message="Lean error:\n<input>:1:59: expected ':' or term") - Line 4736
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4747
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  fun p => sorry\nx : NNReal\ny : ℝ\nh : x ≠ 0 ∨ 0 < y\nthis : (fun p => sorry) = Real.toNNReal ∘ (fun p => p.1 ^ p.2) ∘ fun p => (sorry, p.2)\n⊢ ContinuousAt (fun p => p.1 ^ p.2) (x, y)") - Line 4753
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.1127 ?m.1128\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4760
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4761
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4762
LeanError(message='Lean error:\ninternal exception #5') - Line 4765
LeanError(message='Lean error:\nsimp made no progress') - Line 4788
LeanError(message="Lean error:\ntype mismatch, term\n  HasFDerivAt.hasDerivAt (HasFDerivAt.cpow (HasDerivAt.hasFDerivAt hf) hg h0)\nafter simplification has type\n  HasDerivAt (fun x => f x ^ g x)\n    (((g x * f x ^ (g x - 1)) • ContinuousLinearMap.smulRight 1 f' +\n        (f x ^ g x * Complex.log (f x)) • ContinuousLinearMap.smulRight 1 g')\n      1)\n    x : Prop\nbut is expected to have type\n  HasDerivAt (fun x => f x ^ g x) (g x * f x ^ (g x - 1) * f' + f x ^ g x * Complex.log (f x) * g') x : Prop") - Line 4792
LeanError(message="Lean error:\ntype mismatch, term\n  HasFDerivWithinAt.hasDerivWithinAt (HasFDerivWithinAt.cpow (HasDerivWithinAt.hasFDerivWithinAt hf) hg h0)\nafter simplification has type\n  HasDerivWithinAt (fun x => f x ^ g x)\n    (((g x * f x ^ (g x - 1)) • ContinuousLinearMap.smulRight 1 f' +\n        (f x ^ g x * Complex.log (f x)) • ContinuousLinearMap.smulRight 1 g')\n      1)\n    s x : Prop\nbut is expected to have type\n  HasDerivWithinAt (fun x => f x ^ g x) (g x * f x ^ (g x - 1) * f' + f x ^ g x * Complex.log (f x) * g') s x : Prop") - Line 4795
LeanError(message='Lean error:\ntype mismatch\n  HasStrictFDerivAt.congr_of_eventuallyEq ?m.17441 sorry\nhas type\n  HasStrictFDerivAt ?m.17438 ?m.17439 ?m.17440 : Prop\nbut is expected to have type\n  HasStrictFDerivAt (fun x => x.1 ^ x.2)\n    ((p.2 * p.1 ^ (p.2 - 1)) • ContinuousLinearMap.fst ℝ ℝ ℝ + sorry • ContinuousLinearMap.snd ℝ ℝ ℝ) p : Prop') - Line 4806
LeanError(message='Lean error:\ntype mismatch\n  HasStrictFDerivAt.congr_of_eventuallyEq ?m.18819 sorry\nhas type\n  HasStrictFDerivAt ?m.18816 ?m.18817 ?m.18818 : Prop\nbut is expected to have type\n  HasStrictFDerivAt (fun x => x.1 ^ x.2)\n    ((p.2 * p.1 ^ (p.2 - 1)) • ContinuousLinearMap.fst ℝ ℝ ℝ + sorry • ContinuousLinearMap.snd ℝ ℝ ℝ) p : Prop') - Line 4807
LeanError(message='Lean error:\ninternal exception #5') - Line 4808
LeanError(message='Lean error:\nno goals to be solved') - Line 4810
LeanError(message='Lean error:\n<input>:3:17: expected end of input') - Line 4811
LeanError(message='Lean error:\ntype mismatch, term\n  HasStrictDerivAt.rpow (hasStrictDerivAt_const x a) (hasStrictDerivAt_id x) ha\nafter simplification has type\n  HasStrictDerivAt (fun x => a ^ x) (a ^ x * Real.log a) x : Prop\nbut is expected to have type\n  HasStrictDerivAt (fun x => a ^ x) (sorry ()) x : Prop') - Line 4812
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  HasDerivAt ?m.12037 (?m.12038 ?m.12039) ?m.12039\nwith\n  HasDerivAt (fun x => x ^ p) (p * 0 ^ (p - 1)) 0\ncase inr\np : ℝ\nh : 1 ≤ p\n⊢ HasDerivAt (fun x => x ^ p) (p * 0 ^ (p - 1)) 0") - Line 4816
LeanError(message='Lean error:\n<input>:2:23: expected end of input') - Line 4821
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 4851
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 4854
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto.eventually_const_le h₁ h₂\nargument\n  h₂\nhas type\n  Filter.Tendsto (fun x => 1 + t / x) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.27186 Filter.atTop (nhds 1) : Prop') - Line 4863
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4880
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4881
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4882
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4883
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4884
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4885
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4886
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4887
LeanError(message='Lean error:\ninternal exception #5') - Line 4890
LeanError(message='Lean error:\ninternal exception #5') - Line 4891
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4892
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 4893
LeanError(message='Lean error:\ninternal exception #5') - Line 4895
LeanError(message='Lean error:\ninternal exception #5') - Line 4896
LeanError(message='Lean error:\ninternal exception #5') - Line 4897
LeanError(message='Lean error:\ninternal exception #5') - Line 4898
LeanError(message='Lean error:\nsimp made no progress') - Line 4899
LeanError(message='Lean error:\ninternal exception #5') - Line 4903
LeanError(message='Lean error:\nsimp made no progress') - Line 4904
LeanError(message='Lean error:\nsimp made no progress') - Line 4905
LeanError(message='Lean error:\ntype mismatch\n  Real.sqrt_eq_rpow ↑x\nhas type\n  √↑x = ↑x ^ (1 / 2) : Prop\nbut is expected to have type\n  ↑sorry = ↑x ^ (1 / 2) : Prop') - Line 4908
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 4913
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (List ℝ) sorry ?m.1119 ?m.1120\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4916
LeanError(message='Lean error:\ninternal exception #5') - Line 4922
LeanError(message='Lean error:\ninternal exception #5') - Line 4923
LeanError(message='Lean error:\nsimp made no progress') - Line 4924
LeanError(message='Lean error:\nsimp made no progress') - Line 4925
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4940
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4949
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 4961
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4962
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4973
LeanError(message='Lean error:\nno goals to be solved') - Line 4975
LeanError(message='Lean error:\ninternal exception #5') - Line 4977
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4978
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4980
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4983
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4986
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4987
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4988
LeanError(message='Lean error:\ninternal exception #5') - Line 4989
LeanError(message='Lean error:\nsimp made no progress') - Line 4990
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4991
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 4996
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4999
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5002
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5003
LeanError(message='Lean error:\n<input>:1:35: expected end of input') - Line 5004
LeanError(message='Lean error:\ninternal exception #5') - Line 5005
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.629 ?m.630\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5006
LeanError(message='Lean error:\nsimp made no progress') - Line 5008
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 5011
LeanError(message='Lean error:\nsimp made no progress') - Line 5012
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 5013
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.799 ?m.800\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5015
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.719 ?m.720\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5016
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.671 ?m.672\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5017
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5020
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5021
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.708 ?m.709\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5022
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.708 ?m.709\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5023
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5024
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5025
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5026
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5027
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.754 ?m.755\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5028
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ENNReal sorry ?m.772 ?m.773\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5029
LeanError(message='Lean error:\ninternal exception #5') - Line 5031
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5032
LeanError(message='Lean error:\ninternal exception #5') - Line 5033
LeanError(message='Lean error:\ninternal exception #5') - Line 5034
LeanError(message='Lean error:\ninternal exception #5') - Line 5035
LeanError(message='Lean error:\ninternal exception #5') - Line 5036
LeanError(message='Lean error:\ninternal exception #5') - Line 5037
LeanError(message='Lean error:\ninternal exception #5') - Line 5038
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 5045
LeanError(message='Lean error:\nsimp made no progress') - Line 5048
LeanError(message='Lean error:\n<input>:10:4: expected end of input') - Line 5054
LeanError(message='Lean error:\n<input>:1:39: expected end of input') - Line 5055
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 5056
LeanError(message='Lean error:\n<input>:2:25: expected end of input') - Line 5060
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 5066
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5068
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5071
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5074
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5075
LeanError(message='Lean error:\n<input>:3:6: expected end of input') - Line 5077
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5079
LeanError(message='Lean error:\n<input>:1:33: expected end of input') - Line 5080
LeanError(message='Lean error:\n<input>:1:38: expected end of input') - Line 5084
LeanError(message='Lean error:\ninternal exception #5') - Line 5085
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5086
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 5087
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 5088
LeanError(message='Lean error:\ninternal exception #5') - Line 5089
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5090
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5091
LeanError(message='Lean error:\ninternal exception #5') - Line 5092
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 5093
LeanError(message='Lean error:\ninternal exception #5') - Line 5094
LeanError(message='Lean error:\ninternal exception #5') - Line 5095
LeanError(message='Lean error:\ninternal exception #5') - Line 5096
LeanError(message='Lean error:\ninternal exception #5') - Line 5097
LeanError(message='Lean error:\ninternal exception #5') - Line 5098
LeanError(message='Lean error:\ninternal exception #5') - Line 5100
LeanError(message='Lean error:\nsimp made no progress') - Line 5119
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 5131
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 5133
LeanError(message='Lean error:\ninternal exception #5') - Line 5141
LeanError(message='Lean error:\ninternal exception #5') - Line 5142
LeanError(message='Lean error:\ninternal exception #5') - Line 5145
LeanError(message='Lean error:\ninternal exception #5') - Line 5146
LeanError(message='Lean error:\ninternal exception #5') - Line 5147
LeanError(message='Lean error:\ninternal exception #5') - Line 5148
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5149
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5150
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5157
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5158
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5174
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 5187
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 5188
LeanError(message='Lean error:\ninternal exception #5') - Line 5228
LeanError(message='Lean error:\ninternal exception #5') - Line 5229
LeanError(message='Lean error:\nsimp made no progress') - Line 5230
LeanError(message='Lean error:\nsimp made no progress') - Line 5231
LeanError(message='Lean error:\ninternal exception #5') - Line 5232
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5233
LeanError(message='Lean error:\ninternal exception #5') - Line 5235
LeanError(message='Lean error:\ninternal exception #5') - Line 5236
LeanError(message='Lean error:\ninternal exception #5') - Line 5237
LeanError(message='Lean error:\ninternal exception #5') - Line 5238
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  RCLike ?m.612') - Line 5239
LeanError(message='Lean error:\ninternal exception #5') - Line 5240
LeanError(message='Lean error:\ninternal exception #5') - Line 5241
LeanError(message='Lean error:\ninternal exception #5') - Line 5242
LeanError(message='Lean error:\ninternal exception #5') - Line 5243
LeanError(message='Lean error:\ninternal exception #5') - Line 5244
LeanError(message='Lean error:\ninternal exception #5') - Line 5245
LeanError(message='Lean error:\nsimp made no progress') - Line 5248
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousAt.norm hc\nargument\n  hc\nhas type\n  @ContinuousAt ℝ Y✝ UniformSpace.toTopologicalSpace ?m.3322 tan x : Prop\nbut is expected to have type\n  @ContinuousAt ?m.7995 ?m.3761 ?m.7670 UniformSpace.toTopologicalSpace ?m.3764 ?m.7673 : Prop') - Line 5250
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5285
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5286
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 5289
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 5290
LeanError(message='Lean error:\ninternal exception #5') - Line 5302
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Complex.sin ?x\nx✝ : Sort u_1\nsin : x✝\nθ : ℂ\n⊢ sorry = 0 ↔ ∃ k, θ = ↑k * ↑Real.pi") - Line 5303
LeanError(message='Lean error:\ninternal exception #5') - Line 5304
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\ntan : x✝\nθ : ℂ\n⊢ sorry = 0 ↔ ∃ k, ↑k * ↑Real.pi / 2 = θ") - Line 5305
LeanError(message='Lean error:\ninternal exception #5') - Line 5306
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5308
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5309
LeanError(message='Lean error:\nsimp made no progress') - Line 5310
LeanError(message='Lean error:\ninternal exception #5') - Line 5311
LeanError(message='Lean error:\ninternal exception #5') - Line 5312
LeanError(message='Lean error:\ninternal exception #5') - Line 5313
LeanError(message='Lean error:\ninternal exception #5') - Line 5314
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 5315
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5317
LeanError(message='Lean error:\ninternal exception #5') - Line 5318
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 5319
LeanError(message='Lean error:\napplication type mismatch\n  1 * (w * w) + -2 * sorry * w + 1 = ?m.583\nargument\n  ?m.583\nhas type\n  β✝ : Sort u_2\nbut is expected to have type\n  ℤ : Type') - Line 5323
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.35 is not an inductive datatype') - Line 5325
LeanError(message='Lean error:\nno goals to be solved') - Line 5337
LeanError(message='Lean error:\nsimp made no progress') - Line 5339
LeanError(message='Lean error:\napplication type mismatch\n  ContinuousAt.norm hc\nargument\n  hc\nhas type\n  @ContinuousAt ℂ Y✝ UniformSpace.toTopologicalSpace ?m.3343 tan x : Prop\nbut is expected to have type\n  @ContinuousAt ?m.8016 ?m.3782 ?m.7691 UniformSpace.toTopologicalSpace ?m.3785 ?m.7694 : Prop') - Line 5341
LeanError(message='Lean error:\ninternal exception #5') - Line 5346
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  sorry * ((sorry + 1) / (Complex.I * (1 - sorry)))\nz : UpperHalfPlane\nh1 : sorry * ((sorry + 1) / (Complex.I * (1 - sorry))) = -sorry * Complex.I * ((sorry + 1) * (1 / (1 - sorry)))\n⊢ ↑Real.pi *\n      ((Complex.exp (2 * ↑Real.pi * Complex.I * ↑z) + 1) /\n        (Complex.I * (1 - Complex.exp (2 * ↑Real.pi * Complex.I * ↑z)))) =\n    ↑Real.pi * Complex.I - 2 * ↑Real.pi * Complex.I * ∑' (n : ℕ), Complex.exp (2 * ↑Real.pi * Complex.I * ↑z) ^ n") - Line 5347
LeanError(message='Lean error:\ninternal exception #5') - Line 5368
LeanError(message='Lean error:\nsimp made no progress') - Line 5381
LeanError(message='Lean error:\ninternal exception #5') - Line 5383
LeanError(message='Lean error:\ninternal exception #5') - Line 5384
LeanError(message='Lean error:\ninternal exception #5') - Line 5385
LeanError(message='Lean error:\ninternal exception #5') - Line 5386
LeanError(message='Lean error:\ninternal exception #5') - Line 5387
LeanError(message='Lean error:\ninternal exception #5') - Line 5388
LeanError(message='Lean error:\ninternal exception #5') - Line 5391
LeanError(message='Lean error:\ninternal exception #5') - Line 5394
LeanError(message='Lean error:\nsimp made no progress') - Line 5395
LeanError(message='Lean error:\ninternal exception #5') - Line 5397
LeanError(message='Lean error:\nsimp made no progress') - Line 5398
LeanError(message='Lean error:\ninternal exception #5') - Line 5399
LeanError(message='Lean error:\ninternal exception #5') - Line 5400
LeanError(message='Lean error:\ninternal exception #5') - Line 5402
LeanError(message='Lean error:\ninternal exception #5') - Line 5403
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  sorry\nθ : Real.Angle\nh : sorry = ↑(2 • (sorry / 2))\n⊢ 2 • θ = ↑Real.pi ↔ θ = ↑(Real.pi / 2) ∨ θ = ↑(-Real.pi / 2)") - Line 5404
LeanError(message='Lean error:\ninternal exception #5') - Line 5405
LeanError(message='Lean error:\n<input>:2:23: expected end of input') - Line 5406
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 5407
LeanError(message='Lean error:\n<input>:1:55: expected end of input') - Line 5408
LeanError(message='Lean error:\ninternal exception #5') - Line 5417
LeanError(message='Lean error:\ninternal exception #5') - Line 5418
LeanError(message='Lean error:\ninternal exception #5') - Line 5419
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ∃ n, ↑n * Real.pi = ?m.1445\nθ : Real.Angle\n⊢ Real.sin sorry ≠ 0 ↔ ¬(θ = 0 ∨ θ = ↑Real.pi)") - Line 5420
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5421
LeanError(message='Lean error:\ntarget\n  θ\nhas type\n  ℝ : Type\nbut is expected to have type\n  Real.Angle : Type') - Line 5422
LeanError(message='Lean error:\ninternal exception #5') - Line 5425
LeanError(message='Lean error:\ninternal exception #5') - Line 5426
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5427
LeanError(message='Lean error:\ntarget\n  θ\nhas type\n  ℝ : Type\nbut is expected to have type\n  Real.Angle : Type') - Line 5428
LeanError(message='Lean error:\ninternal exception #5') - Line 5431
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5432
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5433
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5435
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5436
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5437
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5438
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5439
LeanError(message='Lean error:\n(deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 5440
LeanError(message='Lean error:\ninternal exception #5') - Line 5441
LeanError(message='Lean error:\ninternal exception #5') - Line 5443
LeanError(message='Lean error:\ninternal exception #5') - Line 5445
LeanError(message='Lean error:\ninternal exception #5') - Line 5446
LeanError(message='Lean error:\ninternal exception #5') - Line 5448
LeanError(message='Lean error:\ninternal exception #5') - Line 5449
LeanError(message='Lean error:\ntarget\n  θ\nhas type\n  α✝ : Sort u_1\nbut is expected to have type\n  Real.Angle : Type') - Line 5450
LeanError(message='Lean error:\ninternal exception #5') - Line 5457
LeanError(message='Lean error:\ninternal exception #5') - Line 5458
LeanError(message='Lean error:\ninternal exception #5') - Line 5459
LeanError(message='Lean error:\ninternal exception #5') - Line 5460
LeanError(message='Lean error:\ninternal exception #5') - Line 5461
LeanError(message='Lean error:\ninternal exception #5') - Line 5462
LeanError(message='Lean error:\ninternal exception #5') - Line 5464
LeanError(message='Lean error:\ninternal exception #5') - Line 5466
LeanError(message='Lean error:\ninternal exception #5') - Line 5467
LeanError(message='Lean error:\ninternal exception #5') - Line 5468
LeanError(message='Lean error:\n<input>:1:23: expected end of input') - Line 5470
LeanError(message='Lean error:\ninternal exception #5') - Line 5471
LeanError(message='Lean error:\ninternal exception #5') - Line 5472
LeanError(message='Lean error:\ninternal exception #5') - Line 5474
LeanError(message='Lean error:\ninternal exception #5') - Line 5475
LeanError(message='Lean error:\ninternal exception #5') - Line 5478
LeanError(message='Lean error:\ninternal exception #5') - Line 5479
LeanError(message='Lean error:\ninternal exception #5') - Line 5480
LeanError(message='Lean error:\ninternal exception #5') - Line 5481
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.833\nθ : Real.Angle\n| Real.sin sorry") - Line 5482
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.833\nθ : Real.Angle\n| Real.cos sorry") - Line 5483
LeanError(message='Lean error:\ninternal exception #5') - Line 5484
LeanError(message='Lean error:\ninternal exception #5') - Line 5485
LeanError(message='Lean error:\ninternal exception #5') - Line 5486
LeanError(message='Lean error:\ninternal exception #5') - Line 5487
LeanError(message='Lean error:\ninternal exception #5') - Line 5490
LeanError(message='Lean error:\ninternal exception #5') - Line 5491
LeanError(message='Lean error:\ninternal exception #5') - Line 5492
LeanError(message='Lean error:\ntarget\n  θ\nhas type\n  ℝ : Type\nbut is expected to have type\n  Real.Angle : Type') - Line 5493
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.833\nθ : Real.Angle\n| Real.tan sorry") - Line 5496
LeanError(message='Lean error:\ninternal exception #5') - Line 5497
LeanError(message='Lean error:\ninternal exception #5') - Line 5499
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5502
LeanError(message='Lean error:\nsimp made no progress') - Line 5503
LeanError(message='Lean error:\ninternal exception #5') - Line 5506
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5509
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.1131 = 0\nθ : Real.Angle\n⊢ θ.sign ≠ 0 ↔ ¬(θ = 0 ∨ θ = ↑Real.pi)") - Line 5510
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5511
LeanError(message='Lean error:\n<input>:2:37: expected end of input') - Line 5512
LeanError(message='Lean error:\ninternal exception #5') - Line 5514
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5515
LeanError(message='Lean error:\n<input>:2:45: expected end of input') - Line 5516
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5518
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5519
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5520
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.sign'.") - Line 5521
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 5522
LeanError(message='Lean error:\ninternal exception #5') - Line 5523
LeanError(message="Lean error:\ntype mismatch, term\n  Complex.tan_add\n    (Eq.mpr\n      (eq_of_heq\n        ((fun a a' e'_1 b b' e'_2 =>\n            Eq.casesOn (motive := fun a_1 x => a' = a_1 → HEq e'_1 x → HEq (a ∨ b) (a' ∨ b')) e'_1\n              (fun h =>\n                Eq.ndrec (motive := fun a' => ∀ (e_1 : a = a'), HEq e_1 (Eq.refl a) → HEq (a ∨ b) (a' ∨ b'))\n                  (fun e_1 h =>\n                    Eq.casesOn (motive := fun a_1 x => b' = a_1 → HEq e'_2 x → HEq (a ∨ b) (a ∨ b')) e'_2\n                      (fun h =>\n                        Eq.ndrec (motive := fun b' => ∀ (e_2 : b = b'), HEq e_2 (Eq.refl b) → HEq (a ∨ b) (a ∨ b'))\n                          (fun e_2 h => HEq.refl (a ∨ b)) (Eq.symm h) e'_2)\n                      (Eq.refl b') (HEq.refl e'_2))\n                  (Eq.symm h) e'_1)\n              (Eq.refl a') (HEq.refl e'_1))\n          ((∀ (k : ℤ), ↑x ≠ (2 * ↑k + 1) * ↑Real.pi / 2) ∧ ∀ (l : ℤ), ↑y ≠ (2 * ↑l + 1) * ↑Real.pi / 2)\n          ((∀ (k : ℤ), x ≠ (2 * ↑k + 1) * Real.pi / 2) ∧ ∀ (l : ℤ), y ≠ (2 * ↑l + 1) * Real.pi / 2)\n          (eq_of_heq\n            ((fun a a' e'_1 b b' e'_2 =>\n                Eq.casesOn (motive := fun a_1 x => a' = a_1 → HEq e'_1 x → HEq (a ∧ b) (a' ∧ b')) e'_1\n                  (fun h =>\n                    Eq.ndrec (motive := fun a' => ∀ (e_1 : a = a'), HEq e_1 (Eq.refl a) → HEq (a ∧ b) (a' ∧ b'))\n                      (fun e_1 h =>\n                        Eq.casesOn (motive := fun a_1 x => b' = a_1 → HEq e'_2 x → HEq (a ∧ b) (a ∧ b')) e'_2\n                          (fun h =>\n                            Eq.ndrec (motive := fun b' => ∀ (e_2 : b = b'), HEq e_2 (Eq.refl b) → HEq (a ∧ b) (a ∧ b'))\n                              (fun e_2 h => HEq.refl (a ∧ b)) (Eq.symm h) e'_2)\n                          (Eq.refl b') (HEq.refl e'_2))\n                      (Eq.symm h) e'_1)\n                  (Eq.refl a') (HEq.refl e'_1))\n              (∀ (k : ℤ), ↑x ≠ (2 * ↑k + 1) * ↑Real.pi / 2) (∀ (k : ℤ), x ≠ (2 * ↑k + 1) * Real.pi / 2)\n              (pi_congr fun a =>\n                implies_congr'✝\n                  (propext\n                    (Eq.mpr\n                      (id\n                        (Eq.trans\n                          (Eq.trans\n                            (congr\n                              (congrArg (fun x_1 => Iff (↑x = (↑2 * ↑a + x_1) * ↑Real.pi / ↑2)) (Eq.symm Nat.cast_one))\n                              (congrArg (fun x_1 => x = (↑2 * ↑a + x_1) * Real.pi / ↑2) (Eq.symm Nat.cast_one)))\n                            (congr\n                              (congrArg Iff\n                                (Eq.trans\n                                  (congrArg (Eq ↑x)\n                                    (Eq.trans\n                                      (congrArg (fun x => x / ↑2)\n                                        (Eq.trans\n                                          (Eq.trans\n                                            (congrArg (fun x => x * ↑Real.pi)\n                                              (Eq.trans\n                                                (Eq.trans\n                                                  (congrArg (fun x => x + ↑1)\n                                                    (Eq.trans (congrArg (fun x => x * ↑a) (Eq.symm (Int.cast_ofNat 2)))\n                                                      (_proof_14✝ (↑2) a)))\n                                                  (congrArg (HAdd.hAdd ↑(↑2 * a))\n                                                    (Eq.trans Nat.cast_one\n                                                      (Eq.symm\n                                                        (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                                (_proof_6✝ (↑2 * a) ↑1)))\n                                            (congrArg (fun x => x * ↑Real.pi)\n                                              (Eq.trans\n                                                (Eq.trans\n                                                  (Eq.trans (congrArg (fun x => ↑(2 * a + x)) Nat.cast_one)\n                                                    (Int.cast_add (2 * a) 1))\n                                                  (congr\n                                                    (congrArg HAdd.hAdd\n                                                      (Eq.trans (Int.cast_mul 2 a)\n                                                        (congrArg (fun x => x * ↑a) (Int.cast_ofNat 2))))\n                                                    Int.cast_one))\n                                                (Eq.symm\n                                                  (Eq.trans\n                                                    (Eq.trans\n                                                      (congrArg Complex.ofReal\n                                                        (Eq.trans\n                                                          (Eq.trans (congrArg (fun x => ↑(2 * a + x)) Nat.cast_one)\n                                                            (Int.cast_add (2 * a) 1))\n                                                          (congr\n                                                            (congrArg HAdd.hAdd\n                                                              (Eq.trans (Int.cast_mul 2 a)\n                                                                (congrArg (fun x => x * ↑a) (Int.cast_ofNat 2))))\n                                                            Int.cast_one)))\n                                                      (Complex.ofReal_add (2 * ↑a) 1))\n                                                    (congrArg (fun x => x + 1) (Complex.ofReal_mul 2 ↑a)))))))\n                                          (_proof_8✝ (↑(↑2 * a + ↑1)) Real.pi)))\n                                      (_proof_71✝ (↑(↑2 * a + ↑1) * Real.pi) ↑2)))\n                                  _proof_3✝))\n                              (congrArg (fun x_1 => x = x_1 * Real.pi / ↑2)\n                                (Eq.trans\n                                  (Eq.trans\n                                    (congrArg (fun x => x + ↑1)\n                                      (Eq.trans (congrArg (fun x => x * ↑a) (Eq.symm (Int.cast_ofNat 2)))\n                                        (_proof_14✝ (↑2) a)))\n                                    (congrArg (HAdd.hAdd ↑(↑2 * a))\n                                      (Eq.trans Nat.cast_one\n                                        (Eq.symm (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                  (_proof_6✝ (↑2 * a) ↑1)))))\n                          (congr (congrArg (fun x_1 => Iff (x = ↑(2 * a + x_1) * Real.pi / 2)) Nat.cast_one)\n                            (congrArg (fun x_1 => x = ↑(2 * a + x_1) * Real.pi / 2) Nat.cast_one))))\n                      Iff.rfl))\n                  fun a => Eq.refl False)\n              (∀ (l : ℤ), ↑y ≠ (2 * ↑l + 1) * ↑Real.pi / 2) (∀ (l : ℤ), y ≠ (2 * ↑l + 1) * Real.pi / 2)\n              (pi_congr fun a =>\n                implies_congr'✝\n                  (propext\n                    (Eq.mpr\n                      (id\n                        (Eq.trans\n                          (Eq.trans\n                            (congr (congrArg (fun x => Iff (↑y = (↑2 * ↑a + x) * ↑Real.pi / ↑2)) (Eq.symm Nat.cast_one))\n                              (congrArg (fun x => y = (↑2 * ↑a + x) * Real.pi / ↑2) (Eq.symm Nat.cast_one)))\n                            (congr\n                              (congrArg Iff\n                                (Eq.trans\n                                  (congrArg (Eq ↑y)\n                                    (Eq.trans\n                                      (congrArg (fun x => x / ↑2)\n                                        (Eq.trans\n                                          (Eq.trans\n                                            (congrArg (fun x => x * ↑Real.pi)\n                                              (Eq.trans\n                                                (Eq.trans\n                                                  (congrArg (fun x => x + ↑1)\n                                                    (Eq.trans (congrArg (fun x => x * ↑a) (Eq.symm (Int.cast_ofNat 2)))\n                                                      (_proof_14✝ (↑2) a)))\n                                                  (congrArg (HAdd.hAdd ↑(↑2 * a))\n                                                    (Eq.trans Nat.cast_one\n                                                      (Eq.symm\n                                                        (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                                (_proof_6✝ (↑2 * a) ↑1)))\n                                            (congrArg (fun x => x * ↑Real.pi)\n                                              (Eq.trans\n                                                (Eq.trans\n                                                  (Eq.trans (congrArg (fun x => ↑(2 * a + x)) Nat.cast_one)\n                                                    (Int.cast_add (2 * a) 1))\n                                                  (congr\n                                                    (congrArg HAdd.hAdd\n                                                      (Eq.trans (Int.cast_mul 2 a)\n                                                        (congrArg (fun x => x * ↑a) (Int.cast_ofNat 2))))\n                                                    Int.cast_one))\n                                                (Eq.symm\n                                                  (Eq.trans\n                                                    (Eq.trans\n                                                      (congrArg Complex.ofReal\n                                                        (Eq.trans\n                                                          (Eq.trans (congrArg (fun x => ↑(2 * a + x)) Nat.cast_one)\n                                                            (Int.cast_add (2 * a) 1))\n                                                          (congr\n                                                            (congrArg HAdd.hAdd\n                                                              (Eq.trans (Int.cast_mul 2 a)\n                                                                (congrArg (fun x => x * ↑a) (Int.cast_ofNat 2))))\n                                                            Int.cast_one)))\n                                                      (Complex.ofReal_add (2 * ↑a) 1))\n                                                    (congrArg (fun x => x + 1) (Complex.ofReal_mul 2 ↑a)))))))\n                                          (_proof_8✝ (↑(↑2 * a + ↑1)) Real.pi)))\n                                      (_proof_71✝ (↑(↑2 * a + ↑1) * Real.pi) ↑2)))\n                                  _proof_3✝))\n                              (congrArg (fun x => y = x * Real.pi / ↑2)\n                                (Eq.trans\n                                  (Eq.trans\n                                    (congrArg (fun x => x + ↑1)\n                                      (Eq.trans (congrArg (fun x => x * ↑a) (Eq.symm (Int.cast_ofNat 2)))\n                                        (_proof_14✝ (↑2) a)))\n                                    (congrArg (HAdd.hAdd ↑(↑2 * a))\n                                      (Eq.trans Nat.cast_one\n                                        (Eq.symm (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                  (_proof_6✝ (↑2 * a) ↑1)))))\n                          (congr (congrArg (fun x => Iff (y = ↑(2 * a + x) * Real.pi / 2)) Nat.cast_one)\n                            (congrArg (fun x => y = ↑(2 * a + x) * Real.pi / 2) Nat.cast_one))))\n                      Iff.rfl))\n                  fun a => Eq.refl False)))\n          ((∃ k, ↑x = (2 * ↑k + 1) * ↑Real.pi / 2) ∧ ∃ l, ↑y = (2 * ↑l + 1) * ↑Real.pi / 2)\n          ((∃ k, x = (2 * ↑k + 1) * Real.pi / 2) ∧ ∃ l, y = (2 * ↑l + 1) * Real.pi / 2)\n          (eq_of_heq\n            ((fun a a' e'_1 b b' e'_2 =>\n                Eq.casesOn (motive := fun a_1 x => a' = a_1 → HEq e'_1 x → HEq (a ∧ b) (a' ∧ b')) e'_1\n                  (fun h =>\n                    Eq.ndrec (motive := fun a' => ∀ (e_1 : a = a'), HEq e_1 (Eq.refl a) → HEq (a ∧ b) (a' ∧ b'))\n                      (fun e_1 h =>\n                        Eq.casesOn (motive := fun a_1 x => b' = a_1 → HEq e'_2 x → HEq (a ∧ b) (a ∧ b')) e'_2\n                          (fun h =>\n                            Eq.ndrec (motive := fun b' => ∀ (e_2 : b = b'), HEq e_2 (Eq.refl b) → HEq (a ∧ b) (a ∧ b'))\n                              (fun e_2 h => HEq.refl (a ∧ b)) (Eq.symm h) e'_2)\n                          (Eq.refl b') (HEq.refl e'_2))\n                      (Eq.symm h) e'_1)\n                  (Eq.refl a') (HEq.refl e'_1))\n              (∃ k, ↑x = (2 * ↑k + 1) * ↑Real.pi / 2) (∃ k, x = (2 * ↑k + 1) * Real.pi / 2)\n              (eq_of_heq\n                ((fun α p p' e'_2 =>\n                    Eq.casesOn (motive := fun a x => p' = a → HEq e'_2 x → HEq (Exists p) (Exists p')) e'_2\n                      (fun h =>\n                        Eq.ndrec (motive := fun p' =>\n                          ∀ (e_2 : p = p'), HEq e_2 (Eq.refl p) → HEq (Exists p) (Exists p'))\n                          (fun e_2 h => HEq.refl (Exists p)) (Eq.symm h) e'_2)\n                      (Eq.refl p') (HEq.refl e'_2))\n                  ℤ (fun k => ↑x = (2 * ↑k + 1) * ↑Real.pi / 2) (fun k => x = (2 * ↑k + 1) * Real.pi / 2)\n                  (funext fun x_1 =>\n                    propext\n                      (Eq.mpr\n                        (id\n                          (Eq.trans\n                            (Eq.trans\n                              (congr\n                                (congrArg (fun x_2 => Iff (↑x = (↑2 * ↑x_1 + x_2) * ↑Real.pi / ↑2))\n                                  (Eq.symm Nat.cast_one))\n                                (congrArg (fun x_2 => x = (↑2 * ↑x_1 + x_2) * Real.pi / ↑2) (Eq.symm Nat.cast_one)))\n                              (congr\n                                (congrArg Iff\n                                  (Eq.trans\n                                    (congrArg (Eq ↑x)\n                                      (Eq.trans\n                                        (congrArg (fun x => x / ↑2)\n                                          (Eq.trans\n                                            (Eq.trans\n                                              (congrArg (fun x => x * ↑Real.pi)\n                                                (Eq.trans\n                                                  (Eq.trans\n                                                    (congrArg (fun x => x + ↑1)\n                                                      (Eq.trans\n                                                        (congrArg (fun x => x * ↑x_1) (Eq.symm (Int.cast_ofNat 2)))\n                                                        (_proof_14✝ (↑2) x_1)))\n                                                    (congrArg (HAdd.hAdd ↑(↑2 * x_1))\n                                                      (Eq.trans Nat.cast_one\n                                                        (Eq.symm\n                                                          (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                                  (_proof_6✝ (↑2 * x_1) ↑1)))\n                                              (congrArg (fun x => x * ↑Real.pi)\n                                                (Eq.trans\n                                                  (Eq.trans\n                                                    (Eq.trans (congrArg (fun x => ↑(2 * x_1 + x)) Nat.cast_one)\n                                                      (Int.cast_add (2 * x_1) 1))\n                                                    (congr\n                                                      (congrArg HAdd.hAdd\n                                                        (Eq.trans (Int.cast_mul 2 x_1)\n                                                          (congrArg (fun x => x * ↑x_1) (Int.cast_ofNat 2))))\n                                                      Int.cast_one))\n                                                  (Eq.symm\n                                                    (Eq.trans\n                                                      (Eq.trans\n                                                        (congrArg Complex.ofReal\n                                                          (Eq.trans\n                                                            (Eq.trans (congrArg (fun x => ↑(2 * x_1 + x)) Nat.cast_one)\n                                                              (Int.cast_add (2 * x_1) 1))\n                                                            (congr\n                                                              (congrArg HAdd.hAdd\n                                                                (Eq.trans (Int.cast_mul 2 x_1)\n                                                                  (congrArg (fun x => x * ↑x_1) (Int.cast_ofNat 2))))\n                                                              Int.cast_one)))\n                                                        (Complex.ofReal_add (2 * ↑x_1) 1))\n                                                      (congrArg (fun x => x + 1) (Complex.ofReal_mul 2 ↑x_1)))))))\n                                            (_proof_8✝ (↑(↑2 * x_1 + ↑1)) Real.pi)))\n                                        (_proof_71✝ (↑(↑2 * x_1 + ↑1) * Real.pi) ↑2)))\n                                    _proof_3✝))\n                                (congrArg (fun x_2 => x = x_2 * Real.pi / ↑2)\n                                  (Eq.trans\n                                    (Eq.trans\n                                      (congrArg (fun x => x + ↑1)\n                                        (Eq.trans (congrArg (fun x => x * ↑x_1) (Eq.symm (Int.cast_ofNat 2)))\n                                          (_proof_14✝ (↑2) x_1)))\n                                      (congrArg (HAdd.hAdd ↑(↑2 * x_1))\n                                        (Eq.trans Nat.cast_one\n                                          (Eq.symm (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                    (_proof_6✝ (↑2 * x_1) ↑1)))))\n                            (congr (congrArg (fun x_2 => Iff (x = ↑(2 * x_1 + x_2) * Real.pi / 2)) Nat.cast_one)\n                              (congrArg (fun x_2 => x = ↑(2 * x_1 + x_2) * Real.pi / 2) Nat.cast_one))))\n                        Iff.rfl))))\n              (∃ l, ↑y = (2 * ↑l + 1) * ↑Real.pi / 2) (∃ l, y = (2 * ↑l + 1) * Real.pi / 2)\n              (eq_of_heq\n                ((fun α p p' e'_2 =>\n                    Eq.casesOn (motive := fun a x => p' = a → HEq e'_2 x → HEq (Exists p) (Exists p')) e'_2\n                      (fun h =>\n                        Eq.ndrec (motive := fun p' =>\n                          ∀ (e_2 : p = p'), HEq e_2 (Eq.refl p) → HEq (Exists p) (Exists p'))\n                          (fun e_2 h => HEq.refl (Exists p)) (Eq.symm h) e'_2)\n                      (Eq.refl p') (HEq.refl e'_2))\n                  ℤ (fun l => ↑y = (2 * ↑l + 1) * ↑Real.pi / 2) (fun l => y = (2 * ↑l + 1) * Real.pi / 2)\n                  (funext fun x =>\n                    propext\n                      (Eq.mpr\n                        (id\n                          (Eq.trans\n                            (Eq.trans\n                              (congr\n                                (congrArg (fun x_1 => Iff (↑y = (↑2 * ↑x + x_1) * ↑Real.pi / ↑2))\n                                  (Eq.symm Nat.cast_one))\n                                (congrArg (fun x_1 => y = (↑2 * ↑x + x_1) * Real.pi / ↑2) (Eq.symm Nat.cast_one)))\n                              (congr\n                                (congrArg Iff\n                                  (Eq.trans\n                                    (congrArg (Eq ↑y)\n                                      (Eq.trans\n                                        (congrArg (fun x => x / ↑2)\n                                          (Eq.trans\n                                            (Eq.trans\n                                              (congrArg (fun x => x * ↑Real.pi)\n                                                (Eq.trans\n                                                  (Eq.trans\n                                                    (congrArg (fun x => x + ↑1)\n                                                      (Eq.trans\n                                                        (congrArg (fun x_1 => x_1 * ↑x) (Eq.symm (Int.cast_ofNat 2)))\n                                                        (_proof_14✝ (↑2) x)))\n                                                    (congrArg (HAdd.hAdd ↑(↑2 * x))\n                                                      (Eq.trans Nat.cast_one\n                                                        (Eq.symm\n                                                          (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                                  (_proof_6✝ (↑2 * x) ↑1)))\n                                              (congrArg (fun x => x * ↑Real.pi)\n                                                (Eq.trans\n                                                  (Eq.trans\n                                                    (Eq.trans (congrArg (fun x_1 => ↑(2 * x + x_1)) Nat.cast_one)\n                                                      (Int.cast_add (2 * x) 1))\n                                                    (congr\n                                                      (congrArg HAdd.hAdd\n                                                        (Eq.trans (Int.cast_mul 2 x)\n                                                          (congrArg (fun x_1 => x_1 * ↑x) (Int.cast_ofNat 2))))\n                                                      Int.cast_one))\n                                                  (Eq.symm\n                                                    (Eq.trans\n                                                      (Eq.trans\n                                                        (congrArg Complex.ofReal\n                                                          (Eq.trans\n                                                            (Eq.trans\n                                                              (congrArg (fun x_1 => ↑(2 * x + x_1)) Nat.cast_one)\n                                                              (Int.cast_add (2 * x) 1))\n                                                            (congr\n                                                              (congrArg HAdd.hAdd\n                                                                (Eq.trans (Int.cast_mul 2 x)\n                                                                  (congrArg (fun x_1 => x_1 * ↑x) (Int.cast_ofNat 2))))\n                                                              Int.cast_one)))\n                                                        (Complex.ofReal_add (2 * ↑x) 1))\n                                                      (congrArg (fun x => x + 1) (Complex.ofReal_mul 2 ↑x)))))))\n                                            (_proof_8✝ (↑(↑2 * x + ↑1)) Real.pi)))\n                                        (_proof_71✝ (↑(↑2 * x + ↑1) * Real.pi) ↑2)))\n                                    _proof_3✝))\n                                (congrArg (fun x => y = x * Real.pi / ↑2)\n                                  (Eq.trans\n                                    (Eq.trans\n                                      (congrArg (fun x => x + ↑1)\n                                        (Eq.trans (congrArg (fun x_1 => x_1 * ↑x) (Eq.symm (Int.cast_ofNat 2)))\n                                          (_proof_14✝ (↑2) x)))\n                                      (congrArg (HAdd.hAdd ↑(↑2 * x))\n                                        (Eq.trans Nat.cast_one\n                                          (Eq.symm (Eq.trans (congrArg Int.cast Nat.cast_one) Int.cast_one)))))\n                                    (_proof_6✝ (↑2 * x) ↑1)))))\n                            (congr (congrArg (fun x_1 => Iff (y = ↑(2 * x + x_1) * Real.pi / 2)) Nat.cast_one)\n                              (congrArg (fun x_1 => y = ↑(2 * x + x_1) * Real.pi / 2) Nat.cast_one))))\n                        Iff.rfl))))))))\n      h)\nafter simplification has type\n  Complex.tan (↑x + ↑y) = (Complex.tan ↑x + Complex.tan ↑y) / (1 - Complex.tan ↑x * Complex.tan ↑y) : Prop\nbut is expected to have type\n  sorry = (sorry + sorry) / (1 - sorry * sorry) : Prop") - Line 5527
LeanError(message='Lean error:\ninternal exception #5') - Line 5531
LeanError(message='Lean error:\ninternal exception #5') - Line 5542
LeanError(message='Lean error:\ninternal exception #5') - Line 5543
LeanError(message='Lean error:\ninternal exception #5') - Line 5544
LeanError(message='Lean error:\nno goals to be solved') - Line 5548
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 5560
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nx✝¹ : Sort u_1\narccos : x✝¹\nx✝ : Sort u_2\narctan : x✝\nx : ℝ\nh : 0 < x\n⊢ sorry = sorry") - Line 5561
LeanError(message='Lean error:\ninternal exception #5') - Line 5562
LeanError(message='Lean error:\ninternal exception #5') - Line 5563
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4934 is not an inductive datatype') - Line 5564
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5565
LeanError(message='Lean error:\ninternal exception #5') - Line 5566
LeanError(message='Lean error:\ninternal exception #5') - Line 5567
LeanError(message='Lean error:\ninternal exception #5') - Line 5568
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 5569
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 5570
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 5571
LeanError(message='Lean error:\ninternal exception #5') - Line 5572
LeanError(message='Lean error:\ninternal exception #5') - Line 5573
LeanError(message='Lean error:\ninternal exception #5') - Line 5574
LeanError(message='Lean error:\ninternal exception #5') - Line 5575
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.pi'.") - Line 5593
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.pi'.") - Line 5594
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Real.pi'.") - Line 5595
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 5597
LeanError(message='Lean error:\n<input>:1:46: expected end of input') - Line 5606
LeanError(message='Lean error:\ninternal exception #5') - Line 5607
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5659
LeanError(message='Lean error:\ninternal exception #5') - Line 5661
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 5665
LeanError(message="Lean error:\n<input>:1:44: expected '⟩'") - Line 5678
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (?a - ?b) / ?c\nx : ℝ\n⊢ √(1 / 2 - Real.cos x / 2) = √((1 - Real.cos x) / 2)") - Line 5680
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5689
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5718
LeanError(message='Lean error:\ninternal exception #5') - Line 5720
LeanError(message='Lean error:\ninternal exception #5') - Line 5721
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5722
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5723
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5724
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5725
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5726
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5727
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5728
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5729
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5730
LeanError(message='Lean error:\ninternal exception #5') - Line 5731
LeanError(message='Lean error:\nno goals to be solved') - Line 5732
LeanError(message='Lean error:\ntype mismatch, term\n  Real.quadratic_root_cos_pi_div_five\nafter simplification has type\n  4 * ((1 + √5) / 4) ^ 2 - 2 * ((1 + √5) / 4) - 1 = 0 : Prop\nbut is expected to have type\n  sorry () : Sort u_1') - Line 5737
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5775
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5776
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 5777
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 5778
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  -(?a - ?b)\nx : ℂ\n⊢ Real.cos (-sorry) = Real.sin sorry") - Line 5822
LeanError(message='Lean error:\ntype mismatch, term\n  Function.Antiperiodic.div Real.sin_antiperiodic Real.cos_antiperiodic\nafter simplification has type\n  Function.Periodic (Real.sin / Real.cos) Real.pi : Prop\nbut is expected to have type\n  Function.Periodic Real.tan Real.pi : Prop') - Line 5823
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Real.tan ?x\nx : ℂ\n⊢ Real.sin sorry / Real.cos sorry = (Real.sin sorry / Real.cos sorry)⁻¹") - Line 5827
LeanError(message='Lean error:\ninternal exception #5') - Line 5842
LeanError(message='Lean error:\ninternal exception #5') - Line 5843
LeanError(message='Lean error:\nsimp made no progress') - Line 5848
LeanError(message='Lean error:\ninternal exception #5') - Line 5849
LeanError(message="Lean error:\ntype mismatch, term\n  strictConcaveOn_sin_Icc.right ⟨le_rfl, sorry⟩ ⟨sorry, half_le_self sorry⟩ sorry (sub_pos.mpr hx') hx\nafter simplification has type\n  x < Real.sin (Real.pi / 2 * x) : Prop\nbut is expected to have type\n  x < sorry () : Prop") - Line 5853
LeanError(message="Lean error:\ntype mismatch, term\n  (StrictConcaveOn.concaveOn strictConcaveOn_sin_Icc).right ⟨le_rfl, sorry⟩ ⟨sorry, half_le_self sorry⟩\n    (sub_nonneg.mpr hx') hx\nafter simplification has type\n  x ≤ Real.sin (Real.pi / 2 * x) : Prop\nbut is expected to have type\n  x ≤ sorry () : Prop") - Line 5854
LeanError(message='Lean error:\ninternal exception #5') - Line 5863
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5867
LeanError(message='Lean error:\ninternal exception #5') - Line 5868
LeanError(message='Lean error:\n<input>:1:36: expected end of input') - Line 5870
LeanError(message="Lean error:\n<input>:3:59: expected '⟩'") - Line 5872
LeanError(message='Lean error:\nsimp made no progress') - Line 5874
LeanError(message='Lean error:\nsimp made no progress') - Line 5880
LeanError(message='Lean error:\nsimp made no progress') - Line 5887
LeanError(message='Lean error:\nsimp made no progress') - Line 5893
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  x ≤ 0 ∨ 0 ≤ x → |sorry| = sorry\nx✝ : Sort u_2\nsinh : x✝\nx : ℝ\n⊢ |sorry| = sorry") - Line 6
LeanError(message='Lean error:\ntype mismatch\n  strictMono_of_odd_strictMonoOn_nonneg (fun x => ?m.8542) ?m.8545\nhas type\n  StrictMono ?m.7390 : Prop\nbut is expected to have type\n  StrictMono fun x => ?m.5118 - x : Prop') - Line 12
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 13
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 14
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 100
LeanError(message='Lean error:\n<input>:4:4: expected end of input') - Line 102
LeanError(message='Lean error:\ninternal exception #5') - Line 104
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 105
LeanError(message='Lean error:\ninternal exception #5') - Line 106
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 108
LeanError(message='Lean error:\napplication type mismatch\n  Filter.Tendsto.congr (fun n => sorry) tendsto_const_nhds\nargument\n  tendsto_const_nhds\nhas type\n  Filter.Tendsto (fun x => ?m.8056) ?m.8057 (nhds ?m.8056) : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.8028 Filter.atTop sorry : Prop') - Line 110
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 111
LeanError(message="Lean error:\n<input>:1:41: expected '⟩'") - Line 138
LeanError(message="Lean error:\n<input>:1:42: expected '⟩'") - Line 139
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 162
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 163
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 166
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 167
LeanError(message='Lean error:\ninternal exception #5') - Line 170
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 173
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 174
LeanError(message='Lean error:\ninternal exception #5') - Line 184
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 187
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 214
LeanError(message='Lean error:\ntype mismatch, term\n  Filter.Tendsto.mul tendsto_const_nhds sorry\nafter simplification has type\n  Filter.Tendsto (fun x => ?m.883 * (↑x)⁻¹) Filter.atTop (nhds 0) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => C / ↑n) Filter.atTop (nhds 0) : Prop') - Line 231
LeanError(message='Lean error:\napplication type mismatch\n  ?m.1316 ≥ ⋯\nargument\n  sorry\nhas type\n  ∀ (A : Type ?u.1223) [inst : CommSemiring ℝ] [inst_1 : Semiring A] [inst_2 : Algebra ℝ A]\n    [inst_3 : TopologicalSpace ℝ] [inst_4 : TopologicalSpace A] [inst_5 : ContinuousSMul ℝ A],\n    Continuous ⇑(algebraMap ℝ A) : Prop\nbut is expected to have type\n  ?m.1269 : Type ?u.1221') - Line 237
LeanError(message='Lean error:\n<input>:5:4: expected end of input') - Line 239
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 261
LeanError(message='Lean error:\n<input>:1:25: expected token') - Line 262
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 270
LeanError(message='Lean error:\nsimp made no progress') - Line 272
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 279
LeanError(message='Lean error:\nno goals to be solved') - Line 281
LeanError(message='Lean error:\nsimp made no progress') - Line 282
LeanError(message="Lean error:\nunknown identifier 'hu'") - Line 284
LeanError(message="Lean error:\ntactic 'subst' failed, invalid equality proof, it is not of the form (x = t) or (t = x)\n  ?m.5903 = 0\ncase inl\nr C : ℝ\nh✝ : ?m.5903 = 0\n⊢ HasSum (fun n => C * r ^ n) (C / (1 - r))") - Line 287
LeanError(message='Lean error:\ninternal exception #5') - Line 290
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 295
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 296
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.11998\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nε : NNReal\nhε : ε ≠ 0\nι : Type u_4\ninst✝ : Countable ι\nx✝ : ?m.11998\n⊢ ∃ ε', (∀ (i : ι), 0 < ε' i) ∧ ∃ c, HasSum ε' c ∧ c < ε") - Line 297
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.13030 is not an inductive datatype') - Line 298
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift (ι → ENNReal) (ι → sorry) ?m.12310 ?m.12311\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 300
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.sub tendsto_const_nhds tendsto_inv_atTop_zero\nhas type\n  Filter.Tendsto (fun x => ?m.17886 - x⁻¹) Filter.atTop (nhds (?m.17886 - 0)) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x => a - sorry) sorry sorry : Prop') - Line 306
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.24297 : Sort ?u.24296\nbut is expected to have type\n  Filter.Tendsto (fun x => ↑⌊x⌋₊ / x) Filter.atTop (nhds 1) : Prop') - Line 307
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.add tendsto_const_nhds tendsto_inv_atTop_zero\nhas type\n  Filter.Tendsto (fun x => ?m.18710 + x⁻¹) Filter.atTop (nhds (?m.18710 + 0)) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun x => a + sorry) sorry sorry : Prop') - Line 308
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.24297 : Sort ?u.24296\nbut is expected to have type\n  Filter.Tendsto (fun x => ↑⌈x⌉₊ / x) Filter.atTop (nhds 1) : Prop') - Line 309
LeanError(message='Lean error:\n<input>:7:31: unexpected end of input') - Line 311
LeanError(message='Lean error:\napplication type mismatch\n  tendsto_order.mp B\nargument\n  B\nhas type\n  Filter.Tendsto (fun n => ↑⌊c k ^ (n + 1)⌋₊ / ↑⌊c k ^ n⌋₊) Filter.atTop sorry : Prop\nbut is expected to have type\n  Filter.Tendsto ?m.16974 Filter.atTop (nhds (c k)) : Prop') - Line 312
LeanError(message='Lean error:\ngoal must be of the form TFAE [P₁, P₂, ...]') - Line 319
LeanError(message="Lean error:\n<input>:1:38: expected ':' or term") - Line 320
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Ne'.") - Line 322
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Filter.Tendsto ?m.1048 ?m.1050 (nhds (@OfNat.ofNat ?m.1046 0 (@Zero.toOfNat0 ?m.1046 NegZeroClass.toZero)))\nwith\n  Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds (@OfNat.ofNat R 0 (@Zero.toOfNat0 R MulZeroClass.toZero)))\nR : Type u_1\ninst✝ : SeminormedRing R\nx : R\nh : ‖x‖ < 1\n⊢ Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0)") - Line 329
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?m.1482‖\nR : Type u_1\ninst✝¹ : SeminormedRing R\ninst✝ : NormMulClass R\nx : R\n⊢ Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) → ‖x‖ < 1") - Line 331
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 333
LeanError(message='Lean error:\ninternal exception #5') - Line 334
LeanError(message='Lean error:\ninternal exception #5') - Line 335
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.2288\nR : Type u_2\ninst✝¹ : NormedRing R\ninst✝ : HasSummableGeomSeries R\nx : R\nh : ‖x‖ < 1\n⊢ ∑' (i : ℕ), x ^ (i + 1) + 1 = ∑' (i : ℕ), x ^ i") - Line 336
LeanError(message='Lean error:\nsimp made no progress') - Line 337
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  1 * ?a\nR : Type u_2\ninst✝¹ : NormedRing R\ninst✝ : HasSummableGeomSeries R\nx : R\nh : ‖x‖ < 1\n⊢ 1 * ∑' (i : ℕ), x ^ i + x * ∑' (i : ℕ), x ^ i = 2 * ∑' (i : ℕ), x ^ i - 1") - Line 338
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry⁻¹ = Ring.inverse (1 - x)\nis not definitionally equal to target\n  ∑' (i : ℕ), x ^ i = Ring.inverse (1 - x)") - Line 339
LeanError(message='Lean error:\ntype mismatch\n  Filter.Tendsto.mul (Filter.Tendsto.sub (tendsto_pow_atTop_nhds_zero_of_norm_lt_one ?m.16606) tendsto_const_nhds)\n    tendsto_const_nhds\nhas type\n  Filter.Tendsto (fun x => (?m.15759 ^ x - ?m.16680) * ?m.105144) Filter.atTop\n    (nhds ((0 - ?m.16680) * ?m.105144)) : Prop\nbut is expected to have type\n  Filter.Tendsto (fun n => (ξ ^ n - 1) * (ξ - 1)⁻¹) Filter.atTop sorry : Prop') - Line 342
LeanError(message='Lean error:\napplication type mismatch\n  { mp := fun h => ?m.5703, mpr := summable_geometric_of_norm_lt_one }\nargument\n  summable_geometric_of_norm_lt_one\nhas type\n  @norm ?m.5708 NormedRing.toNorm ?m.5711 < 1 → Summable fun n => ?m.5711 ^ n : Prop\nbut is expected to have type\n  @norm K NormedDivisionRing.toNorm ξ < 1 → Summable fun n => ξ ^ n : Prop') - Line 347
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ‖?x‖\ncase intro.intro\nR : Type u_4\ninst✝ : NormedRing R\nk : ℕ\nr : R\nhr : ‖r‖ < 1\nu : ℕ → ℕ\nhu : (fun n => ↑(u n)) =O[Filter.atTop] fun n => ↑(n ^ k)\nr' : ℝ\nhrr' : ‖r‖ < r'\nh : r' < 1\n⊢ Summable fun n => ‖↑(u n) * r ^ n‖") - Line 348
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 351
LeanError(message="Lean error:\napplication type mismatch\n  hasSum_choose_mul_geometric_of_norm_lt_one' k hr\nargument\n  hr\nhas type\n  @norm 𝕜 NormedDivisionRing.toNorm r < 1 : Prop\nbut is expected to have type\n  @norm ?m.11065 NormedRing.toNorm ?m.11068 < 1 : Prop") - Line 354
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 357
LeanError(message='Lean error:\ninternal exception #5') - Line 358
LeanError(message="Lean error:\napplication type mismatch\n  hasSum_coe_mul_geometric_of_norm_lt_one' hr\nargument\n  hr\nhas type\n  @norm 𝕜 NormedDivisionRing.toNorm r < 1 : Prop\nbut is expected to have type\n  @norm ?m.9905 NormedRing.toNorm ?m.9908 < 1 : Prop") - Line 360
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  dist ?a ?b\nα : Type u_5\ninst✝ : SeminormedAddCommGroup α\nr C : ℝ\nf : ℕ → α\nhf : ∀ (n : ℕ), ‖f n‖ ≤ C * r ^ n\nn : ℕ\n⊢ dist (∑ i ∈ Finset.range n, f i) (∑ x ∈ Finset.range n, f x + f n) ≤ C * r ^ n") - Line 362
LeanError(message='Lean error:\nno goals to be solved') - Line 364
LeanError(message='Lean error:\napplication type mismatch\n  LE.le.trans (norm_nonneg ?m.4521) (h N (le_refl N))\nargument\n  h N (le_refl N)\nhas type\n  @norm α SeminormedAddCommGroup.toNorm (u N) ≤ C * r ^ N : Prop\nbut is expected to have type\n  @norm ?m.4519 SeminormedAddGroup.toNorm ?m.4521 ≤ C * r ^ N : Prop') - Line 369
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 371
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 372
LeanError(message='Lean error:\ninternal exception #5') - Line 373
LeanError(message='Lean error:\nno goals to be solved') - Line 374
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ C, ∀ (n : ℕ), ‖?m.70050 n‖ ≤ C) → Summable fun n => sorry\nα : Type u_6\ninst✝² : SeminormedAddCommGroup α\ninst✝¹ : NormedDivisionRing α\ninst✝ : CompleteSpace α\nw z : α\nh : CauchySeq fun n => ∑ i ∈ Finset.range n, sorry\nhz : ‖z‖ < ‖w‖\nhw : 0 < sorry\n⊢ Summable fun n => sorry") - Line 375
LeanError(message='Lean error:\nno goals to be solved') - Line 377
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 378
LeanError(message="Lean error:\n<input>:1:45: expected '‖', '‖₊' or '‖ₑ'") - Line 388
LeanError(message='Lean error:\ninternal exception #5') - Line 397
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\nIsPushout : x✝\nH : sorry\nH' : sorry\n⊢ sorry") - Line 399
LeanError(message='Lean error:\n<input>:6:6: expected end of input') - Line 400
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 419
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 430
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 431
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.464 is not an inductive datatype') - Line 435
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 436
LeanError(message='Lean error:\ninternal exception #5') - Line 440
LeanError(message='Lean error:\nsimp made no progress') - Line 441
LeanError(message='Lean error:\napplication type mismatch\n  Exists.intro sorry (Set.Finite.coe_toFinset hf)\nargument\n  Set.Finite.coe_toFinset hf\nhas type\n  ↑hf.toFinset = Set.range (F.map hi) : Prop\nbut is expected to have type\n  ?m.1437 ?m.1451 i sorry = Set.range sorry : Prop') - Line 443
LeanError(message='Lean error:\nno goals to be solved') - Line 445
LeanError(message='Lean error:\nsimp made no progress') - Line 447
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.IsCofilteredOrEmpty J') - Line 448
LeanError(message='Lean error:\ninternal exception #5') - Line 450
LeanError(message='Lean error:\ninternal exception #5') - Line 472
LeanError(message='Lean error:\ninternal exception #5') - Line 473
LeanError(message='Lean error:\ninternal exception #5') - Line 493
LeanError(message='Lean error:\ninternal exception #5') - Line 495
LeanError(message='Lean error:\ninternal exception #5') - Line 512
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝¹ : Sort u_1\nDiscrete : x✝¹\nx✝ : Sort u_2\nZigzag : x✝\nX : ?m.1289\na : sorry\nb : sorry\nh : sorry\n⊢ sorry = sorry") - Line 561
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 593
LeanError(message="Lean error:\ntactic 'aesop' failed, failed to prove the goal after exhaustive search.\nInitial goal:\n  C : Sort u_2\n  x✝¹ : Sort u_3\n  inv : x✝¹\n  x✝ : Sort u_4\n  eqToHom : x✝\n  X Y : C\n  h : X = Y\n  ⊢ sorry = sorry\nRemaining goals after safe rules:\n  β : Sort u_1\n  C : Sort u_2\n  inv : ?m.32\n  eqToHom : ?m.48\n  X : C\n  ⊢ Sort u_5") - Line 596
LeanError(message='Lean error:\ninternal exception #5') - Line 632
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry ≅ sorry') - Line 660
LeanError(message='Lean error:\n<input>:3:15: expected end of input') - Line 671
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 689
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 690
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  Fintype.card ?β = Fintype.card ?α\nwith\n  sorry = Finset.univ.card\ncase h.e'_2\nn : ℕ\n⊢ sorry = Finset.univ.card") - Line 725
LeanError(message='Lean error:\nsimp made no progress') - Line 727
LeanError(message='Lean error:\ninternal exception #5') - Line 728
LeanError(message='Lean error:\nsimp made no progress') - Line 729
LeanError(message='Lean error:\nno goals to be solved') - Line 744
LeanError(message='Lean error:\nno goals to be solved') - Line 745
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.IsIso (α.app X)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 751
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.1392'") - Line 752
LeanError(message="Lean error:\nunknown free variable '_fvar.1983'") - Line 753
LeanError(message='Lean error:\n<input>:1:22: expected token') - Line 755
LeanError(message="Lean error:\ntactic 'delta' failed, did not delta reduce [CategoryTheory.GlueData.ι]\nGlueData : ?m.8243\nC : ?m.8656\nD✝ : sorry\nD : sorry\nx : sorry\n⊢ ∃ i y, sorry = x") - Line 769
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  sorry = sorry\nwith\n  f = g\nx✝ : Sort u_2\nGradedObject : x✝\nβ : Type u_1\nX : sorry\nY : sorry\nf g : X ⟶ Y\nh : ∀ (x : ?m.2771 f g), sorry = sorry\n⊢ f = g") - Line 781
LeanError(message="Lean error:\ntactic 'aesop' failed, failed to prove the goal after exhaustive search.\nInitial goal:\n  GradedObject : ?m.4209\n  β✝ : Type u_1\n  X : sorry\n  Y : sorry\n  C : ?m.5033\n  x✝ : Sort u_2\n  comapEq : x✝\n  β γ : Type w\n  f g h : β → γ\n  k : f = g\n  l : g = h\n  ⊢ sorry = sorry ≪≫ sorry\nRemaining goals after safe rules:\n  GradedObject : ?m.4209\n  β_1 : Type u_1\n  X : sorry\n  Y : sorry\n  C : ?m.5033\n  x : Sort u_2\n  comapEq : x\n  β γ : Type w\n  f : β → γ\n  ⊢ sorry () = sorry () ≪≫ sorry ()") - Line 791
LeanError(message='Lean error:\ninternal exception #5') - Line 826
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 841
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 842
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2423 α β f') - Line 850
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 864
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 865
LeanError(message='Lean error:\nsimp made no progress') - Line 896
LeanError(message='Lean error:\nsimp made no progress') - Line 897
LeanError(message='Lean error:\ninternal exception #5') - Line 1023
LeanError(message='Lean error:\ninternal exception #5') - Line 1028
LeanError(message='Lean error:\ninternal exception #5') - Line 1036
LeanError(message="Lean error:\n<input>:2:27: expected '⟩'") - Line 1042
LeanError(message='Lean error:\n<input>:1:31: expected token') - Line 1044
LeanError(message='Lean error:\nno goals to be solved') - Line 1054
LeanError(message='Lean error:\ninternal exception #5') - Line 1061
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.IsIso CategoryTheory.Limits.biprod.inl\nC : Type u_2\nx✝ : Sort u_1\nIsIso : x✝\nX Y : C\n⊢ sorry ↔ sorry") - Line 1083
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 1085
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.3192\nwith\n  sorry = f⁻¹\nx✝¹ : Sort u_1\nSingleObj : x✝¹\nx✝ : Sort u_2\ninv : x✝\nx : sorry\ny : sorry\nf : x ⟶ y\n⊢ sorry = f⁻¹") - Line 1090
LeanError(message='Lean error:\n<input>:2:31: expected end of input') - Line 1136
LeanError(message='Lean error:\n<input>:2:57: expected end of input') - Line 1138
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 1160
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2725 _fvar.1864 _fvar.1865 X Y') - Line 1238
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 1247
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 1248
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1264
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1265
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1266
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1270
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1273
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1342
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1343
LeanError(message='Lean error:\ninternal exception #5') - Line 1348
LeanError(message='Lean error:\ninternal exception #5') - Line 1349
LeanError(message='Lean error:\ninternal exception #5') - Line 1350
LeanError(message='Lean error:\ninternal exception #5') - Line 1351
LeanError(message='Lean error:\ninternal exception #5') - Line 1352
LeanError(message='Lean error:\n<input>:2:12: expected token') - Line 1356
LeanError(message='Lean error:\ngoal must be of the form TFAE [P₁, P₂, ...]') - Line 1357
LeanError(message='Lean error:\ngoal must be of the form TFAE [P₁, P₂, ...]') - Line 1358
LeanError(message='Lean error:\ninternal exception #5') - Line 1360
LeanError(message='Lean error:\ninternal exception #5') - Line 1361
LeanError(message='Lean error:\ninternal exception #5') - Line 1362
LeanError(message='Lean error:\ninternal exception #5') - Line 1393
LeanError(message='Lean error:\ninternal exception #5') - Line 1394
LeanError(message='Lean error:\nsimp made no progress') - Line 1395
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 1396
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.1859\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.NonPreadditiveAbelian C\nX Y : C\na b : X ⟶ Y\n| true") - Line 1397
LeanError(message='Lean error:\ninternal exception #5') - Line 1398
LeanError(message='Lean error:\ninternal exception #5') - Line 1399
LeanError(message='Lean error:\ninternal exception #5') - Line 1400
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a + ?b\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.NonPreadditiveAbelian C\nX Y : C\na : X ⟶ Y\n⊢ sorry") - Line 1402
LeanError(message='Lean error:\ninternal exception #5') - Line 1403
LeanError(message='Lean error:\ninternal exception #5') - Line 1404
LeanError(message='Lean error:\ninternal exception #5') - Line 1405
LeanError(message="Lean error:\ninvalid 'congr' conv tactic, application or implication expected\n  true") - Line 1406
LeanError(message='Lean error:\ninternal exception #5') - Line 1407
LeanError(message='Lean error:\ninternal exception #5') - Line 1408
LeanError(message='Lean error:\ninternal exception #5') - Line 1409
LeanError(message='Lean error:\ninternal exception #5') - Line 1410
LeanError(message='Lean error:\ninternal exception #5') - Line 1411
LeanError(message='Lean error:\n<input>:1:40: expected token') - Line 1423
LeanError(message='Lean error:\ninternal exception #5') - Line 1433
LeanError(message='Lean error:\n<input>:1:16: expected token') - Line 1439
LeanError(message='Lean error:\n<input>:1:25: expected token') - Line 1443
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.Abelian.factorThruImage ?f) (CategoryTheory.Abelian.image.ι ?f)\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nS : CategoryTheory.ShortComplex C\nhS : S.Exact\nb' : CategoryTheory.Abelian.Pseudoelement S.X₂\nb : CategoryTheory.Over S.X₂\nhb : CategoryTheory.Abelian.Pseudoelement.pseudoApply S.g ⟦b⟧ = 0\n⊢ ∃ a, CategoryTheory.Abelian.Pseudoelement.pseudoApply S.f a = ⟦b⟧") - Line 1444
LeanError(message='Lean error:\n<input>:1:46: expected token') - Line 1447
LeanError(message='Lean error:\n<input>:2:23: expected end of input') - Line 1449
LeanError(message='Lean error:\nfailed to synthesize\n  (CategoryTheory.preadditiveCoyonedaObj G).Additive\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1471
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1635 is not an inductive datatype') - Line 1472
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ CategoryTheory.Abelian.image f') - Line 1473
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 1475
LeanError(message='Lean error:\n<input>:1:90: expected end of input') - Line 1476
LeanError(message='Lean error:\nno goals to be solved') - Line 1479
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.Limits.cokernel (?m.16485 _fvar.12944 f) ⟶ CategoryTheory.Limits.image f') - Line 1484
LeanError(message="Lean error:\nunknown free variable '_fvar.12879'") - Line 1485
LeanError(message='Lean error:\nsimp made no progress') - Line 1486
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.Limits.image f ⟶ CategoryTheory.Limits.kernel (?m.51412 _fvar.12944 f)') - Line 1487
LeanError(message='Lean error:\ninternal exception #5') - Line 1490
LeanError(message='Lean error:\ninternal exception #5') - Line 1491
LeanError(message='Lean error:\ninternal exception #5') - Line 1493
LeanError(message='Lean error:\ninternal exception #5') - Line 1494
LeanError(message='Lean error:\nno goals to be solved') - Line 1498
LeanError(message='Lean error:\nno goals to be solved') - Line 1509
LeanError(message='Lean error:\ninternal exception #5') - Line 1511
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 1513
LeanError(message='Lean error:\n<input>:3:18: expected token') - Line 1514
LeanError(message='Lean error:\n<input>:2:67: expected token') - Line 1516
LeanError(message='Lean error:\n<input>:2:67: expected token') - Line 1518
LeanError(message='Lean error:\n<input>:3:18: expected token') - Line 1519
LeanError(message='Lean error:\nno goals to be solved') - Line 1570
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Sort u_1\nx✝ : Sort u_2\ngeneratingMonomorphisms : x✝\nG : C\n⊢ sorry ≤ sorry") - Line 1582
LeanError(message='Lean error:\ninvalid field notation, type is not of the form (C ...) where C is a constant\n  Subobject\nhas type\n  x✝¹') - Line 1585
LeanError(message='Lean error:\ndsimp made no progress') - Line 1587
LeanError(message='Lean error:\ntype mismatch\n  if hA : A = ⊤ then ?pos✝ else ?neg✝\nhas type\n  ?m.3786 : Sort ?u.3785\nbut is expected to have type\n  A ≤ sorry : Prop') - Line 1588
LeanError(message='Lean error:\ntype mismatch\n  ⊤\nhas type\n  ?m.2582 : Type ?u.2581\nbut is expected to have type\n  sorry : Sort u_3') - Line 1589
LeanError(message='Lean error:\ntype mismatch\n  Exists.intro κ.ord sorry\nhas type\n  Exists ?m.4763 : Prop\nbut is expected to have type\n  ∃ o j, transfiniteIterate sorry j A₀ = ⊤ : Prop') - Line 1591
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Sort u_2 is not an inductive datatype') - Line 1592
LeanError(message='Lean error:\ntype mismatch\n  le_antisymm ?m.11219 sorry\nhas type\n  ?m.11217 = ?m.11218 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 1594
LeanError(message='Lean error:\n<input>:2:28: expected token') - Line 1595
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 1596
LeanError(message='Lean error:\ninternal exception #5') - Line 1597
LeanError(message='Lean error:\nno goals to be solved') - Line 1600
LeanError(message='Lean error:\ninternal exception #5') - Line 1602
LeanError(message='Lean error:\nno goals to be solved') - Line 1603
LeanError(message='Lean error:\ninternal exception #5') - Line 1604
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1606
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.IsSeparator (∐ ?m.6575)\nwith\n  CategoryTheory.IsSeparator sorry\nD : Type v\ninst✝¹ : CategoryTheory.SmallCategory D\nx✝ : Sort u_1\ngenerator : x✝\ninst✝ : Nonempty D\n⊢ CategoryTheory.IsSeparator sorry") - Line 1607
LeanError(message='Lean error:\ninternal exception #5') - Line 1608
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp\n      { X₁ := ((CochainComplex.single₀ ?m.5889).obj ?m.5270).X 0,\n          X₂ := (CategoryTheory.InjectiveResolution.cocomplex ?m.5304).X 0,\n          X₃ := (CategoryTheory.InjectiveResolution.cocomplex ?m.5304).X 1,\n          f := (CategoryTheory.InjectiveResolution.ι ?m.5304).f 0,\n          g := (CategoryTheory.InjectiveResolution.cocomplex ?m.5304).d 0 1, zero := ⋯ }.g\n      (⋯.descToInjective ?f ?hf) =\n    ?f\nwith\n  CategoryTheory.CategoryStruct.comp (J.cocomplex.d 0 1) sorry =\n    CategoryTheory.CategoryStruct.comp sorry (I.cocomplex.d 0 1)\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝ : CategoryTheory.Abelian C\nx✝¹ : Sort u_1\ndescFOne : x✝¹\nx✝ : Sort u_2\ndescFZero : x✝\nY Z : C\nf : Z ⟶ Y\nI : CategoryTheory.InjectiveResolution Y\nJ : CategoryTheory.InjectiveResolution Z\n⊢ CategoryTheory.CategoryStruct.comp (J.cocomplex.d 0 1) sorry =\n    CategoryTheory.CategoryStruct.comp sorry (I.cocomplex.d 0 1)") - Line 1610
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (CochainComplex.single₀ C).obj Z ⟶ I.cocomplex') - Line 1611
LeanError(message='Lean error:\n<input>:2:12: expected token') - Line 1620
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HomologicalComplex.ExactAt ?m.1337 (n + 1)\nx✝ : Sort u_1\nofCocomplex : x✝\nn : ℕ\n⊢ sorry") - Line 1622
LeanError(message='Lean error:\n<input>:3:12: expected token') - Line 1635
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  HomologicalComplex.ExactAt ?m.508 (n + 1)\nx✝ : Sort u_1\nofComplex : x✝\nn : ℕ\n⊢ sorry") - Line 1637
LeanError(message='Lean error:\ninternal exception #5') - Line 1642
LeanError(message='Lean error:\ninternal exception #5') - Line 1646
LeanError(message='Lean error:\ninternal exception #5') - Line 1647
LeanError(message='Lean error:\ninternal exception #5') - Line 1648
LeanError(message='Lean error:\ninternal exception #5') - Line 1652
LeanError(message='Lean error:\ninternal exception #5') - Line 1657
LeanError(message='Lean error:\ninternal exception #5') - Line 1658
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 1659
LeanError(message='Lean error:\nfailed to synthesize\n  Monoid G\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1664
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Category.{u, 0} (CategoryTheory.SingleObj G)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1667
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 1668
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV : Type (u + 1)\ninst✝³ : CategoryTheory.LargeCategory V\nG : Type u\ninst✝² : Monoid G\nC : Type t₁\ninst✝¹ : CategoryTheory.Category.{t₂, t₁} C\nF : CategoryTheory.Functor C (Action V G)\nJ : Type w₁\ninst✝ : CategoryTheory.Category.{w₂, w₁} J\nh : CategoryTheory.Limits.PreservesLimitsOfShape J (F.comp (Action.forget V G))\n⊢ CategoryTheory.Limits.PreservesLimitsOfShape J F") - Line 1669
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV : Type (u + 1)\ninst✝² : CategoryTheory.LargeCategory V\nG : Type u\ninst✝¹ : Monoid G\nC : Type t₁\ninst✝ : CategoryTheory.Category.{t₂, t₁} C\nF : CategoryTheory.Functor C (Action V G)\nh : CategoryTheory.Limits.PreservesLimitsOfSize.{w₂, w₁, t₂, u, t₁, u + 1} (F.comp (Action.forget V G))\n⊢ CategoryTheory.Limits.PreservesLimitsOfSize.{w₂, w₁, t₂, u, t₁, u + 1} F") - Line 1670
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Category.{u, 0} (CategoryTheory.SingleObj G)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1671
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 1672
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV : Type (u + 1)\ninst✝³ : CategoryTheory.LargeCategory V\nG : Type u\ninst✝² : Monoid G\nC : Type t₁\ninst✝¹ : CategoryTheory.Category.{t₂, t₁} C\nF : CategoryTheory.Functor C (Action V G)\nJ : Type w₁\ninst✝ : CategoryTheory.Category.{w₂, w₁} J\nh : CategoryTheory.Limits.PreservesColimitsOfShape J (F.comp (Action.forget V G))\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J F") - Line 1673
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nV : Type (u + 1)\ninst✝² : CategoryTheory.LargeCategory V\nG : Type u\ninst✝¹ : Monoid G\nC : Type t₁\ninst✝ : CategoryTheory.Category.{t₂, t₁} C\nF : CategoryTheory.Functor C (Action V G)\nh : CategoryTheory.Limits.PreservesColimitsOfSize.{w₂, w₁, t₂, u, t₁, u + 1} (F.comp (Action.forget V G))\n⊢ CategoryTheory.Limits.PreservesColimitsOfSize.{w₂, w₁, t₂, u, t₁, u + 1} F") - Line 1674
LeanError(message='Lean error:\n<input>:1:27: expected end of input') - Line 1690
LeanError(message='Lean error:\n<input>:1:27: expected end of input') - Line 1691
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.976 adj') - Line 1742
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.381473 α') - Line 1781
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.381488 α') - Line 1782
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1785
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 1786
LeanError(message='Lean error:\nsimp made no progress') - Line 1790
LeanError(message='Lean error:\n<input>:1:38: expected token') - Line 1792
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun h => ?m.1098, mpr := sorry }\nhas type\n  ?m.1091 ↔ ?m.1092 : Prop\nbut is expected to have type\n  sorry ↔ sorry = ⊤ : Prop') - Line 1793
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 1799
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 1802
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  G.comp F ⟶ CategoryTheory.Functor.id D') - Line 1803
LeanError(message='Lean error:\ninternal exception #5') - Line 1804
LeanError(message='Lean error:\ninternal exception #5') - Line 1807
LeanError(message='Lean error:\nsimp made no progress') - Line 1810
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.Functor.id C ⟶ F.comp G'") - Line 1811
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  G.comp F ⟶ CategoryTheory.Functor.id D') - Line 1813
LeanError(message='Lean error:\ninternal exception #5') - Line 1816
LeanError(message="Lean error:\nunknown constant 'rightAdjointUniq'") - Line 1817
LeanError(message='Lean error:\ntype mismatch, term\n  hfg\nafter simplification has type\n  L.map f = L.map g : Prop\nbut is expected to have type\n  C : Type u₁') - Line 1822
LeanError(message='Lean error:\n<input>:1:32: expected token') - Line 1823
LeanError(message='Lean error:\ntype mismatch, term\n  hfg\nafter simplification has type\n  R.map f = R.map g : Prop\nbut is expected to have type\n  D : Type u₂') - Line 1824
LeanError(message='Lean error:\n<input>:1:33: expected token') - Line 1825
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 1826
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 1829
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 1943
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nB : Type u\ninst✝ : Quiver B\nx✝² : Sort u_1\nDiscrete : x✝²\nx✝¹ : Sort u_2\npreinclusion : x✝¹\nx✝ : Sort u_3\neqToHom : x✝\na b : B\nf : sorry\ng : sorry\nη : f ⟶ g\n⊢ sorry = sorry") - Line 1947
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nB : Type u\ninst✝ : Quiver B\nx✝¹ : Sort u_1\nHom : x✝¹\nx✝ : Sort u_2\nnormalizeAux : x✝\na b c : B\np : Quiver.Path a b\nf : sorry\ng : sorry\nη : f ⟶ g\n⊢ sorry = sorry") - Line 1948
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nB : Type u\ninst✝ : Quiver B\nx✝¹ : Sort u_1\nHom : x✝¹\nx✝ : Sort u_2\nnormalizeAux : x✝\na b c : B\nf : sorry\ng : sorry\n⊢ sorry = sorry") - Line 1950
LeanError(message='Lean error:\n<input>:2:8: expected token') - Line 1973
LeanError(message='Lean error:\n<input>:2:8: expected token') - Line 1975
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 2095
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  Quiver.homOfEq (sorry `«[anonymous]:6:20») ⋯ ⋯\nis not definitionally equal to the right-hand side\n  Quiver.homOfEq (sorry `«[anonymous]:7:22») ⋯ ⋯\nV W : Type u\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nx✝ : Sort u_1\nhe : x✝\nX Y : V\nf : X ⟶ Y\n⊢ Quiver.homOfEq sorry ⋯ ⋯ = Quiver.homOfEq sorry ⋯ ⋯") - Line 2170
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2180
LeanError(message="Lean error:\n<input>:1:12: expected '↦', '=>'") - Line 2264
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'expComparison' has no definition") - Line 2295
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝ : Sort u_1\nArrow : x✝\nf : sorry\n⊢ sorry = f") - Line 2383
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.2714 Arrow\nargument\n  Arrow\nhas type\n  x✝ : Sort u_1\nbut is expected to have type\n  ?m.19 : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nx✝ : Sort u_1\nArrow : x✝\nf : sorry\ng : sorry\nφ₁ φ₂ : f ⟶ g\nh : φ₁ = φ₂\n⊢ sorry = sorry") - Line 2393
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.2714 Arrow\nargument\n  Arrow\nhas type\n  x✝ : Sort u_1\nbut is expected to have type\n  ?m.19 : Sort u_1\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nx✝ : Sort u_1\nArrow : x✝\nf : sorry\ng : sorry\nφ₁ φ₂ : f ⟶ g\nh : φ₁ = φ₂\n⊢ sorry = sorry") - Line 2394
LeanError(message='Lean error:\nsimp made no progress') - Line 2424
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  f\nx✝¹ : Sort u_1\nOver : x✝¹\nx✝ : Sort u_2\nhomMk : x✝\nU : sorry\nV : sorry\nf : U ⟶ V\nh : ?m.1929 f\n⊢ sorry = f") - Line 2429
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2440
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 2447
LeanError(message='Lean error:\nsimp made no progress') - Line 2448
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  f\nT : Type ?u.10927\nOver : ?m.10920\nX Y : T\nf✝ : sorry\nU✝ : sorry\nV✝ : sorry\ng : U✝ ⟶ V✝\nx✝¹ : Sort u_1\nUnder : x✝¹\nx✝ : Sort u_2\nhomMk : x✝\nU : sorry\nV : sorry\nf : U ⟶ V\nh : ?m.14536 f\n⊢ sorry = f") - Line 2452
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2465
LeanError(message='Lean error:\nrcases tactic failed: p : sorry is not an inductive datatype') - Line 2492
LeanError(message='Lean error:\nsimp made no progress') - Line 2497
LeanError(message='Lean error:\nsimp made no progress') - Line 2528
LeanError(message='Lean error:\nsimp made no progress') - Line 2559
LeanError(message='Lean error:\nno goals to be solved') - Line 2590
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  f\nFC : ?m.2589\nCC : ?m.2604\ninst✝ : (X : ?m.3846) → ?m.3847 X → FunLike sorry sorry sorry\nC : Type u_1\nx✝ : Sort u_2\nforget : x✝\nX Y : C\nf : sorry\n⊢ sorry = f") - Line 2605
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝¹ : Sort u_1\nepimorphisms : x✝¹\nx✝ : Sort u_2\nforget : x✝\n⊢ sorry = sorry ↔ sorry") - Line 2619
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝¹ : Sort u_1\nmonomorphisms : x✝¹\nx✝ : Sort u_2\nforget : x✝\n⊢ sorry = sorry ↔ sorry") - Line 2620
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  X\nx✝ : Sort u_1\nDiscrete : x✝\nα : Type u₁\nX : sorry\n⊢ sorry = X") - Line 2644
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 2720
LeanError(message='Lean error:\nsimp made no progress') - Line 2772
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2781
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2788
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 2789
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2793
LeanError(message='Lean error:\nsimp made no progress') - Line 2794
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2796
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2800
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2805
LeanError(message='Lean error:\nsimp made no progress') - Line 2806
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2808
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 2817
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\n𝒮 : Type u₁\n𝒳 : Type u₂\ninst✝² : CategoryTheory.Category.{v₁, u₁} 𝒮\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} 𝒳\np : CategoryTheory.Functor 𝒳 𝒮\nh : ∀ (a : 𝒳) (R : 𝒮) (f : R ⟶ p.obj a), ∃ b φ, p.IsStronglyCartesian f φ\nR S : 𝒮\nf : R ⟶ S\na b : 𝒳\nφ : a ⟶ b\ninst✝ : p.IsCartesian f φ\n⊢ p.IsStronglyCartesian f φ") - Line 2819
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n𝒮 : Type u₁\n𝒳 : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} 𝒮\ninst✝ : CategoryTheory.Category.{v₂, u₂} 𝒳\np : CategoryTheory.Functor 𝒳 𝒮\nh : ∀ (a : 𝒳) (R : 𝒮) (f : R ⟶ p.obj a), ∃ b φ, p.IsStronglyCartesian f φ\na✝ : 𝒳\nR✝ : 𝒮\na : R✝ ⟶ p.obj a✝\n⊢ ∃ b φ, p.IsCartesian a φ") - Line 2820
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2822
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2823
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2824
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2825
LeanError(message='Lean error:\nsimp made no progress') - Line 2826
LeanError(message='Lean error:\nsimp made no progress') - Line 2827
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 2828
LeanError(message='Lean error:\n<input>:1:63: expected token') - Line 2832
LeanError(message='Lean error:\n<input>:1:46: expected token') - Line 2833
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2834
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2835
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2836
LeanError(message='Lean error:\n<input>:1:12: expected end of input') - Line 2837
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2838
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2839
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2840
LeanError(message='Lean error:\ninternal exception #5') - Line 2878
LeanError(message='Lean error:\ninternal exception #5') - Line 2882
LeanError(message='Lean error:\ninternal exception #5') - Line 2883
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2890
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 2916
LeanError(message="Lean error:\nunknown identifier 'X'") - Line 2973
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: unknown free variable '_fvar.60'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nC : Type u_3\nα : sorry\nβ : sorry\nh : α = β\nX : C\n⊢ sorry = sorry") - Line 2986
LeanError(message='Lean error:\nno goals to be solved') - Line 3014
LeanError(message='Lean error:\nno goals to be solved') - Line 3017
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 3020
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Category.{v₂, u₂} D\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3021
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 3025
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3035
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3056
LeanError(message='Lean error:\nno goals to be solved') - Line 3083
LeanError(message='Lean error:\ninternal exception #5') - Line 3084
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.68') - Line 3092
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3143
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3152
LeanError(message='Lean error:\ninternal exception #5') - Line 3170
LeanError(message='Lean error:\nsimp made no progress') - Line 3171
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.4165\nwith\n  sorry = sorry\nC : Type ?u.3363\nselfProd : ?m.3354\nF X A : C\nu : sorry\na : ?m.4136 F\nb : sorry\n⊢ sorry = sorry") - Line 3172
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Sort u_2), ∃ A a, sorry ∧ Function.Bijective fun f => sorry\nC✝ : Type u_1\nselfProd : ?m.3354\nF X✝ A : C✝\nu : sorry\na : ?m.4136 F\nC : Type u_1\nX : C\n⊢ ∃ A a, sorry ∧ Function.Bijective fun f => sorry") - Line 3174
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Sort u_3 is not an inductive datatype') - Line 3175
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Sort u_3 is not an inductive datatype') - Line 3176
LeanError(message="Lean error:\nrcases tactic failed: map_mul'✝ : ∀ (x y : G), hf.toFun (x * y) = hf.toFun x * hf.toFun y is not an inductive datatype") - Line 3179
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : Type (max u_5 u_6)), ∃ X, Nonempty (?m.17565 ≅ sorry)\nAut : ?m.10602\nG : Type u_1\ninst✝³ : Group G\ninst✝² : TopologicalSpace G\ninst✝¹ : IsTopologicalGroup G\ninst✝ : CompactSpace G\nV✝ : OpenSubgroup sorry\nU : OpenSubgroup sorry\nC : Sort u_2\nx✝ : Sort u_3\nfunctorToAction : x✝\nV : sorry\n⊢ ∃ X, Nonempty (?m.17565 ≅ sorry)") - Line 3181
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Function.Injective ⇑?f\nG : Type u_5\nC : Sort u_1\nx✝ : Sort u_2\ntoAut : x✝\nh : ∀ (g : G), (C → sorry → sorry) → g = 1\n⊢ Function.Injective sorry") - Line 3199
LeanError(message='Lean error:\ntype mismatch at `intro φ`has type\n  ?m.1965 f : Sort u_6\nbut is expected to have type\n  sorry : Sort ?u.1994') - Line 3219
LeanError(message='Lean error:\ndsimp made no progress') - Line 3220
LeanError(message='Lean error:\nno goals to be solved') - Line 3222
LeanError(message='Lean error:\nno goals to be solved') - Line 3224
LeanError(message='Lean error:\n<input>:1:53: expected token') - Line 3237
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.473\nC : Sort u_1\nx✝ : Sort u_2\nIsInitial : x✝\nX : C\n⊢ Nonempty sorry ↔ IsEmpty sorry") - Line 3238
LeanError(message='Lean error:\n<input>:1:37: expected token') - Line 3241
LeanError(message='Lean error:\n<input>:1:44: expected token') - Line 3242
LeanError(message='Lean error:\n<input>:1:44: expected token') - Line 3243
LeanError(message='Lean error:\nsimp made no progress') - Line 3244
LeanError(message='Lean error:\nsimp made no progress') - Line 3245
LeanError(message='Lean error:\ninternal exception #5') - Line 3253
LeanError(message='Lean error:\n<input>:2:36: expected token') - Line 3254
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.433') - Line 3263
LeanError(message='Lean error:\ninternal exception #5') - Line 3267
LeanError(message='Lean error:\ntype mismatch\n  (CategoryTheory.Preadditive.isSeparator_iff G).mp hG ?m.89667 fun h => ?m.89671\nhas type\n  ?m.89667 = 0 : Prop\nbut is expected to have type\n  CategoryTheory.Preadditive C : Type (max u v)') - Line 3271
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.657 is not an inductive datatype') - Line 3272
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nA : Sort u_1\nx✝ : Sort u_2\nIsSeparating : x✝\nι : Type w\nS : ι → A\nhS : sorry\n⊢ sorry") - Line 3285
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nA : Sort u_1\nx✝ : Sort u_2\nIsSeparating : x✝\nι : Type w\nS : ι → A\nhS : sorry\n⊢ sorry") - Line 3287
LeanError(message='Lean error:\n<input>:2:46: expected end of input') - Line 3291
LeanError(message='Lean error:\n<input>:2:46: expected end of input') - Line 3292
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 3295
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 3296
LeanError(message='Lean error:\ntype mismatch\n  fun X Y f g hfg => sorry\nhas type\n  (X : ?m.879) →\n    (Y : ?m.896 X) →\n      (f : ?m.897 X Y) →\n        (g : ?m.898 X Y f) →\n          (hfg : ?m.899 X Y f g) → ?m.900 X Y f g hfg : Sort (imax ?u.878 ?u.881 ?u.884 ?u.887 ?u.890 ?u.893)\nbut is expected to have type\n  sorry : Sort u_4') - Line 3327
LeanError(message='Lean error:\ntype mismatch\n  fun X Y f g hfg => sorry\nhas type\n  (X : ?m.897) →\n    (Y : ?m.914 X) →\n      (f : ?m.915 X Y) →\n        (g : ?m.916 X Y f) →\n          (hfg : ?m.917 X Y f g) → ?m.918 X Y f g hfg : Sort (imax ?u.896 ?u.899 ?u.902 ?u.905 ?u.908 ?u.911)\nbut is expected to have type\n  sorry : Sort u_4') - Line 3328
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nC : Sort u_3\nx✝¹ : Sort u_1\nIsSeparator : x✝¹\nx✝ : Sort u_2\nIsCoseparator : x✝\nG : C\n⊢ sorry ↔ sorry") - Line 3331
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Sort u_3\nx✝¹ : Sort u_1\nIsCoseparator : x✝¹\nx✝ : Sort u_2\nIsSeparator : x✝\nG : C\n⊢ sorry ↔ sorry") - Line 3332
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Sort u_3\nx✝¹ : Sort u_1\nIsCoseparator : x✝¹\nx✝ : Sort u_2\nIsSeparator : x✝\nG : Cᵒᵖ\n⊢ sorry ↔ sorry") - Line 3333
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nC : Sort u_3\nx✝¹ : Sort u_1\nIsSeparator : x✝¹\nx✝ : Sort u_2\nIsCoseparator : x✝\nG : Cᵒᵖ\n⊢ sorry ↔ sorry") - Line 3334
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nC : Sort u_3\nx✝¹ : Sort u_1\nIsDetector : x✝¹\nx✝ : Sort u_2\nIsCodetector : x✝\nG : C\n⊢ sorry ↔ sorry") - Line 3335
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Sort u_3\nx✝¹ : Sort u_1\nIsCodetector : x✝¹\nx✝ : Sort u_2\nIsDetector : x✝\nG : C\n⊢ sorry ↔ sorry") - Line 3336
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Sort u_3\nx✝¹ : Sort u_1\nIsCodetector : x✝¹\nx✝ : Sort u_2\nIsDetector : x✝\nG : Cᵒᵖ\n⊢ sorry ↔ sorry") - Line 3337
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nC : Sort u_3\nx✝¹ : Sort u_1\nIsDetector : x✝¹\nx✝ : Sort u_2\nIsCodetector : x✝\nG : Cᵒᵖ\n⊢ sorry ↔ sorry") - Line 3338
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3367
LeanError(message='Lean error:\n<input>:2:67: expected end of input') - Line 3368
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  K ⟶ L') - Line 3393
LeanError(message='Lean error:\ninternal exception #5') - Line 3394
LeanError(message='Lean error:\nno goals to be solved') - Line 3463
LeanError(message='Lean error:\nrcases tactic failed: a✝ : sorry is not an inductive datatype') - Line 3464
LeanError(message='Lean error:\n<input>:1:32: expected end of input') - Line 3470
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nSubgroupoid : ?m.425\nS : sorry\nC : Type u_1\nc d : C\nf : sorry\n⊢ sorry ∈ sorry ↔ f ∈ sorry") - Line 3472
LeanError(message='Lean error:\nrcases tactic failed: a₁✝ : ?m.1269 is not an inductive datatype') - Line 3481
LeanError(message='Lean error:\n<input>:1:42: expected end of input') - Line 3482
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3484
LeanError(message='Lean error:\nsimp made no progress') - Line 3486
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nSubgroupoid : ?m.425\nS : sorry\n⊢ sorry ↔ sorry = Set.univ") - Line 3496
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3498
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  sInf ?t ≤ sInf ?s\nwith\n  sorry ≤ sorry\nSubgroupoid : ?m.1216\nC : Type ?u.1236\nS : sorry\nX : C → C → Set sorry\nx✝¹ : Sort u_1\ngenerated : x✝¹\nx✝ : Sort u_2\ngeneratedNormal : x✝\n⊢ sorry ≤ sorry") - Line 3506
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3508
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 3517
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nSubgroupoid : ?m.2026\nC : Type ?u.2046\nS : sorry\nX : C → C → Set sorry\nD : Type u_1\nx✝ : Sort u_2\nmap : x✝\nhφ : Function.Injective sorry\nd : D\n⊢ d ∈ sorry () ↔ ∃ c ∈ sorry (), sorry () = d") - Line 3522
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 3523
LeanError(message="Lean error:\nunknown free variable '_fvar.2819'") - Line 3525
LeanError(message='Lean error:\ninternal exception #5') - Line 3526
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nSubgroupoid : ?m.2026\nC : Type ?u.2046\nS : sorry\nX : C → C → Set sorry\n⊢ sorry ↔ ∀ (c d : ?m.2839), sorry → c = d") - Line 3528
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 3529
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 3533
LeanError(message='Lean error:\ninternal exception #5') - Line 3536
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3537
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3538
LeanError(message='Lean error:\ninternal exception #5') - Line 3539
LeanError(message="Lean error:\nunknown free variable '_fvar.5885'") - Line 3546
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3549
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3551
LeanError(message='Lean error:\n<input>:3:57: expected end of input') - Line 3554
LeanError(message='Lean error:\nsimp made no progress') - Line 3555
LeanError(message='Lean error:\ninternal exception #5') - Line 3556
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3557
LeanError(message='Lean error:\n<input>:4:18: expected end of input') - Line 3558
LeanError(message='Lean error:\nno goals to be solved') - Line 3559
LeanError(message='Lean error:\nno goals to be solved') - Line 3561
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?F1 = ?F2\nwith\n  sorry.comp sorry =\n    (CategoryTheory.whiskeringRight J (?m.29553 _fvar.6908 _fvar.6909) (?m.29555 _fvar.6908 _fvar.6909)).obj sorry\nKaroubi : ?m.5542\nJ✝ : Type u_1\nC : Type u_2\ninst✝² : CategoryTheory.Category.{u_5, u_1} J✝\ninst✝¹ : CategoryTheory.Category.{?u.5556, u_2} C\nP : sorry\nQ : sorry\nf : P ⟶ Q\nX : J✝\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_5, u_1} J\nx✝¹ : Sort u_3\ntoKaroubi : x✝¹\nx✝ : Sort u_4\nkaroubiFunctorCategoryEmbedding : x✝\n⊢ sorry.comp sorry =\n    (CategoryTheory.whiskeringRight J (?m.29553 _fvar.6908 _fvar.6909) (?m.29555 _fvar.6908 _fvar.6909)).obj sorry") - Line 3567
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nKaroubi : x✝\nP : sorry\nQ : sorry\nf g : P ⟶ Q\n⊢ f = g ↔ sorry = sorry") - Line 3584
LeanError(message='Lean error:\ntype mismatch, term\n  h\nafter simplification has type\n  sorry () = sorry () : Prop\nbut is expected to have type\n  f = g : Prop') - Line 3585
LeanError(message='Lean error:\nno goals to be solved') - Line 3635
LeanError(message='Lean error:\nno goals to be solved') - Line 3637
LeanError(message='Lean error:\ninternal exception #5') - Line 3638
LeanError(message='Lean error:\nsimp made no progress') - Line 3653
LeanError(message="Lean error:\nunknown free variable '_fvar.369'") - Line 3654
LeanError(message='Lean error:\ninternal exception #5') - Line 3657
LeanError(message='Lean error:\ninternal exception #5') - Line 3659
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nPullbackCone : ?m.427\nc : sorry\nx✝¹ : Sort u_1\nIsLimit : x✝¹\nx✝ : Sort u_2\nMono : x✝\nhc : sorry\n⊢ sorry ↔ sorry = sorry") - Line 3665
LeanError(message='Lean error:\ninternal exception #5') - Line 3666
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nPullbackCone : ?m.1677\nPushoutCocone : ?m.1687\nc✝ : sorry\nf : ?m.2508\nc : sorry\nx✝¹ : Sort u_1\nIsColimit : x✝¹\nx✝ : Sort u_2\nEpi : x✝\nhc : sorry\n⊢ sorry ↔ sorry = sorry") - Line 3669
LeanError(message='Lean error:\ninternal exception #5') - Line 3670
LeanError(message='Lean error:\ninternal exception #5') - Line 3693
LeanError(message='Lean error:\ninternal exception #5') - Line 3694
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Functor.final_of_exists_of_isFiltered_of_fullyFaithful ?m.6570 fun i => ?m.8743\nhas type\n  CategoryTheory.Functor.Final ?m.6570 : Prop\nbut is expected to have type\n  sorry : Prop') - Line 3711
LeanError(message='Lean error:\ninternal exception #5') - Line 3713
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Functor.initial_of_exists_of_isCofiltered_of_fullyFaithful ?m.6625 fun i => ?m.8796\nhas type\n  CategoryTheory.Functor.Initial ?m.6625 : Prop\nbut is expected to have type\n  sorry : Prop') - Line 3714
LeanError(message='Lean error:\ninternal exception #5') - Line 3719
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.ObjectProperty C\nx✝¹ : Sort u_1\nHasLimit : x✝¹\nx✝ : Sort u_2\nClosedUnderLimitsOfShape : x✝\ninst✝ : P.IsClosedUnderIsomorphisms\nh : sorry\n⊢ sorry") - Line 3721
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.ObjectProperty C\nx✝¹ : Sort u_1\nHasColimit : x✝¹\nx✝ : Sort u_2\nClosedUnderColimitsOfShape : x✝\ninst✝ : P.IsClosedUnderIsomorphisms\nh : sorry\n⊢ sorry") - Line 3722
LeanError(message='Lean error:\nno goals to be solved') - Line 3752
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry = sorry\nis not definitionally equal to target\n  ?m.41604 = Fintype.elems.inf f") - Line 3761
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry = sorry\nis not definitionally equal to target\n  ?m.34522 = Fintype.elems.sup f") - Line 3762
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3763
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3764
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3765
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3766
LeanError(message='Lean error:\ninternal exception #5') - Line 3798
LeanError(message='Lean error:\ninternal exception #5') - Line 3799
LeanError(message="Lean error:\ntarget\n  f\nhas type\n  c ⟶ c' : Sort u_3\nbut is expected to have type\n  ?x ⟶ ?y : Type (max ?u.3069 ?u.3068)") - Line 3800
LeanError(message='Lean error:\n<input>:1:79: expected token') - Line 3805
LeanError(message='Lean error:\n<input>:7:58: expected token') - Line 3818
LeanError(message='Lean error:\n<input>:3:65: expected token') - Line 3819
LeanError(message='Lean error:\nsimp made no progress') - Line 3820
LeanError(message='Lean error:\nsimp made no progress') - Line 3878
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.2975 = ?m.2976\nx✝ : Sort u_4\nlimitUncurryIsoLimitCompLim : x✝\nj : ?m.2907\nk : ?m.2908\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 3879
LeanError(message='Lean error:\nsimp made no progress') - Line 3881
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.4769 = ?m.4770\nx✝¹ : Sort u_4\ncolimitUncurryIsoColimitCompColim : x✝¹\nx✝ : Sort u_5\ncolimit : x✝\nj : ?m.4698\nk : ?m.4699\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 3882
LeanError(message='Lean error:\nsimp made no progress') - Line 3883
LeanError(message="Lean error:\ninvalid 'lhs' conv tactic, failed to resolve\n  ?m.6948\n=?=\n  ?m.6963 = CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())") - Line 3885
LeanError(message="Lean error:\ninvalid 'lhs' conv tactic, failed to resolve\n  ?m.6948\n=?=\n  ?m.6963 = CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())") - Line 3886
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3631 = ?m.3632\nx✝ : Sort u_4\nlimitIsoLimitCurryCompLim : x✝\nj : ?m.3563\nk : ?m.3564\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 3888
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.5097 = ?m.5098\nx✝¹ : Sort u_4\ncolimitIsoColimitCurryCompColim : x✝¹\nx✝ : Sort u_5\ncolimit : x✝\nj : ?m.5026\nk : ?m.5027\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 3890
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp ?f ?g) ?h\nx✝ : Sort u_4\nlimitCurrySwapCompLimIsoLimitCurryCompLim : x✝\nj : ?m.4839\nk : ?m.4840\n⊢ CategoryTheory.CategoryStruct.comp (sorry ()) (CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())) =\n    CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())") - Line 3891
LeanError(message="Lean error:\ninvalid 'lhs' conv tactic, failed to resolve\n  ?m.7604\n=?=\n  ?m.7619 = CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())") - Line 3893
LeanError(message="Lean error:\ninvalid 'lhs' conv tactic, failed to resolve\n  ?m.7604\n=?=\n  ?m.7619 = CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ())") - Line 3894
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3926
LeanError(message="Lean error:\ntactic 'aesop' failed, failed to prove the goal after exhaustive search.\nInitial goal:\n  x✝ : Sort u_1\n  LimitCone : x✝\n  s : sorry\n  t : sorry\n  ⊢ sorry = CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry)\nRemaining goals after safe rules:\n  x : Sort u_1\n  LimitCone : x\n  s : sorry\n  t : sorry\n  ⊢ sorry () = CategoryTheory.CategoryStruct.comp (sorry ()) (CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ()))") - Line 3928
LeanError(message='Lean error:\ninternal exception #5') - Line 3929
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1765 c ⟶ ?m.1766 c') - Line 3930
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.1042'") - Line 3937
LeanError(message='Lean error:\ninternal exception #5') - Line 3971
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3973
LeanError(message="Lean error:\ntactic 'aesop' failed, failed to prove the goal after exhaustive search.\nInitial goal:\n  x✝ : Sort u_1\n  ColimitCocone : x✝\n  s : sorry\n  t : sorry\n  ⊢ sorry = CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry)\nRemaining goals after safe rules:\n  x : Sort u_1\n  ColimitCocone : x\n  s : sorry\n  t : sorry\n  ⊢ sorry () = CategoryTheory.CategoryStruct.comp (sorry ()) (CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ()))") - Line 3975
LeanError(message='Lean error:\ninternal exception #5') - Line 3976
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.33301 C _fvar.29234 _fvar.29389 _fvar.32689 c ⟶ G.obj (?m.33302 C _fvar.29234 _fvar.29389 _fvar.32689 c)') - Line 3977
LeanError(message="Lean error:\nunknown free variable '_fvar.36467'") - Line 3982
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.41422 c ⟶ ?m.41423 c') - Line 3983
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.36429'") - Line 3986
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3993
LeanError(message="Lean error:\nunknown free variable '_fvar.1034'") - Line 4007
LeanError(message="Lean error:\nunknown free variable '_fvar.1034'") - Line 4008
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 4012
LeanError(message="Lean error:\nunknown free variable '_fvar.8506'") - Line 4014
LeanError(message='Lean error:\ninternal exception #5') - Line 4015
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4018
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 4029
LeanError(message="Lean error:\nunknown free variable '_fvar.16815'") - Line 4032
LeanError(message="Lean error:\nunknown free variable '_fvar.16815'") - Line 4033
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 4038
LeanError(message="Lean error:\nunknown free variable '_fvar.48789'") - Line 4040
LeanError(message='Lean error:\ninternal exception #5') - Line 4041
LeanError(message='Lean error:\napplication type mismatch\n  CategoryTheory.Limits.IsColimit c₂\nargument\n  c₂\nhas type\n  sorry : Type (max u_1 ?u.4199)\nbut is expected to have type\n  CategoryTheory.Limits.Cocone (?m.15516 c₁ c₂ x✝) : Type (max (max ?u.8639 ?u.8638) ?u.8640)') - Line 4043
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Limits.Cofan.IsColimit.hom_ext sorry ?m.2153 ?m.2154 sorry\nhas type\n  ?m.2153 = ?m.2154 : Prop\nbut is expected to have type\n  inl = sorry : Prop') - Line 4047
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Limits.Cofan.IsColimit.hom_ext sorry ?m.5864 ?m.5865 sorry\nhas type\n  ?m.5864 = ?m.5865 : Prop\nbut is expected to have type\n  inr = sorry : Prop') - Line 4048
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4049
LeanError(message='Lean error:\nno goals to be solved') - Line 4052
LeanError(message='Lean error:\n<input>:1:58: expected token') - Line 4053
LeanError(message='Lean error:\ninternal exception #5') - Line 4054
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a₁ = ?a₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = sorry\nx✝⁴ : Sort u_2\nCofan : x✝⁴\nx✝³ : Sort u_3\nFan : x✝³\nx✝² : Sort u_4\nIsColimit : x✝²\nx✝¹ : Sort u_5\nIsLimit : x✝¹\nx✝ : Sort u_6\nopCoproductIsoProduct' : x✝\nc : sorry\nc' : sorry\nf : sorry\nhc : sorry\nhc' : sorry\nhf : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4093
LeanError(message='Lean error:\napplication type mismatch\n  (CategoryTheory.Iso.eq_comp_inv ?m.3267).mp (Quiver.Hom.unop_inj sorry)\nargument\n  Quiver.Hom.unop_inj sorry\nhas type\n  ?m.5807 = ?m.5808 : Prop\nbut is expected to have type\n  ?m.3269 = CategoryTheory.CategoryStruct.comp ?m.3268 (CategoryTheory.Iso.inv ?m.3267) : Prop') - Line 4095
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a₁ = ?a₂\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = sorry\nx✝⁴ : Sort u_2\nFan : x✝⁴\nx✝³ : Sort u_3\nCofan : x✝³\nx✝² : Sort u_4\nIsLimit : x✝²\nx✝¹ : Sort u_5\nIsColimit : x✝¹\nx✝ : Sort u_6\nopProductIsoCoproduct' : x✝\nf : sorry\nf' : sorry\nc : sorry\nhf : sorry\nhf' : sorry\nhc : sorry\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4098
LeanError(message='Lean error:\napplication type mismatch\n  (CategoryTheory.Iso.inv_comp_eq ?m.3333).mpr (Quiver.Hom.unop_inj sorry)\nargument\n  Quiver.Hom.unop_inj sorry\nhas type\n  ?m.5873 = ?m.5874 : Prop\nbut is expected to have type\n  ?m.3334 = CategoryTheory.CategoryStruct.comp (CategoryTheory.Iso.hom ?m.3333) ?m.3335 : Prop') - Line 4100
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_2\nopProdIsoCoprod : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4103
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.Iso.inv ?α) = ?g\nx✝ : Sort u_2\nopProdIsoCoprod : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4104
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.Iso.inv ?α) = ?g\nx✝ : Sort u_2\nopProdIsoCoprod : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4105
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (Quiver.Hom.unop ?m.3392) (Quiver.Hom.unop ?m.3391)\nx✝ : Sort u_2\nopProdIsoCoprod : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4108
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (Quiver.Hom.unop ?m.3392) (Quiver.Hom.unop ?m.3391)\nx✝ : Sort u_2\nopProdIsoCoprod : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 4109
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4110
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4111
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4112
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4113
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4114
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4115
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4116
LeanError(message="Lean error:\nunknown free variable '_fvar.237'") - Line 4117
LeanError(message="Lean error:\n<input>:3:9: expected ')'") - Line 4131
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u_2\nx✝ : Sort u_1\nIsUniversalColimit : x✝\nn : ℕ\nf : Fin (n + 1) → C\nc₁ : sorry\nc₂ : sorry\nt₁ : sorry\nt₂ : sorry\ninst✝ : ∀ {Z : ?m.12014 f t₁ t₂} (i : Z ⟶ sorry), CategoryTheory.Limits.HasPullback sorry i\n⊢ sorry") - Line 4171
LeanError(message='Lean error:\ninternal exception #5') - Line 4179
LeanError(message='Lean error:\n<input>:1:18: expected token') - Line 4183
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.21682 is not an inductive datatype') - Line 4184
LeanError(message='Lean error:\ninternal exception #5') - Line 4186
LeanError(message='Lean error:\ninternal exception #5') - Line 4188
LeanError(message='Lean error:\napplication type mismatch\n  Eq.mpr ?m.13431\nargument\n  ?m.13431\nhas type\n  (sorry = sorry) =\n    (CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inl ?convert_5 =\n      CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inl ?convert_6) : Prop\nbut is expected to have type\n  ?α = ?β : Prop') - Line 4211
LeanError(message='Lean error:\nsimp made no progress') - Line 4242
LeanError(message='Lean error:\nsimp made no progress') - Line 4244
LeanError(message='Lean error:\nsimp made no progress') - Line 4245
LeanError(message='Lean error:\nsimp made no progress') - Line 4247
LeanError(message='Lean error:\ninternal exception #5') - Line 4257
LeanError(message='Lean error:\nsimp made no progress') - Line 4264
LeanError(message='Lean error:\ninternal exception #5') - Line 4266
LeanError(message='Lean error:\nsimp made no progress') - Line 4273
LeanError(message='Lean error:\nno goals to be solved') - Line 4278
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.Iso.refl ?m.31660\nhas type\n  ?m.31660 ≅ ?m.31660 : Type ?u.31657\nbut is expected to have type\n  (CategoryTheory.Discrete.functor fun n => sorry).obj { as := i } ≅ K.obj { as := i } : Type v') - Line 4283
LeanError(message="Lean error:\nunknown free variable '_fvar.39'") - Line 4285
LeanError(message='Lean error:\nno goals to be solved') - Line 4354
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∃ k, Nonempty sorry\ncolimit : ?m.35058\nC : Type u\ninst✝⁶ : CategoryTheory.Category.{v, u} C\nI : Type v\ninst✝⁵ : CategoryTheory.SmallCategory I\nF : CategoryTheory.Functor I (CategoryTheory.Functor Cᵒᵖ (Type v))\nJ : Type v\ninst✝⁴ : CategoryTheory.SmallCategory J\ninst✝³ : CategoryTheory.FinCategory J\nG : CategoryTheory.Functor J (CategoryTheory.CostructuredArrow CategoryTheory.yoneda sorry)\nK✝ : Type v\ninst✝² : CategoryTheory.SmallCategory K✝\nH : CategoryTheory.Functor K✝ (CategoryTheory.Over sorry)\nK : Type v\ninst✝¹ : CategoryTheory.SmallCategory K\nx✝ : Sort u_1\nlimit : x✝\ninst✝ : CategoryTheory.IsFiltered K\nh : Nonempty sorry\n⊢ ∃ k, Nonempty sorry") - Line 4359
LeanError(message='Lean error:\nno goals to be solved') - Line 4360
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Category.{?u.65735, ?u.65734} ?m.65736') - Line 4361
LeanError(message='Lean error:\ninternal exception #5') - Line 4362
LeanError(message='Lean error:\nsimp made no progress') - Line 4363
LeanError(message='Lean error:\nsimp made no progress') - Line 4607
LeanError(message='Lean error:\nno goals to be solved') - Line 4614
LeanError(message='Lean error:\ninternal exception #5') - Line 4616
LeanError(message='Lean error:\ninternal exception #5') - Line 4617
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nG : CategoryTheory.Functor C D\ninst✝¹ : CategoryTheory.Limits.HasBinaryProducts C\ninst✝ : CategoryTheory.Limits.HasBinaryProducts D\ni : ∀ {X Y : C}, CategoryTheory.IsIso (CategoryTheory.Limits.prodComparison G X Y)\nK✝ : CategoryTheory.Functor (CategoryTheory.Discrete CategoryTheory.Limits.WalkingPair) C\n⊢ CategoryTheory.Limits.PreservesLimit K✝ G") - Line 4618
LeanError(message='Lean error:\nno goals to be solved') - Line 4619
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nG : CategoryTheory.Functor C D\ninst✝¹ : CategoryTheory.Limits.HasBinaryCoproducts C\ninst✝ : CategoryTheory.Limits.HasBinaryCoproducts D\ni : ∀ {X Y : C}, CategoryTheory.IsIso (CategoryTheory.Limits.coprodComparison G X Y)\nK✝ : CategoryTheory.Functor (CategoryTheory.Discrete CategoryTheory.Limits.WalkingPair) C\n⊢ CategoryTheory.Limits.PreservesColimit K✝ G") - Line 4621
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ F.obj ∘ f ⟶ ⨁ F.obj ∘ f') - Line 4628
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  F.obj X ⊞ F.obj Y ⟶ F.obj X ⊞ F.obj Y') - Line 4635
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  F.obj W ⟶ ⨁ F.obj ∘ f') - Line 4638
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ F.obj ∘ f ⟶ F.obj W') - Line 4639
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.PreservesBiproduct f F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4640
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  F.obj W ⟶ F.obj X ⊞ F.obj Y') - Line 4641
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.PreservesBinaryBiproduct X Y F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4642
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  F.obj X ⊞ F.obj Y ⟶ F.obj W') - Line 4643
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.PreservesBinaryBiproduct X Y F\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4644
LeanError(message='Lean error:\nno goals to be solved') - Line 4645
LeanError(message='Lean error:\ninternal exception #5') - Line 4647
LeanError(message='Lean error:\nno goals to be solved') - Line 4648
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.HasCoequalizer (G.map f) (G.map g)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4650
LeanError(message='Lean error:\ninternal exception #5') - Line 4655
LeanError(message='Lean error:\ninternal exception #5') - Line 4657
LeanError(message='Lean error:\nno goals to be solved') - Line 4659
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.HasKernel g\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4662
LeanError(message='Lean error:\ninternal exception #5') - Line 4663
LeanError(message='Lean error:\nno goals to be solved') - Line 4665
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.HasCokernel f\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 4668
LeanError(message='Lean error:\nno goals to be solved') - Line 4672
LeanError(message='Lean error:\nno goals to be solved') - Line 4674
LeanError(message='Lean error:\nno goals to be solved') - Line 4692
LeanError(message='Lean error:\nno goals to be solved') - Line 4693
LeanError(message='Lean error:\ninternal exception #5') - Line 4707
LeanError(message='Lean error:\ninternal exception #5') - Line 4713
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4729
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4733
LeanError(message="Lean error:\nunknown free variable '_fvar.4223'") - Line 4736
LeanError(message='Lean error:\ntype mismatch, term\n  CategoryTheory.leOfHom\n    (Exists.choose_spec\n        (CategoryTheory.IsFilteredOrEmpty.cocone_objs ((exists_surjective_nat ?m.4447).choose m) sorry)).choose\nafter simplification has type\n  ⋯.choose m ≤ ⋯.choose : Prop\nbut is expected to have type\n  j ≤ sorry : Prop') - Line 4738
LeanError(message='Lean error:\ntype mismatch, term\n  CategoryTheory.leOfHom\n    (Exists.choose_spec\n        (CategoryTheory.IsCofilteredOrEmpty.cone_objs ((exists_surjective_nat ?m.4445).choose m) sorry)).choose\nafter simplification has type\n  ⋯.choose ≤ ⋯.choose m : Prop\nbut is expected to have type\n  sorry ≤ j : Prop') - Line 4740
LeanError(message='Lean error:\nsimp made no progress') - Line 4764
LeanError(message='Lean error:\nsimp made no progress') - Line 4765
LeanError(message="Lean error:\nunknown free variable '_fvar.56'") - Line 4767
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 4784
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.42986\nMonoFactorisation : ?m.35172\nIsImage : ?m.35254\nC✝¹ : Type u\ninst✝² : CategoryTheory.Category.{v, u} C✝¹\nX✝ Y✝ : C✝¹\nf✝ : X✝ ⟶ Y✝\nF✝ : sorry\nF'✝ : sorry\nhF : sorry\nhF'✝ : sorry\nZ : C✝¹\ng : Y✝ ⟶ Z\nC✝ : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C✝\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nx✝ : Sort u_1\nStrongEpiMonoFactorisation : x✝\nX Y : C\nf : X ⟶ Y\nF : sorry\nF' : sorry\nhF' : sorry\n⊢ CategoryTheory.StrongEpi sorry") - Line 4823
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.44668\nwith\n  CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ()) = m\nMonoFactorisation : ?m.41107\nIsImage : ?m.41189\nC✝¹ : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C✝¹\nX✝¹ Y✝¹ : C✝¹\nf✝¹ : X✝¹ ⟶ Y✝¹\nF : sorry\nF' : sorry\nhF : sorry\nhF' : sorry\nZ : C✝¹\ng : Y✝¹ ⟶ Z\nC✝ : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C✝\nX✝ Y✝ : C✝\nf✝ : X✝ ⟶ Y✝\nC : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nX Y : C\nf : X ⟶ Y\nI' : C\ne : X ⟶ I'\nm : I' ⟶ Y\ncomm : CategoryTheory.CategoryStruct.comp e m = f\ninst✝¹ : CategoryTheory.StrongEpi e\ninst✝ : CategoryTheory.Mono m\n⊢ CategoryTheory.CategoryStruct.comp (sorry ()) (sorry ()) = m") - Line 4825
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4833
LeanError(message='Lean error:\n<input>:1:67: expected token') - Line 4835
LeanError(message='Lean error:\ninternal exception #5') - Line 4836
LeanError(message='Lean error:\n<input>:1:45: expected token') - Line 4837
LeanError(message='Lean error:\ninternal exception #5') - Line 4838
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 4842
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4847
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.331') - Line 4851
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry ≅ sorry') - Line 4852
LeanError(message='Lean error:\ninternal exception #5') - Line 4862
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 4866
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4872
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4875
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4877
LeanError(message='Lean error:\n<input>:1:60: expected token') - Line 4927
LeanError(message='Lean error:\ninternal exception #5') - Line 4944
LeanError(message='Lean error:\ninternal exception #5') - Line 4946
LeanError(message='Lean error:\ninternal exception #5') - Line 4956
LeanError(message='Lean error:\ninternal exception #5') - Line 4978
LeanError(message='Lean error:\nno goals to be solved') - Line 4979
LeanError(message='Lean error:\ninternal exception #5') - Line 4980
LeanError(message='Lean error:\ninternal exception #5') - Line 4981
LeanError(message="Lean error:\ntactic 'subst' failed, 'f' occurs at\n  0\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nx✝ : Sort u_1\nIsZero : x✝\nX Y : C\nf : X ⟶ Y\ninst✝ : CategoryTheory.Mono f\nh : f = 0\n⊢ sorry") - Line 4990
LeanError(message="Lean error:\ntactic 'subst' failed, 'f' occurs at\n  0\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nx✝ : Sort u_1\nIsZero : x✝\nX Y : C\nf : X ⟶ Y\ninst✝ : CategoryTheory.Epi f\nh : f = 0\n⊢ sorry") - Line 4991
LeanError(message='Lean error:\ninternal exception #5') - Line 4992
LeanError(message='Lean error:\ninternal exception #5') - Line 4993
LeanError(message='Lean error:\ninternal exception #5') - Line 4994
LeanError(message='Lean error:\ninternal exception #5') - Line 4995
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 4996
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 4997
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 4998
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 4999
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ sorry') - Line 5008
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 5009
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  0 ⟶ X') - Line 5010
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 5011
LeanError(message='Lean error:\ninternal exception #5') - Line 5018
LeanError(message='Lean error:\ninternal exception #5') - Line 5027
LeanError(message='Lean error:\ninternal exception #5') - Line 5028
LeanError(message='Lean error:\ntype mismatch\n  if h : b = c then ?pos✝ else ?neg✝\nhas type\n  ?m.10441 : Sort ?u.10440\nbut is expected to have type\n  CategoryTheory.CategoryStruct.comp sorry sorry = if h : b = c then CategoryTheory.eqToHom ⋯ else 0 : Prop') - Line 5031
LeanError(message='Lean error:\ntype mismatch\n  if h : b = c then ?pos✝ else ?neg✝\nhas type\n  ?m.10469 : Sort ?u.10468\nbut is expected to have type\n  CategoryTheory.CategoryStruct.comp sorry sorry = if h : b = c then CategoryTheory.eqToHom ⋯ else 0 : Prop') - Line 5034
LeanError(message='Lean error:\n<input>:1:26: expected token') - Line 5051
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 5059
LeanError(message="Lean error:\ntarget\n  f\nhas type\n  c ⟶ c' : Sort u_4\nbut is expected to have type\n  ?x ⟶ ?y : Type (max ?u.2780 ?u.2779)") - Line 5063
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.11743'") - Line 5108
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.11743'") - Line 5109
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.11743'") - Line 5110
LeanError(message="Lean error:\nunknown free variable '_fvar.11743'") - Line 5111
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.11743'") - Line 5112
LeanError(message="Lean error:\nin rapp for rule safe|tactic|global|Aesop.BuiltinRule.preprocess:\n  unknown free variable '_fvar.11743'") - Line 5113
LeanError(message='Lean error:\n<input>:1:1: unknown tactic') - Line 5115
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nx✝² : Sort u_1\nIsTerminal : x✝²\nx✝¹ : Sort u_2\nBinaryFan : x✝¹\nx✝ : Sort u_3\nIsLimit : x✝\nX Y : C\nh : sorry\nc : sorry\n⊢ Nonempty sorry ↔ CategoryTheory.IsIso sorry") - Line 5142
LeanError(message='Lean error:\ntype mismatch\n  Iff.trans ?m.7819 sorry\nhas type\n  ?m.7816 ↔ ?m.7818 : Prop\nbut is expected to have type\n  Nonempty sorry ↔ CategoryTheory.IsIso sorry : Prop') - Line 5143
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nx✝² : Sort u_1\nIsInitial : x✝²\nx✝¹ : Sort u_2\nBinaryCofan : x✝¹\nx✝ : Sort u_3\nIsColimit : x✝\nX Y : C\nh : sorry\nc : sorry\n⊢ Nonempty sorry ↔ CategoryTheory.IsIso sorry") - Line 5144
LeanError(message='Lean error:\ntype mismatch\n  Iff.trans ?m.7819 sorry\nhas type\n  ?m.7816 ↔ ?m.7818 : Prop\nbut is expected to have type\n  Nonempty sorry ↔ CategoryTheory.IsIso sorry : Prop') - Line 5145
LeanError(message="Lean error:\nunknown free variable '_fvar.3365'") - Line 5196
LeanError(message="Lean error:\nunknown free variable '_fvar.3365'") - Line 5197
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.4618 _fvar.4019 X Y ⟶ ?m.4619 _fvar.4019 X Y') - Line 5198
LeanError(message="Lean error:\nunknown free variable '_fvar.12497'") - Line 5202
LeanError(message="Lean error:\nunknown free variable '_fvar.12497'") - Line 5203
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?g = CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.inv ?α)\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nD : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} D\nF : CategoryTheory.Functor C D\nA A' B B' : C\nx✝ : Sort u_1\nprodComparison : x✝\nf : A ⟶ A'\ng : B ⟶ B'\ninst✝¹ : CategoryTheory.IsIso sorry\ninst✝ : CategoryTheory.IsIso sorry\n⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.inv sorry) (F.map sorry) =\n    CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.inv sorry)") - Line 5204
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'prodComparison' has no definition") - Line 5205
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nD : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} D\nF : CategoryTheory.Functor C D\nA A' B B' : C\nx✝ : Sort u_1\ncoprodComparison : x✝\nf : A ⟶ A'\ng : B ⟶ B'\n⊢ CategoryTheory.CategoryStruct.comp sorry (F.map sorry) = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 5208
LeanError(message="Lean error:\nunknown free variable '_fvar.15839'") - Line 5209
LeanError(message="Lean error:\nunknown free variable '_fvar.15839'") - Line 5210
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?g = CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.inv ?α)\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nD : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} D\nF : CategoryTheory.Functor C D\nA A' B B' : C\nx✝ : Sort u_1\ncoprodComparison : x✝\nf : A ⟶ A'\ng : B ⟶ B'\ninst✝¹ : CategoryTheory.IsIso sorry\ninst✝ : CategoryTheory.IsIso sorry\n⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.inv sorry) sorry =\n    CategoryTheory.CategoryStruct.comp (F.map sorry) (CategoryTheory.inv sorry)") - Line 5211
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nc : CategoryTheory.Bicone sorry\nc' : CategoryTheory.Bicone sorry\nf : sorry\ng : sorry\nw : sorry = sorry\n⊢ f = g") - Line 5214
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5244
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5246
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5248
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5250
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1391 ⟶ ?m.1392') - Line 5253
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2967 m k ⟶ ?m.2970 m k') - Line 5254
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2967 m j ⟶ ?m.2970 m j') - Line 5255
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ f ⟶ ⨁ g') - Line 5257
LeanError(message='Lean error:\ninternal exception #5') - Line 5261
LeanError(message='Lean error:\nno goals to be solved') - Line 5262
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.29192 is not an inductive datatype') - Line 5268
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.29192 is not an inductive datatype') - Line 5269
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.5780 → ∃ x₁ x₂, ∃ (_ : sorry = sorry), x = sorry\nx✝¹ : Sort u_7\nToType : x✝¹\nx✝ : Sort u_8\npullbackMk : x✝\nx : sorry\n⊢ ∃ x₁ x₂, ∃ (_ : sorry = sorry), x = sorry") - Line 5270
LeanError(message="Lean error:\ninvalid 'rhs' conv tactic, failed to resolve\n  ?m.4143\n=?=\n  CategoryTheory.CategoryStruct.comp sorry\n      (CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp i₁ sorry)) =\n    ?m.4154") - Line 5284
LeanError(message="Lean error:\ninvalid 'rhs' conv tactic, failed to resolve\n  ?m.4512\n=?=\n  CategoryTheory.CategoryStruct.comp sorry\n      (CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp i₂ sorry)) =\n    ?m.4523") - Line 5285
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIso'") - Line 5286
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIso'") - Line 5287
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIso'") - Line 5288
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIso'") - Line 5289
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIso'") - Line 5290
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIdIso'") - Line 5292
LeanError(message="Lean error:\nunknown constant 'pullbackDiagonalMapIdIso'") - Line 5293
LeanError(message="Lean error:\nunknown free variable '_fvar.8682'") - Line 5294
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.Iso.inv ?α) ?f = ?g\npullback : ?m.7397\nC : Type u_1\ninst✝ : CategoryTheory.Category.{?u.7404, u_1} C\nX Y Z U V₁ V₂ : C\nf✝ : X ⟶ Y\ni✝ : U ⟶ Y\ni₁ : V₁ ⟶ sorry\ni₂ : V₂ ⟶ sorry\nS T : C\nf : X ⟶ T\ng : Y ⟶ T\ni : T ⟶ S\nx✝ : Sort u_2\npullbackDiagonalMapIdIso : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry) = sorry") - Line 5295
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.Iso.inv ?α) ?f = ?g\npullback : ?m.7397\nC : Type u_1\ninst✝ : CategoryTheory.Category.{?u.7404, u_1} C\nX Y Z U V₁ V₂ : C\nf✝ : X ⟶ Y\ni✝ : U ⟶ Y\ni₁ : V₁ ⟶ sorry\ni₂ : V₂ ⟶ sorry\nS T : C\nf : X ⟶ T\ng : Y ⟶ T\ni : T ⟶ S\nx✝ : Sort u_2\npullbackDiagonalMapIdIso : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry) = sorry") - Line 5296
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.12016 _fvar.8687 _fvar.8688 _fvar.8689 _fvar.8690 _fvar.8693 _fvar.8694 _fvar.8695 f g ⟶\n    ?m.12017 _fvar.8687 _fvar.8688 _fvar.8689 _fvar.8690 _fvar.8693 _fvar.8694 _fvar.8695 f g') - Line 5297
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ ?m.9055 _fvar.8687 _fvar.8688 _fvar.8689 _fvar.8690 _fvar.8693 _fvar.8694 _fvar.8695 f g') - Line 5298
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.IsPullback ?m.11556 ?m.11557 ?m.11558 ?m.11559\nwith\n  CategoryTheory.IsPullback (CategoryTheory.CategoryStruct.comp sorry f) sorry sorry sorry\npullback : ?m.7397\nC✝ : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C✝\nX✝ Y Z U V₁ V₂ : C✝\nf✝¹ : X✝ ⟶ Y\ni✝ : U ⟶ Y\ni₁ : V₁ ⟶ sorry\ni₂ : V₂ ⟶ sorry\nS T✝ : C✝\nf✝ : X✝ ⟶ T✝\ng : Y ⟶ T✝\ni : T✝ ⟶ S\nC : Type u_1\ninst✝ : CategoryTheory.Category.{u_3, u_1} C\nX T : C\nf : X ⟶ T\nx✝ : Sort u_2\ndiagonal : x✝\n⊢ CategoryTheory.IsPullback (CategoryTheory.CategoryStruct.comp sorry f) sorry sorry sorry") - Line 5299
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5300
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5302
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5303
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5304
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5305
LeanError(message="Lean error:\nunknown constant 'diagonalObjPullbackFstIso'") - Line 5306
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.19057 _fvar.8687 _fvar.8688 _fvar.8689 _fvar.8690 _fvar.8693 _fvar.8694 _fvar.8695 f g ⟶\n    ?m.19058 _fvar.8687 _fvar.8688 _fvar.8689 _fvar.8690 _fvar.8693 _fvar.8694 _fvar.8695 f g') - Line 5307
LeanError(message='Lean error:\n<input>:1:20: expected token') - Line 5308
LeanError(message="Lean error:\nunknown free variable '_fvar.8681'") - Line 5309
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nWalkingParallelPair : Sort u_1\nx✝¹ : Sort u_2\nWalkingParallelPairHom : x✝¹\nx✝ : Sort u_3\ncomp : x✝\nX Y : WalkingParallelPair\nf : sorry\n⊢ sorry = f") - Line 5319
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nWalkingParallelPair : Sort u_1\nx✝¹ : Sort u_2\nWalkingParallelPairHom : x✝¹\nx✝ : Sort u_3\ncomp : x✝\nX Y Z W : WalkingParallelPair\nf : sorry\ng : sorry\nh : sorry\n⊢ sorry = sorry") - Line 5320
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  WalkingParallelPair\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nWalkingParallelPair : Type u_1\nx✝ : Sort u_2\nparallelPair : x✝\nF : sorry\nj : WalkingParallelPair\n⊢ sorry = sorry") - Line 5334
LeanError(message='Lean error:\ninternal exception #5') - Line 5339
LeanError(message='Lean error:\ninternal exception #5') - Line 5340
LeanError(message='Lean error:\ninternal exception #5') - Line 5341
LeanError(message='Lean error:\ninternal exception #5') - Line 5342
LeanError(message='Lean error:\ninternal exception #5') - Line 5345
LeanError(message='Lean error:\ninternal exception #5') - Line 5346
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5365
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5366
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.728') - Line 5381
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.872') - Line 5396
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 5417
LeanError(message="Lean error:\nunknown free variable '_fvar.364'") - Line 5421
LeanError(message="Lean error:\nunknown free variable '_fvar.364'") - Line 5422
LeanError(message='Lean error:\nno goals to be solved') - Line 5423
LeanError(message='Lean error:\nno goals to be solved') - Line 5424
LeanError(message="Lean error:\nunknown free variable '_fvar.657'") - Line 5520
LeanError(message="Lean error:\nunknown free variable '_fvar.758'") - Line 5521
LeanError(message="Lean error:\nunknown free variable '_fvar.758'") - Line 5522
LeanError(message='Lean error:\napplication type mismatch\n  { mp := ?m.7253, mpr := symm }\nargument\n  symm\nhas type\n  ?m.7256 ?m.7257 ?m.7258 → ?m.7256 ?m.7258 ?m.7257 : Prop\nbut is expected to have type\n  sorry → sorry : Prop') - Line 5523
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp\n      (CategoryTheory.Limits.limit.π (CategoryTheory.Limits.WidePullbackShape.wideCospan ?m.2439 ?m.2440 ?m.2441)\n        (some j))\n      ((CategoryTheory.Limits.WidePullbackShape.wideCospan ?m.2439 ?m.2440 ?m.2441).map\n        (CategoryTheory.Limits.WidePullbackShape.Hom.term j)) =\n    CategoryTheory.Limits.limit.π (CategoryTheory.Limits.WidePullbackShape.wideCospan ?m.2439 ?m.2440 ?m.2441) none\nwith\n  CategoryTheory.CategoryStruct.comp sorry (arrows (?m.2407 arrows j)) = sorry\nJ : Type w\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nB : C\nobjs : J → C\narrows : (j : J) → objs j ⟶ B\ninst✝ : CategoryTheory.Limits.HasWidePullback B objs arrows\nx✝¹ : Sort u_1\nπ : x✝¹\nx✝ : Sort u_2\nbase : x✝\nj : J\n⊢ CategoryTheory.CategoryStruct.comp sorry (arrows (?m.2407 arrows j)) = sorry") - Line 5584
LeanError(message="Lean error:\nunknown free variable '_fvar.2354'") - Line 5585
LeanError(message='Lean error:\nsimp made no progress') - Line 5586
LeanError(message='Lean error:\nno goals to be solved') - Line 5587
LeanError(message='Lean error:\nno goals to be solved') - Line 5588
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.HasLimit (CategoryTheory.Limits.WidePullbackShape.wideCospan B objs arrows)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5589
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp\n      ((CategoryTheory.Limits.WidePushoutShape.wideSpan ?m.6669 ?m.6670 ?m.6671).map\n        (CategoryTheory.Limits.WidePushoutShape.Hom.init j))\n      (CategoryTheory.Limits.colimit.ι (CategoryTheory.Limits.WidePushoutShape.wideSpan ?m.6669 ?m.6670 ?m.6671)\n        (some j)) =\n    CategoryTheory.Limits.colimit.ι (CategoryTheory.Limits.WidePushoutShape.wideSpan ?m.6669 ?m.6670 ?m.6671) none\nwith\n  CategoryTheory.CategoryStruct.comp (arrows j) sorry = sorry\nJ : Type w\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nB : C\nobjs : J → C\narrows : (j : J) → B ⟶ objs j\ninst✝ : CategoryTheory.Limits.HasWidePushout B objs arrows\nx✝¹ : Sort u_1\nι : x✝¹\nx✝ : Sort u_2\nhead : x✝\nj : J\n⊢ CategoryTheory.CategoryStruct.comp (arrows j) sorry = sorry") - Line 5590
LeanError(message="Lean error:\nunknown free variable '_fvar.7210'") - Line 5591
LeanError(message='Lean error:\nsimp made no progress') - Line 5592
LeanError(message='Lean error:\nno goals to be solved') - Line 5593
LeanError(message='Lean error:\nno goals to be solved') - Line 5594
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Limits.HasColimit (CategoryTheory.Limits.WidePushoutShape.wideSpan B objs arrows)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5595
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5598
LeanError(message='Lean error:\ninternal exception #5') - Line 5600
LeanError(message='Lean error:\n<input>:2:20: expected end of input') - Line 5604
LeanError(message='Lean error:\nno goals to be solved') - Line 5625
LeanError(message='Lean error:\nno goals to be solved') - Line 5626
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.4812 ⟶ ?m.4812') - Line 5630
LeanError(message='Lean error:\n<input>:1:39: expected token') - Line 5631
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.14010 ⟶ ?m.14010') - Line 5638
LeanError(message='Lean error:\n<input>:1:42: expected token') - Line 5639
LeanError(message='Lean error:\ninternal exception #5') - Line 5645
LeanError(message='Lean error:\ninternal exception #5') - Line 5650
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.CategoryStruct.comp ?g ?h)\nPullbackCone : ?m.81104\nPushoutCocone : ?m.81858\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX₃✝² Y₁✝² Y₂✝ Y₃✝ : C\ng₁✝ : Y₁✝² ⟶ Y₂✝\ng₂✝ : Y₂✝ ⟶ Y₃✝\ni₃✝ : X₃✝² ⟶ Y₃✝\nt₂✝² : sorry\ni₂✝² : sorry ⟶ Y₂✝\nt₁✝² : sorry\nhi₂✝¹ : i₂✝² = sorry\nX₁✝ X₂✝ X₃✝¹ Y₁✝¹ : C\nf₁✝ : X₂✝ ⟶ X₁✝\nf₂✝ : X₃✝¹ ⟶ X₂✝\ni₁✝ : Y₁✝¹ ⟶ X₁✝\nt₁✝¹ : sorry\ni₂✝¹ : sorry ⟶ X₂✝\nt₂✝¹ : sorry\nhi₂✝ : i₂✝¹ = sorry\nX₁ X₂ X₃✝ Y₁✝ : C\nf₁ : X₁ ⟶ X₂\nf₂ : X₂ ⟶ X₃✝\ni₁ : X₁ ⟶ Y₁✝\nt₁✝ : sorry\ni₂✝ : X₂ ⟶ sorry\nt₂✝ : sorry\nhi₂ : i₂✝ = sorry\nY₃ Y₂ Y₁ X₃ : C\ng₂ : Y₃ ⟶ Y₂\ng₁ : Y₂ ⟶ Y₁\ni₃ : Y₃ ⟶ X₃\nt₁ : sorry\ni₂ : Y₂ ⟶ sorry\nt₂ : sorry\nW✝¹ X✝¹ Y✝¹ Z✝¹ : C\nf✝¹ : X✝¹ ⟶ Z✝¹\ng✝¹ : Y✝¹ ⟶ Z✝¹\nf' : W✝¹ ⟶ X✝¹\nW✝ X✝ Y✝ Z✝ : C\nf✝ : X✝ ⟶ Z✝\ng✝ : Y✝ ⟶ Z✝\ng'✝ : W✝ ⟶ Y✝\nW X Y Z : C\nf : X ⟶ Y\ng : X ⟶ Z\ng' : Z ⟶ W\nx✝ : Sort u_1\npushoutLeftPushoutInrIso : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry) = sorry") - Line 5654
LeanError(message="Lean error:\nunknown free variable '_fvar.86795'") - Line 5655
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.CategoryStruct.comp ?g ?h)\nPullbackCone : ?m.93435\nPushoutCocone : ?m.94189\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX₃✝² Y₁✝² Y₂✝ Y₃✝ : C\ng₁✝ : Y₁✝² ⟶ Y₂✝\ng₂✝ : Y₂✝ ⟶ Y₃✝\ni₃✝ : X₃✝² ⟶ Y₃✝\nt₂✝² : sorry\ni₂✝² : sorry ⟶ Y₂✝\nt₁✝² : sorry\nhi₂✝¹ : i₂✝² = sorry\nX₁✝ X₂✝ X₃✝¹ Y₁✝¹ : C\nf₁✝ : X₂✝ ⟶ X₁✝\nf₂✝ : X₃✝¹ ⟶ X₂✝\ni₁✝ : Y₁✝¹ ⟶ X₁✝\nt₁✝¹ : sorry\ni₂✝¹ : sorry ⟶ X₂✝\nt₂✝¹ : sorry\nhi₂✝ : i₂✝¹ = sorry\nX₁ X₂ X₃✝ Y₁✝ : C\nf₁ : X₁ ⟶ X₂\nf₂ : X₂ ⟶ X₃✝\ni₁ : X₁ ⟶ Y₁✝\nt₁✝ : sorry\ni₂✝ : X₂ ⟶ sorry\nt₂✝ : sorry\nhi₂ : i₂✝ = sorry\nY₃ Y₂ Y₁ X₃ : C\ng₂ : Y₃ ⟶ Y₂\ng₁ : Y₂ ⟶ Y₁\ni₃ : Y₃ ⟶ X₃\nt₁ : sorry\ni₂ : Y₂ ⟶ sorry\nt₂ : sorry\nW✝² X✝² Y✝² Z✝² : C\nf✝² : X✝² ⟶ Z✝²\ng✝² : Y✝² ⟶ Z✝²\nf'✝ : W✝² ⟶ X✝²\nW✝¹ X✝¹ Y✝¹ Z✝¹ : C\nf✝¹ : X✝¹ ⟶ Z✝¹\ng✝¹ : Y✝¹ ⟶ Z✝¹\ng'✝ : W✝¹ ⟶ Y✝¹\nW✝ X✝ Y✝ Z✝ : C\nf✝ : X✝ ⟶ Y✝\ng✝ : X✝ ⟶ Z✝\ng' : Z✝ ⟶ W✝\nW X Y Z : C\nf : X ⟶ Y\ng : X ⟶ Z\nf' : Y ⟶ W\nx✝ : Sort u_1\npushoutRightPushoutInlIso : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp sorry sorry) = sorry") - Line 5657
LeanError(message="Lean error:\nunknown free variable '_fvar.99323'") - Line 5660
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.IsPullback.of_iso sorry sorry sorry sorry sorry ?m.4728 ?m.4729 ?m.4730 ?m.4731\nhas type\n  CategoryTheory.IsPullback ?m.2597 ?m.2598 ?m.2599 ?m.2600 : Prop\nbut is expected to have type\n  sorry : Sort u_4') - Line 5665
LeanError(message='Lean error:\ntype mismatch\n  CategoryTheory.IsPushout.of_iso sorry sorry sorry sorry sorry ?m.4728 ?m.4729 ?m.4730 ?m.4731\nhas type\n  CategoryTheory.IsPushout ?m.2597 ?m.2598 ?m.2599 ?m.2600 : Prop\nbut is expected to have type\n  sorry : Sort u_4') - Line 5667
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 5690
LeanError(message='Lean error:\nsimp made no progress') - Line 5699
LeanError(message='Lean error:\nsimp made no progress') - Line 5700
LeanError(message='Lean error:\ndsimp made no progress') - Line 5702
LeanError(message='Lean error:\ninternal exception #5') - Line 5707
LeanError(message='Lean error:\ninternal exception #5') - Line 5710
LeanError(message='Lean error:\ninternal exception #5') - Line 5711
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 5719
LeanError(message='Lean error:\nsimp made no progress') - Line 5728
LeanError(message='Lean error:\nsimp made no progress') - Line 5729
LeanError(message='Lean error:\ndsimp made no progress') - Line 5730
LeanError(message='Lean error:\ndsimp made no progress') - Line 5731
LeanError(message='Lean error:\ninternal exception #5') - Line 5735
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5742
LeanError(message='Lean error:\ninternal exception #5') - Line 5754
LeanError(message='Lean error:\nno goals to be solved') - Line 5756
LeanError(message='Lean error:\nsimp made no progress') - Line 5758
LeanError(message='Lean error:\nno goals to be solved') - Line 5760
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5771
LeanError(message='Lean error:\ninternal exception #5') - Line 5783
LeanError(message='Lean error:\nsimp made no progress') - Line 5785
LeanError(message='Lean error:\nno goals to be solved') - Line 5787
LeanError(message='Lean error:\nno goals to be solved') - Line 5789
LeanError(message='Lean error:\nno goals to be solved') - Line 5805
LeanError(message='Lean error:\nno goals to be solved') - Line 5806
LeanError(message='Lean error:\nno goals to be solved') - Line 5807
LeanError(message='Lean error:\nno goals to be solved') - Line 5810
LeanError(message='Lean error:\ninternal exception #5') - Line 5908
LeanError(message="Lean error:\nunknown free variable '_fvar.2170'") - Line 5916
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?g = CategoryTheory.CategoryStruct.comp (CategoryTheory.inv ?α) ?f\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nX Y Z : C\nf : X ⟶ Y\ng : X ⟶ Z\ninst✝ : CategoryTheory.IsIso f\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.inv sorry) =\n    CategoryTheory.CategoryStruct.comp (CategoryTheory.inv f) g") - Line 5924
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?g = CategoryTheory.CategoryStruct.comp (CategoryTheory.inv ?α) ?f\nC : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nX Y Z : C\nf : X ⟶ Y\ng : X ⟶ Z\ninst✝ : CategoryTheory.IsIso g\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.inv sorry) =\n    CategoryTheory.CategoryStruct.comp (CategoryTheory.inv g) f") - Line 5932
LeanError(message='Lean error:\ninternal exception #5') - Line 5935
LeanError(message='Lean error:\ninternal exception #5') - Line 5948
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5966
LeanError(message='Lean error:\nsimp made no progress') - Line 5976
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: unknown free variable '_fvar.38'\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nJ : Type u_5\nj j' : J\nx : sorry\nx' : sorry\nf : sorry\nw : sorry = x'\n⊢ sorry = sorry") - Line 5983
LeanError(message='Lean error:\ninternal exception #5') - Line 5984
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3685 = ?m.3686\nJ : Type v\ninst✝² : CategoryTheory.Category.{w, v} J\nF : CategoryTheory.Functor J (Type u)\ninst✝¹ : CategoryTheory.IsFilteredOrEmpty J\nx✝ : Sort u_1\ncolimitCocone : x✝\ninst✝ : CategoryTheory.Limits.HasColimit F\ni j : J\nxi : F.obj i\nxj : F.obj j\n⊢ sorry () = sorry () ↔ sorry ()") - Line 5994
LeanError(message='Lean error:\ninternal exception #5') - Line 5995
LeanError(message='Lean error:\ninternal exception #5') - Line 5996
LeanError(message='Lean error:\ntype mismatch\n  Exists.intro sorry rfl\nhas type\n  Exists (Eq sorry) : Prop\nbut is expected to have type\n  ∃ a_1, sorry a_1 = a : Prop') - Line 5999
LeanError(message='Lean error:\ninternal exception #5') - Line 6000
LeanError(message='Lean error:\nsimp made no progress') - Line 9
LeanError(message='Lean error:\nno goals to be solved') - Line 10
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 50
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  CategoryTheory.CategoryStruct.comp sorry Subtype.val\nis not definitionally equal to the right-hand side\n  CategoryTheory.Limits.equalizer.ι g h\nY Z : Type u\ng h : Y ⟶ Z\nx✝ : Sort u_1\nequalizerIso : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry Subtype.val = CategoryTheory.Limits.equalizer.ι g h") - Line 52
LeanError(message='Lean error:\n<input>:5:4: expected end of input') - Line 54
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.9206 is not an inductive datatype') - Line 60
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.9206 is not an inductive datatype') - Line 61
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  S ⟶ ?m.20395 f g') - Line 69
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 70
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 73
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nS X₁ : Type u\nf : S ⟶ X₁\nx✝¹ : Sort u_1\nRel' : x✝¹\ninst✝ : CategoryTheory.Mono f\nx✝ y✝ z✝ : ?m.26459\nx : ?m.26460 x✝ y✝\ny : ?m.26460 y✝ z✝\n⊢ ?m.26460 x✝ z✝") - Line 74
LeanError(message='Lean error:\nno goals to be solved') - Line 76
LeanError(message='Lean error:\ninternal exception #5') - Line 79
LeanError(message='Lean error:\ninternal exception #5') - Line 81
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.43319 is not an inductive datatype') - Line 83
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Linear R C\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 86
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Linear R C\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 87
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f (?c • ?x) = ?c • ?f ?x\nwith\n  sorry = r • sorry\nR : Type u_1\ninst✝ : Semiring R\nC : Type u_2\nX Y : C\nr : Rˣ\nf : sorry\n⊢ sorry = r • sorry") - Line 94
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 107
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nObjectProperty : ?m.1269\nP : sorry\nD : Sort u_1\nx✝ : Sort u_2\nW : x✝\nX : D\n⊢ sorry") - Line 108
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.3667\nObjectProperty : ?m.1269\nP : sorry\nD : Type u_1\nx✝¹ : Sort u_2\nW : x✝¹\nx✝ : Sort u_3\nIsIso : x✝\nX Y : D\nf : sorry\n⊢ sorry ↔ sorry") - Line 109
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2118') - Line 110
LeanError(message='Lean error:\ninternal exception #5') - Line 111
LeanError(message='Lean error:\nno goals to be solved') - Line 118
LeanError(message='Lean error:\n<input>:1:40: expected token') - Line 122
LeanError(message='Lean error:\ninternal exception #5') - Line 123
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.5934\nwith\n  sorry = f\nMorphismProperty : ?m.3837\nW₁ : sorry\nW₂ : sorry\nW₃ : sorry\nx✝ : Sort u_1\nhomEquiv : x✝\nf : sorry ⟶ sorry\n⊢ sorry = f") - Line 126
LeanError(message='Lean error:\nno goals to be solved') - Line 127
LeanError(message='Lean error:\ninternal exception #5') - Line 131
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 140
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 148
LeanError(message='Lean error:\nno goals to be solved') - Line 163
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nx✝ : Sort u_1\nHasSmallLocalizedHom : x✝\n⊢ sorry ↔ Small.{w, u_2} (sorry ⟶ sorry)") - Line 172
LeanError(message='Lean error:\ninternal exception #5') - Line 173
LeanError(message='Lean error:\nno goals to be solved') - Line 175
LeanError(message='Lean error:\nno goals to be solved') - Line 176
LeanError(message='Lean error:\nno goals to be solved') - Line 177
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.432\nwith\n  sorry = sorry\nx✝ : Sort u_1\nSmallHom : x✝\nf : sorry\ng : sorry\n⊢ sorry = sorry") - Line 190
LeanError(message='Lean error:\nrcases tactic failed: f : sorry is not an inductive datatype') - Line 227
LeanError(message='Lean error:\ninternal exception #5') - Line 242
LeanError(message="Lean error:\nunknown free variable '_fvar.20245'") - Line 243
LeanError(message='Lean error:\ninternal exception #5') - Line 248
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nMorphismProperty : ?m.21513\nC✝ : Sort u_5\nW✝¹ : sorry\nX✝¹ Y✝¹ : C✝\nW✝ : sorry\nX✝ Y✝ : C✝\nW : sorry\nL : C✝\nC : Sort u_5\nx✝ : Sort u_1\nLeftFractionRel : x✝\nX Y : C\nφ : sorry\nψ : sorry\n⊢ sorry = sorry ↔ sorry") - Line 249
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 254
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 255
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 256
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 257
LeanError(message="Lean error:\nunknown free variable '_fvar.25274'") - Line 264
LeanError(message='Lean error:\ninternal exception #5') - Line 265
LeanError(message='Lean error:\nsimp made no progress') - Line 273
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  T₂ ∈ sorry\nx✝ : Sort u_1\nTriangle : x✝\nT₁ : sorry\nT₂ : sorry\ne : T₂ ≅ T₁\nh : T₁ ∈ sorry\n⊢ T₂ ∈ sorry") - Line 333
LeanError(message='Lean error:\ninternal exception #5') - Line 337
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 340
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 343
LeanError(message='Lean error:\nrcases tactic failed: h : sorry is not an inductive datatype') - Line 344
LeanError(message="Lean error:\nunknown free variable '_fvar.188'") - Line 345
LeanError(message='Lean error:\nno goals to be solved') - Line 347
LeanError(message="Lean error:\nunknown free variable '_fvar.324'") - Line 348
LeanError(message='Lean error:\nno goals to be solved') - Line 351
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ φ₀, ∃ (x : sorry = sorry), sorry = sorry) → sorry = sorry\nx✝ : Sort u_1\nneg' : x✝\nf : sorry ⟶ sorry\nφ : sorry\nhφ : f = sorry\n⊢ sorry = sorry") - Line 353
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  (∃ φ₀, ∃ (x : sorry = sorry) (x_1 : sorry = sorry), sorry = sorry) → sorry = sorry\nx✝ : Sort u_1\nadd' : x✝\nf₁ : sorry ⟶ sorry\nf₂ : sorry ⟶ sorry\nφ : sorry\nhφ₁ : f₁ = sorry\nhφ₂ : f₂ = sorry\n⊢ sorry = sorry") - Line 354
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.1811 → sorry = sorry\nx✝ : Sort u_1\nadd' : x✝\nf₁ : sorry ⟶ sorry\nf₂ : sorry ⟶ sorry\n⊢ sorry = sorry") - Line 355
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.962 → sorry = f\nx✝ : Sort u_1\nadd' : x✝\nf : sorry ⟶ sorry\n⊢ sorry = f") - Line 356
LeanError(message='Lean error:\ninternal exception #5') - Line 357
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.966 → sorry = sorry\nx✝ : Sort u_1\nadd' : x✝\nf : sorry ⟶ sorry\n⊢ sorry = sorry") - Line 358
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ?m.2252 → sorry = sorry\nx✝ : Sort u_1\nadd' : x✝\nf₁ : sorry ⟶ sorry\nf₂ : sorry ⟶ sorry\nf₃ : sorry ⟶ sorry\n⊢ sorry = sorry") - Line 359
LeanError(message='Lean error:\n<input>:1:33: expected token') - Line 365
LeanError(message='Lean error:\ninternal exception #5') - Line 367
LeanError(message='Lean error:\ninternal exception #5') - Line 373
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Epi\n    ((CategoryTheory.MonoidalCategory.tensorLeft ?m.38632).map (CategoryTheory.Limits.coequalizer.π ?m.42521 ?m.42522))') - Line 465
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Epi\n    ((CategoryTheory.MonoidalCategory.tensorLeft ?m.38496).map (CategoryTheory.Limits.coequalizer.π ?m.42385 ?m.42386))') - Line 466
LeanError(message="Lean error:\nunknown free variable '_fvar.41925'") - Line 467
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Epi\n    ((CategoryTheory.MonoidalCategory.tensorRight ?m.50217).map (CategoryTheory.Limits.coequalizer.π ?m.54106 ?m.54107))') - Line 468
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  CategoryTheory.Epi\n    ((CategoryTheory.MonoidalCategory.tensorRight ?m.50090).map (CategoryTheory.Limits.coequalizer.π ?m.53979 ?m.53980))') - Line 469
LeanError(message='Lean error:\n<input>:1:34: expected token') - Line 470
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 471
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 472
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 477
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 478
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 481
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 482
LeanError(message="Lean error:\nunknown free variable '_fvar.362967'") - Line 490
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 613
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.1718\nwith\n  sorry = sorry\nx✝¹ : Sort u_1\nCenter : x✝¹\nx✝ : Sort u_2\nα_ : x✝\nX : sorry\nY : sorry\nZ : sorry\n⊢ sorry = sorry") - Line 625
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.890\nwith\n  sorry = sorry\nx✝¹ : Sort u_1\nCenter : x✝¹\nx✝ : Sort u_2\nρ_ : x✝\nX : sorry\n⊢ sorry = sorry") - Line 629
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 662
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 663
LeanError(message='Lean error:\ninternal exception #5') - Line 667
LeanError(message='Lean error:\ninternal exception #5') - Line 668
LeanError(message='Lean error:\ninternal exception #5') - Line 673
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 750
LeanError(message='Lean error:\n<input>:1:21: expected token') - Line 802
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 803
LeanError(message='Lean error:\n<input>:1:20: expected token') - Line 804
LeanError(message='Lean error:\ninternal exception #5') - Line 806
LeanError(message='Lean error:\ninternal exception #5') - Line 808
LeanError(message='Lean error:\ninternal exception #5') - Line 809
LeanError(message='Lean error:\nno goals to be solved') - Line 810
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Inv.inv ∘ Inv.inv\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\ninst✝ : CategoryTheory.ChosenFiniteProducts C\nA : Grp_ C\n⊢ CategoryTheory.CategoryStruct.comp A.inv A.inv = CategoryTheory.CategoryStruct.id A.X") - Line 811
LeanError(message='Lean error:\nno goals to be solved') - Line 812
LeanError(message='Lean error:\ninternal exception #5') - Line 813
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 814
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 815
LeanError(message='Lean error:\n<input>:1:33: expected token') - Line 816
LeanError(message='Lean error:\n<input>:1:25: expected token') - Line 818
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.2723 = ?m.2724\nwith\n  CategoryTheory.CategoryStruct.comp f.hom.hom B.antipode = CategoryTheory.CategoryStruct.comp A.antipode f.hom.hom\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nA B : Hopf_ C\nf : A ⟶ B\n⊢ CategoryTheory.CategoryStruct.comp f.hom.hom B.antipode = CategoryTheory.CategoryStruct.comp A.antipode f.hom.hom") - Line 826
LeanError(message='Lean error:\n<input>:1:25: expected token') - Line 827
LeanError(message='Lean error:\n<input>:1:29: expected token') - Line 828
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.166300\ncase a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nA : Hopf_ C\n| CategoryTheory.CategoryStruct.comp A.X.comul.hom\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight A.antipode A.X.X.X)\n      A.X.X.mul)") - Line 829
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.623416\ncase a.a.a.a.a.a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nA : Hopf_ C\n| CategoryTheory.MonoidalCategoryStruct.whiskerLeft A.X.X.X\n    (CategoryTheory.MonoidalCategoryStruct.whiskerRight\n      (CategoryTheory.CategoryStruct.comp A.X.comul.hom\n        (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerLeft A.X.X.X A.antipode)\n          A.X.X.mul))\n      A.X.X.X)") - Line 830
LeanError(message='Lean error:\n<input>:2:52: expected token') - Line 831
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.256030\ncase a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nA : Hopf_ C\n| CategoryTheory.CategoryStruct.comp A.X.comul.hom\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight A.antipode A.X.X.X)\n      A.X.X.mul)") - Line 832
LeanError(message='Lean error:\nsimp made no progress') - Line 833
LeanError(message='Lean error:\n<input>:2:46: expected token') - Line 834
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.6731 = ?m.6732\nwith\n  CategoryTheory.CategoryStruct.comp A.antipode A.antipode = CategoryTheory.CategoryStruct.id A.X.X.X\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nA : Hopf_ C\ncomm : CategoryTheory.CategoryStruct.comp (β_ A.X.X.X A.X.X.X).hom A.X.X.mul = A.X.X.mul\n⊢ CategoryTheory.CategoryStruct.comp A.antipode A.antipode = CategoryTheory.CategoryStruct.id A.X.X.X") - Line 835
LeanError(message="Lean error:\n<input>:1:11: expected '↦', '=>'") - Line 845
LeanError(message='Lean error:\ninternal exception #5') - Line 846
LeanError(message='Lean error:\ninternal exception #5') - Line 847
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.155467\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\ninst✝ : CategoryTheory.MonoidalCategory C\nM N P : Mon_ C\n| CategoryTheory.CategoryStruct.comp\n    (CategoryTheory.MonoidalCategoryStruct.tensorHom\n      (CategoryTheory.CategoryStruct.comp\n        (CategoryTheory.MonoidalCategoryStruct.leftUnitor (CategoryTheory.MonoidalCategoryStruct.tensorUnit C)).inv\n        (CategoryTheory.MonoidalCategoryStruct.tensorHom M.one N.one))\n      P.one)\n    (CategoryTheory.MonoidalCategoryStruct.associator M.X N.X P.X).hom") - Line 854
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.139591\ncase a.a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nM N : Mon_ C\n| CategoryTheory.MonoidalCategoryStruct.tensorHom\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight M.one M.X) M.mul)\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight N.one N.X) N.mul)") - Line 857
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.142418\ncase a.a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nM N : Mon_ C\n| CategoryTheory.MonoidalCategoryStruct.tensorHom\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerLeft M.X M.one) M.mul)\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerLeft N.X N.one) N.mul)") - Line 858
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.221299\ncase a.a\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.BraidedCategory C\nM N : Mon_ C\n| CategoryTheory.MonoidalCategoryStruct.tensorHom\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight M.mul M.X) M.mul)\n    (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight N.mul N.X) N.mul)") - Line 859
LeanError(message='Lean error:\nsimp made no progress') - Line 860
LeanError(message='Lean error:\n<input>:1:28: expected token') - Line 861
LeanError(message='Lean error:\ninternal exception #5') - Line 862
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 868
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 869
LeanError(message='Lean error:\nsimp made no progress') - Line 878
LeanError(message='Lean error:\nsimp made no progress') - Line 879
LeanError(message='Lean error:\nsimp made no progress') - Line 931
LeanError(message='Lean error:\nsimp made no progress') - Line 932
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Mon_Class X') - Line 964
LeanError(message="Lean error:\n<input>:2:51: expected '⟩'") - Line 966
LeanError(message='Lean error:\n<input>:1:55: expected token') - Line 967
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 1018
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 1019
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 1020
LeanError(message='Lean error:\n<input>:1:17: expected end of input') - Line 1021
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nx✝¹ : Sort u_1\nN : x✝¹\nx✝ : Sort u_2\neqToHom : x✝\nX : sorry\nY : sorry\nf : X ⟶ Y\n⊢ sorry = sorry") - Line 1037
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry\nx✝² : Sort u_1\nNormalMonoidalObject : x✝²\nx✝¹ : Sort u_2\nF : x✝¹\nx✝ : Sort u_3\nnormalizeObj : x✝\nn : sorry\nX : sorry\nY : sorry\nf : X ⟶ Y\n⊢ sorry = sorry") - Line 1045
LeanError(message='Lean error:\n<input>:1:28: unexpected end of input') - Line 1074
LeanError(message='Lean error:\n<input>:2:8: expected token') - Line 1075
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 1084
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 1085
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 1086
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 1087
LeanError(message='Lean error:\n<input>:2:11: expected end of input') - Line 1094
LeanError(message='Lean error:\n<input>:1:27: expected end of input') - Line 1097
LeanError(message='Lean error:\n<input>:1:26: expected end of input') - Line 1098
LeanError(message="Lean error:\nunknown free variable '_fvar.710'") - Line 1099
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Category.{?u.17630, u₁} C\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1102
LeanError(message='Lean error:\nambiguous, possible interpretations \n  ᘁ?m.7618 : ᘁ?m.5379 ⟶ ᘁ?m.5378\n  \n  ᘁX : C') - Line 1103
LeanError(message='Lean error:\nambiguous, possible interpretations \n  ᘁ?m.50456 : ᘁ?m.48217 ⟶ ᘁ?m.48216\n  \n  ᘁY : C') - Line 1104
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Category.{?u.39713, u₁} C\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1105
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Y ≅ Y') - Line 1106
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ≅ X') - Line 1107
LeanError(message='Lean error:\nsimp made no progress') - Line 1123
LeanError(message='Lean error:\nno goals to be solved') - Line 1126
LeanError(message='Lean error:\ninternal exception #5') - Line 1135
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 1136
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.MorphismProperty C') - Line 1137
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP Q : CategoryTheory.ObjectProperty C\nh : P ≤ Q\nX : C\nY : CategoryTheory.isoClosure P X\n⊢ CategoryTheory.isoClosure Q X") - Line 1142
LeanError(message='Lean error:\nsimp made no progress') - Line 1145
LeanError(message='Lean error:\ninternal exception #5') - Line 1150
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1154
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1155
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 1157
LeanError(message='Lean error:\n<input>:1:20: expected token') - Line 1158
LeanError(message='Lean error:\ninternal exception #5') - Line 1162
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.352\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nD : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} D\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.RespectsIso\nF : CategoryTheory.Functor C D\ninst✝ : F.IsEquivalence\n⊢ (P.map F).inverseImage F = P") - Line 1163
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  CategoryTheory.IsIso f\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : X ⟶ Y\nx✝ : Sort u_2\nisomorphisms : x✝\n⊢ sorry ↔ CategoryTheory.IsIso f") - Line 1164
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  CategoryTheory.Mono f\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : X ⟶ Y\nx✝ : Sort u_2\nmonomorphisms : x✝\n⊢ sorry ↔ CategoryTheory.Mono f") - Line 1165
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  CategoryTheory.Epi f\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : X ⟶ Y\nx✝ : Sort u_2\nepimorphisms : x✝\n⊢ sorry ↔ CategoryTheory.Epi f") - Line 1166
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1146') - Line 1170
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1187
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1189
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1233
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝¹ : Sort u_1\nMorphismProperty : x✝¹\nx✝ : Sort u_2\nFunctorsInverting : x✝\nW : sorry\nF₁ : sorry\nF₂ : sorry\nh : sorry = sorry\n⊢ F₁ = F₂") - Line 1247
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\nMorphismProperty : x✝\nP : sorry\n⊢ P ≤ sorry") - Line 1260
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\nretracts : x✝\na✝ b✝ : ?m.2113\nh : a✝ ≤ b✝\n⊢ sorry a✝ ≤ sorry b✝") - Line 1261
LeanError(message='Lean error:\ninternal exception #5') - Line 1262
LeanError(message='Lean error:\nno goals to be solved') - Line 1278
LeanError(message='Lean error:\nno goals to be solved') - Line 1279
LeanError(message='Lean error:\ninternal exception #5') - Line 1282
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\n⊢ sorry ≤ sorry") - Line 1287
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry\n⊢ sorry = sorry") - Line 1288
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nJ : Type w\n⊢ sorry ≤ sorry") - Line 1289
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\ncoproducts : x✝\n⊢ sorry ≤ sorry") - Line 1290
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry\nx✝ : Sort u_1\ncoproducts : x✝\n⊢ sorry = sorry") - Line 1291
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry\n⊢ sorry = sorry") - Line 1293
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.425\nP : sorry\n⊢ sorry") - Line 1295
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.425\nP : sorry\nx✝ : Sort u_1\npullbacks : x✝\na✝ b✝ : ?m.2940\nh : a✝ ≤ b✝\n⊢ sorry a✝ ≤ sorry b✝") - Line 1296
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.425\nP : sorry\n⊢ sorry") - Line 1298
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.425\nP : sorry\nx✝ : Sort u_1\npushouts : x✝\na✝ b✝ : ?m.2940\nh : a✝ ≤ b✝\n⊢ sorry a✝ ≤ sorry b✝") - Line 1299
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.425\nP : sorry\nC : Type u_1\nx✝¹ : Sort u_2\nIsIso : x✝¹\nx✝ : Sort u_3\nisomorphisms : x✝\nh : C → ∃ A B p x x, sorry\n⊢ sorry ≤ sorry") - Line 1300
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nMorphismProperty : ?m.3029\nP : sorry\nC : ?m.3445\nJ : ?m.3446\nα✝ : Type u_1\nW : α✝\n⊢ sorry ↔ sorry ≤ W") - Line 1319
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nMorphismProperty : ?m.3962\nP : sorry\nC : ?m.4378\nJ : ?m.4379\nα✝ : Type u_1\nW : α✝\n⊢ sorry ↔ sorry ≤ W") - Line 1326
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.4385\nP : sorry\nC : ?m.4801\nJ : ?m.4802 C\n⊢ sorry") - Line 1329
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.4849\nP : sorry\nC : ?m.5262\nα✝ : Type u_1\nW : α✝\n⊢ W ≤ sorry") - Line 1333
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.4849\nP : sorry\nC : ?m.5262\nx✝ : Sort u_1\ncoproducts : x✝\nW₁ W₂ : ?m.6508\nh : W₁ ≤ W₂\n⊢ sorry W₁ ≤ sorry W₂") - Line 1335
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.6143\nP✝ : sorry\nC : ?m.6964\nW : sorry\nP : sorry\n⊢ sorry") - Line 1347
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.9990 P Q') - Line 1348
LeanError(message='Lean error:\ninternal exception #5') - Line 1383
LeanError(message='Lean error:\ninternal exception #5') - Line 1396
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.5992\nC : Type ?u.8508\nisomorphisms : ?m.7914\nW : sorry\nJ : Type w\ninst✝³ : LinearOrder J\ninst✝² : SuccOrder J\ninst✝¹ : OrderBot J\ninst✝ : WellFoundedLT J\nX✝ Y✝ : C\nf✝ : sorry\nh✝¹ : sorry\nX Y : C\nf : sorry\nh✝ : sorry\nx✝ : Sort u_1\ntransfiniteCompositionsOfShape : x✝\na✝ b✝ : ?m.12129\nh : a✝ ≤ b✝\n⊢ sorry a✝ ≤ sorry b✝") - Line 1397
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.10525 e') - Line 1398
LeanError(message='Lean error:\nsimp made no progress') - Line 1405
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.10035\nC : Type ?u.12551\nisomorphisms : ?m.11957\nW : sorry\nJ✝ : Type w\ninst✝⁷ : LinearOrder J✝\ninst✝⁶ : SuccOrder J✝\ninst✝⁵ : OrderBot J✝\ninst✝⁴ : WellFoundedLT J✝\nX✝ Y✝ : C\nf✝ : sorry\nh✝ : sorry\nX Y : C\nf : sorry\nh : sorry\nx✝ : Sort u_1\ntransfiniteCompositions : x✝\nJ : Type w\ninst✝³ : LinearOrder J\ninst✝² : SuccOrder J\ninst✝¹ : OrderBot J\ninst✝ : WellFoundedLT J\n⊢ sorry ≤ sorry") - Line 1406
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nMorphismProperty : ?m.10035\nC : Type ?u.12551\nisomorphisms : ?m.11957\nW : sorry\nJ : Type w\ninst✝³ : LinearOrder J\ninst✝² : SuccOrder J\ninst✝¹ : OrderBot J\ninst✝ : WellFoundedLT J\nX✝ Y✝ : C\nf✝ : sorry\nh✝¹ : sorry\nX Y : C\nf : sorry\nh✝ : sorry\nx✝ : Sort u_1\ntransfiniteCompositions : x✝\nW₁ W₂ : ?m.15311\nh : W₁ ≤ W₂\n⊢ sorry W₁ ≤ sorry W₂") - Line 1407
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  ∃ Y x, Nonempty sorry\nC : Type u_1\nx✝¹ : Sort u_2\nisoClosure : x✝¹\nx✝ : Sort u_3\nP : x✝\nX : C\n⊢ sorry ↔ ∃ Y x, Nonempty sorry") - Line 1415
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nP : ?m.305\nα✝ : Type u_1\nQ : α✝\nx✝ : Sort u_2\nisoClosure : x✝\nh : P ≤ Q\n⊢ sorry ≤ sorry") - Line 1418
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1802 P a b c h') - Line 1441
LeanError(message='Lean error:\ninternal exception #5') - Line 1447
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.IsIso f\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1499
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.IsIso g\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1500
LeanError(message='Lean error:\n<input>:1:53: expected end of input') - Line 1559
LeanError(message='Lean error:\n<input>:1:62: expected end of input') - Line 1560
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 1561
LeanError(message='Lean error:\nsimp made no progress') - Line 1564
LeanError(message='Lean error:\nsimp made no progress') - Line 1565
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.1726\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Preadditive C\nJ : Type\ninst✝¹ : Finite J\nf : J → C\ninst✝ : CategoryTheory.Limits.HasCoproduct f\nx✝ : ?m.1726\n⊢ CategoryTheory.Limits.HasBiproduct f") - Line 1612
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1616
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1617
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1618
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 1619
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  P ⟶ ⨁ g') - Line 1620
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ f ⟶ P') - Line 1621
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ f ⟶ ⨁ h') - Line 1622
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ⨁ f ⟶ ⨁ h') - Line 1623
LeanError(message='Lean error:\n<input>:1:29: expected token') - Line 1626
LeanError(message='Lean error:\n<input>:1:31: expected token') - Line 1627
LeanError(message='Lean error:\n<input>:1:31: expected token') - Line 1630
LeanError(message='Lean error:\n<input>:1:33: expected token') - Line 1631
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⊞ Y ⟶ X ⊞ Y') - Line 1634
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  T ⟶ X ⊞ Y') - Line 1635
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⊞ Y ⟶ T') - Line 1636
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  W ⊞ X ⟶ Y ⊞ Z') - Line 1638
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1649
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 1650
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 1651
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.16287\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nC : Type u\ninst✝⁷ : CategoryTheory.Category.{v, u} C\ninst✝⁶ : CategoryTheory.Preadditive C\ninst✝⁵ : CategoryTheory.Limits.HasFiniteBiproducts C\ninst✝⁴ : CategoryTheory.Limits.HasBinaryBiproducts C\nσ τ : Type\ninst✝³ : Finite τ\nS : σ → C\ninst✝² : CategoryTheory.Limits.HasBiproduct S\nT : τ → C\ninst✝¹ : CategoryTheory.Limits.HasBiproduct T\ns : σ\nf : ⨁ S ⟶ ⨁ T\ninst✝ : CategoryTheory.IsIso f\nx✝ : ?m.16287\n⊢ (∀ (t : τ),\n      CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.biproduct.ι S s)\n          (CategoryTheory.CategoryStruct.comp f (CategoryTheory.Limits.biproduct.π T t)) =\n        0) →\n    CategoryTheory.CategoryStruct.id (S s) = 0") - Line 1652
LeanError(message='Lean error:\ninternal exception #5') - Line 1656
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Mono (F.biproductComparison f)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1657
LeanError(message='Lean error:\n<input>:3:42: expected end of input') - Line 1666
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.Mono (F.biprodComparison X Y)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 1667
LeanError(message="Lean error:\nunknown free variable '_fvar.32'") - Line 1681
LeanError(message='Lean error:\ninternal exception #5') - Line 1688
LeanError(message='Lean error:\n<input>:1:34: expected token') - Line 1714
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 1715
LeanError(message='Lean error:\ninternal exception #5') - Line 1717
LeanError(message='Lean error:\ninternal exception #5') - Line 1724
LeanError(message='Lean error:\ninternal exception #5') - Line 1731
LeanError(message='Lean error:\ninternal exception #5') - Line 1732
LeanError(message='Lean error:\ninternal exception #5') - Line 1733
LeanError(message='Lean error:\ninternal exception #5') - Line 1734
LeanError(message='Lean error:\ntype mismatch, term\n  hT\nafter simplification has type\n  HasCardinalLT T κ : Prop\nbut is expected to have type\n  HasCardinalLT sorry κ : Prop') - Line 1751
LeanError(message='Lean error:\ninternal exception #5') - Line 1758
LeanError(message='Lean error:\ninternal exception #5') - Line 1759
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry ()') - Line 1768
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 1771
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nA : Sort ?u.455\nshiftFunctor : ?m.453\na b : A\ne₁ : sorry\nx✝¹ : Sort u_1\nCompatibilityUnit : x✝¹\nx✝ : Sort u_2\nCompatibilityCounit : x✝\nh : sorry\n⊢ sorry") - Line 1780
LeanError(message='Lean error:\ninternal exception #5') - Line 1783
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 1784
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nA : Sort ?u.455\nshiftFunctor : ?m.453\na b : A\ne₁ : sorry\nx✝ : Sort u_1\nCompatibilityUnit : x✝\n⊢ sorry") - Line 1785
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nA : Sort ?u.455\nshiftFunctor : ?m.453\na b : A\ne₁ : sorry\nx✝ : Sort u_1\nCompatibilityUnit : x✝\nh : sorry\nh' : sorry\n⊢ sorry") - Line 1786
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 1812
LeanError(message="Lean error:\ntactic 'subst' failed, did not find equation for eliminating 'h'\nA : Type u_3\na b c : A\nh : sorry\n⊢ sorry = sorry") - Line 1814
LeanError(message='Lean error:\ninternal exception #5') - Line 1827
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.4815\nwith\n  ?m.4771 X sorry =\n    CategoryTheory.CategoryStruct.comp (?m.4773 X sorry) (CategoryTheory.CategoryStruct.comp (?m.4775 X sorry) sorry)\nC : Type u_1\ninst✝ : CategoryTheory.Category.{u_10, u_1} C\nx✝² : Sort u_4\ninduced : x✝²\nx✝¹ : Sort u_5\ne' : x✝¹\nx✝ : Sort u_6\nisoShiftZero : x✝\nX : C\n⊢ ?m.4771 X sorry =\n    CategoryTheory.CategoryStruct.comp (?m.4773 X sorry) (CategoryTheory.CategoryStruct.comp (?m.4775 X sorry) sorry)") - Line 1831
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.8361\nwith\n  ?m.8304 n a a' ha' X sorry =\n    CategoryTheory.CategoryStruct.comp (?m.8306 n a a' ha' X sorry)\n      (CategoryTheory.CategoryStruct.comp (?m.8308 n a a' ha' X sorry)\n        (CategoryTheory.CategoryStruct.comp (?m.8310 n a a' ha' X sorry) (?m.8311 n a a' ha' X sorry)))\nC : Type u_1\ninst✝ : CategoryTheory.Category.{u_11, u_1} C\nM : Type u_4\nx✝¹ : Sort u_5\ninduced : x✝¹\nx✝ : Sort u_6\ne' : x✝\nn a a' : M\nha' : sorry\nX : C\n⊢ ?m.8304 n a a' ha' X sorry =\n    CategoryTheory.CategoryStruct.comp (?m.8306 n a a' ha' X sorry)\n      (CategoryTheory.CategoryStruct.comp (?m.8308 n a a' ha' X sorry)\n        (CategoryTheory.CategoryStruct.comp (?m.8310 n a a' ha' X sorry) (?m.8311 n a a' ha' X sorry)))") - Line 1832
LeanError(message="Lean error:\nunknown free variable '_fvar.1746'") - Line 1833
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.1614\nA : Sort u_4\nC : Type u_1\nx✝ : Sort u_2\nW : x✝\nX Y : C\nf : sorry\na : A\n| sorry") - Line 1834
LeanError(message='Lean error:\ntype mismatch, term\n  hf\nafter simplification has type\n  sorry : Sort u_4\nbut is expected to have type\n  sorry : Sort u_5') - Line 1836
LeanError(message='Lean error:\ninternal exception #5') - Line 1842
LeanError(message='Lean error:\ninternal exception #5') - Line 1844
LeanError(message="Lean error:\ntactic 'subst' failed, did not find equation for eliminating 'h'\nOppositeShift : ?m.1319\nC : ?m.2609\nA : Type ?u.1340\nX : sorry\na b c : A\nh : sorry\nx✝ : Sort u_1\nshiftFunctorAdd' : x✝\n⊢ sorry = sorry") - Line 1845
LeanError(message="Lean error:\ntactic 'subst' failed, did not find equation for eliminating 'h'\nOppositeShift : ?m.1319\nC : ?m.2609\nA : Type ?u.1340\nX : sorry\na b c : A\nh : sorry\nx✝ : Sort u_1\nshiftFunctorAdd' : x✝\n⊢ sorry = sorry") - Line 1846
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  sorry = sorry ≪≫ sorry ≪≫ sorry\nPullbackShift : ?m.6631\nA✝ : Type u_7\nB✝ : Sort u_4\nC : ?m.8821\nX : sorry\na₁ a₂ a₃ : A✝\nh✝ : sorry\nb₁ b₂ b₃ : B✝\nF : ?m.8822 X a₁ a₂ a₃ h✝ b₁ b₂ b₃\nA : Type u_7\nB : Sort u_4\nx✝² : Sort u_1\nφ : x✝²\nx✝¹ : Sort u_2\nisoWhiskerRight : x✝¹\nx✝ : Sort u_3\nisoWhiskerLeft : x✝\na : A\nb : B\nh : b = sorry\n⊢ sorry = sorry ≪≫ sorry ≪≫ sorry") - Line 1854
LeanError(message='Lean error:\ninternal exception #5') - Line 1855
LeanError(message='Lean error:\ninternal exception #5') - Line 1856
LeanError(message='Lean error:\nsimp made no progress') - Line 1857
LeanError(message='Lean error:\ninternal exception #5') - Line 1866
LeanError(message='Lean error:\ninternal exception #5') - Line 1868
LeanError(message='Lean error:\ninternal exception #5') - Line 1870
LeanError(message='Lean error:\ninternal exception #5') - Line 1876
LeanError(message='Lean error:\ninternal exception #5') - Line 1883
LeanError(message='Lean error:\ninternal exception #5') - Line 1884
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.922 i j') - Line 1888
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6304 _fvar.94 a ≅ ?m.6305 _fvar.94 a') - Line 1892
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6304 _fvar.94 a ≅ ?m.6305 _fvar.94 a') - Line 1893
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.35248 _fvar.94 a₁ a₂ a₃ (a₁ + a₂) (a₂ + a₃) (a₁ + a₂ + a₃) ⋯ ⋯ ⋯ ≅\n    ?m.35249 _fvar.94 a₁ a₂ a₃ (a₁ + a₂) (a₂ + a₃) (a₁ + a₂ + a₃) ⋯ ⋯ ⋯') - Line 1894
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.26894 _fvar.94 a₁ a₂ a₃ ≅ ?m.26895 _fvar.94 a₁ a₂ a₃') - Line 1895
LeanError(message="Lean error:\nunknown free variable '_fvar.1302'") - Line 1913
LeanError(message='Lean error:\ninternal exception #5') - Line 1914
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.22796\nwith\n  (CategoryTheory.shiftFunctor (?m.22781 n X) n).map sorry = sorry\nA : Type u_4\nC : Type u_5\ninst✝ : AddMonoid A\nx✝ : Sort u_1\nshiftFunctorCompIsoId : x✝\nn : A\nX : C\n⊢ (CategoryTheory.shiftFunctor (?m.22781 n X) n).map sorry = sorry") - Line 1915
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.22796\nwith\n  (CategoryTheory.shiftFunctor (?m.22781 n X) n).map sorry = sorry\nA : Type u_4\nC : Type u_5\ninst✝ : AddMonoid A\nx✝ : Sort u_1\nshiftFunctorCompIsoId : x✝\nn : A\nX : C\n⊢ (CategoryTheory.shiftFunctor (?m.22781 n X) n).map sorry = sorry") - Line 1916
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.25083\nwith\n  (CategoryTheory.shiftFunctor (?m.25066 n X) sorry).map sorry = sorry\nA : Type u_5\nC : Type u_6\ninst✝ : AddMonoid A\nx✝ : Sort u_1\nshiftFunctorCompIsoId : x✝\nn : A\nX : C\n⊢ (CategoryTheory.shiftFunctor (?m.25066 n X) sorry).map sorry = sorry") - Line 1917
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.25083\nwith\n  (CategoryTheory.shiftFunctor (?m.25066 n X) sorry).map sorry = sorry\nA : Type u_5\nC : Type u_6\ninst✝ : AddMonoid A\nx✝ : Sort u_1\nshiftFunctorCompIsoId : x✝\nn : A\nX : C\n⊢ (CategoryTheory.shiftFunctor (?m.25066 n X) sorry).map sorry = sorry") - Line 1918
LeanError(message='Lean error:\ninternal exception #5') - Line 1924
LeanError(message='Lean error:\ninternal exception #5') - Line 1925
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.21827 A _fvar.17538 _fvar.17540 _fvar.17542 _fvar.17544 _fvar.17546 _fvar.17548 _fvar.19581 _fvar.20274 _fvar.20967\n    i j') - Line 1926
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.30065 A _fvar.25466 _fvar.25468 _fvar.25470 _fvar.25472 _fvar.25474 _fvar.25476 _fvar.27509 _fvar.28202 _fvar.28895\n    i j') - Line 1927
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  ?m.881 a sorry\nis not definitionally equal to the right-hand side\n  ?m.882 a sorry\nA : Sort u_5\nx✝¹ : Sort u_1\nshiftFunctor : x✝¹\nx✝ : Sort u_2\ns : x✝\na : A\n⊢ ?m.881 a sorry = ?m.882 a sorry") - Line 1942
LeanError(message="Lean error:\nunknown free variable '_fvar.1013'") - Line 1949
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1953
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1954
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1956
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1957
LeanError(message="Lean error:\ntactic 'subst' failed, did not find equation for eliminating 'hnm'\nC : Type u_1\nA : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_7, u_1} C\ninst✝ : CategoryTheory.Category.{u_6, u_2} A\nF : CategoryTheory.Functor C A\nM : Type u_8\nn m mn : M\nhnm : sorry\na a' a'' : M\nha' : sorry\nha'' : sorry\n⊢ sorry =\n    CategoryTheory.isoWhiskerRight sorry (F.shift a) ≪≫\n      (CategoryTheory.shiftFunctor C m).associator (CategoryTheory.shiftFunctor C n) (F.shift a) ≪≫\n        CategoryTheory.isoWhiskerLeft (CategoryTheory.shiftFunctor C m) sorry ≪≫ sorry") - Line 1958
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1959
LeanError(message="Lean error:\nunknown free variable '_fvar.1060'") - Line 1960
LeanError(message='Lean error:\ninternal exception #5') - Line 1961
LeanError(message='Lean error:\nsimp made no progress') - Line 1964
LeanError(message="Lean error:\ntactic 'subst' failed, did not find equation for eliminating 'hnm'\nD : Type u_2\ninst✝ : CategoryTheory.Category.{u_8, u_2} D\nA : Type u_11\nn m mn : A\nhnm : sorry\na a' a'' : A\nha' : sorry\nha'' : sorry\n⊢ sorry =\n    CategoryTheory.isoWhiskerLeft (?m.24420 n m mn hnm a a' a'' ha' ha'') sorry ≪≫\n      (CategoryTheory.Functor.associator (?m.24420 n m mn hnm a a' a'' ha' ha'') (CategoryTheory.shiftFunctor D m)\n            (CategoryTheory.shiftFunctor D n)).symm ≪≫\n        CategoryTheory.isoWhiskerRight sorry (CategoryTheory.shiftFunctor D n) ≪≫ sorry") - Line 1969
LeanError(message='Lean error:\ninternal exception #5') - Line 1972
LeanError(message='Lean error:\ninternal exception #5') - Line 1973
LeanError(message='Lean error:\napplication type mismatch\n  U.arrows f\nargument\n  f\nhas type\n  sorry : Sort ?u.8426\nbut is expected to have type\n  ?m.12180 ⟶ X : Type v') - Line 1994
LeanError(message='Lean error:\napplication type mismatch\n  CategoryTheory.Presieve.isSheafFor_subsieve_aux P this\nargument\n  this\nhas type\n  sorry : Sort ?u.7705\nbut is expected to have type\n  CategoryTheory.Sieve.arrows ?m.18913 ≤ ?m.18914 : Prop') - Line 1995
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nx✝ : Sort u_1\nfinestTopology : x✝\nPs : Set (CategoryTheory.Functor Cᵒᵖ (Type v))\nJ : CategoryTheory.GrothendieckTopology C\nhJ : ∀ P ∈ Ps, CategoryTheory.Presieve.IsSheaf J P\nX : C\nS : CategoryTheory.Sieve X\nhS : S ∈ J X\n⊢ S ∈ sorry X") - Line 1997
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id ?m.19014) ?f\nC : Type u\ninst✝⁸ : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\nD : Type w₁\ninst✝⁷ : CategoryTheory.Category.{max v u, w₁} D\nE : Type w₂\ninst✝⁶ : CategoryTheory.Category.{max v u, w₂} E\ninst✝⁵ :\n  ∀ (J : CategoryTheory.Limits.MulticospanShape),\n    CategoryTheory.Limits.HasLimitsOfShape (CategoryTheory.Limits.WalkingMulticospan J) D\ninst✝⁴ :\n  ∀ (J : CategoryTheory.Limits.MulticospanShape),\n    CategoryTheory.Limits.HasLimitsOfShape (CategoryTheory.Limits.WalkingMulticospan J) E\ninst✝³ : ∀ (X : C), CategoryTheory.Limits.HasColimitsOfShape (J.Cover X)ᵒᵖ D\ninst✝² : ∀ (X : C), CategoryTheory.Limits.HasColimitsOfShape (J.Cover X)ᵒᵖ E\nx✝ : Sort u_1\nsheafificationWhiskerLeftIso : x✝\nP : CategoryTheory.Functor Cᵒᵖ D\nF : CategoryTheory.Functor D E\ninst✝¹ : ∀ (F : CategoryTheory.Functor D E) (X : C), CategoryTheory.Limits.PreservesColimitsOfShape (J.Cover X)ᵒᵖ F\ninst✝ :\n  ∀ (F : CategoryTheory.Functor D E) (X : C) (W : J.Cover X) (P : CategoryTheory.Functor Cᵒᵖ D),\n    CategoryTheory.Limits.PreservesLimit (W.index P).multicospan F\n⊢ sorry () = (J.sheafifyCompIso F P).inv") - Line 2004
LeanError(message='Lean error:\nsimp made no progress') - Line 2005
LeanError(message='Lean error:\nsimp made no progress') - Line 2006
LeanError(message='Lean error:\ndsimp made no progress') - Line 2007
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 2008
LeanError(message='Lean error:\nno goals to be solved') - Line 2009
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2012
LeanError(message='Lean error:\n<input>:1:66: expected token') - Line 2013
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.IsLimit.lift ?self ?s)\n      ((CategoryTheory.Limits.Cone.π ?t).app ?j) =\n    (CategoryTheory.Limits.Cone.π ?s).app ?j\nwith\n  CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp (R.map j.hom) (α.app j.right)) = sorry\nC : Type u_4\nD : Type u_5\ninst✝² : CategoryTheory.Category.{u_8, u_4} C\ninst✝¹ : CategoryTheory.Category.{u_9, u_5} D\nG : CategoryTheory.Functor C D\nA : Type w\ninst✝ : CategoryTheory.Category.{w', w} A\nF : CategoryTheory.Functor Cᵒᵖ A\nR : CategoryTheory.Functor Dᵒᵖ A\nα : G.op.comp R ⟶ F\nX : D\nx✝¹ : Sort u_6\nlift : x✝¹\nx✝ : Sort u_7\nliftAux : x✝\nj : CategoryTheory.StructuredArrow (Opposite.op X) G.op\n⊢ CategoryTheory.CategoryStruct.comp sorry (CategoryTheory.CategoryStruct.comp (R.map j.hom) (α.app j.right)) = sorry") - Line 2014
LeanError(message='Lean error:\nno goals to be solved') - Line 2015
LeanError(message='Lean error:\nno goals to be solved') - Line 2016
LeanError(message='Lean error:\nno goals to be solved') - Line 2018
LeanError(message='Lean error:\ninternal exception #5') - Line 2021
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.HasWeakSheafify J A\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2022
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Sort u_1\nx✝¹ : Sort u_2\nPresieve : x✝¹\nx✝ : Sort u_3\nSieve : x✝\nX : C\nS : sorry\nT : sorry\nh : sorry\n⊢ S ≤ T") - Line 2025
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3321 C h f hf') - Line 2029
LeanError(message='Lean error:\nno goals to be solved') - Line 2030
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sInf {J | K ≤ sorry}\nx✝² : Sort u_1\nCoverage : x✝²\nx✝¹ : Sort u_2\ntoGrothendieck : x✝¹\nx✝ : Sort u_3\nofGrothendieck : x✝\nK : sorry\n⊢ sorry = sInf {J | K ≤ sorry}") - Line 2031
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2040
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  sorry\nwith\n  sorry = sorry\nC✝ : Type u_7\nFamilyOfElementsOnObjects : ?m.1004\nJ : ?m.1431\nI✝ : Type u_1\nY : I✝ → C✝\nhY : sorry\nF : C✝ᵒᵖ\nx : sorry\nC : Type u_7\nI : Type u_1\nx✝ : Sort u_2\nfamilyOfElements : x✝\nhx : sorry\nX Z : C\nf : sorry\ni : I\nφ : sorry\n⊢ sorry = sorry") - Line 2041
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC✝ : Sort ?u.1014\nFamilyOfElementsOnObjects : ?m.1004\nJ : ?m.1431\nI : Type u_1\nY : I → C✝\nhY : sorry\nF : C✝ᵒᵖ\nx : sorry\nC : Sort ?u.1014\nx✝ : Sort u_2\nfamilyOfElements : x✝\nhx : sorry\nX : C\n⊢ sorry") - Line 2042
LeanError(message='Lean error:\ninternal exception #5') - Line 2043
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.395 f') - Line 2045
LeanError(message='Lean error:\n<input>:2:36: expected end of input') - Line 2046
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.403 X π') - Line 2047
LeanError(message='Lean error:\n<input>:2:33: expected end of input') - Line 2048
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2049
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f ?a₁ = ?f ?a₂\nwith\n  sorry = sorry\n⊢ sorry = sorry") - Line 2067
LeanError(message='Lean error:\ninternal exception #5') - Line 2068
LeanError(message='Lean error:\ninternal exception #5') - Line 2071
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.13643\nSheaf : ?m.11865\nF : sorry\nG : sorry\nf : F ⟶ G\nJ : ?m.13213\nA : ?m.13214\nx✝ : Sort u_1\nIsLocallySurjective : x✝\n⊢ sorry ↔ sorry") - Line 2083
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 2084
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 2085
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u_4\nγ✝ : Type u_1\nJ : C → γ✝\nx✝¹ : Sort u_2\nToType : x✝¹\nx✝ : Sort u_3\nequalizerSieve : x✝\n⊢ sorry ↔ ∀ ⦃X : Cᵒᵖ⦄ (x : sorry) (y : sorry), ?m.993 ∈ J (Opposite.unop X) → ?m.1262 ∈ J (Opposite.unop X)") - Line 2097
LeanError(message='Lean error:\nno goals to be solved') - Line 2115
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  CategoryTheory.Presheaf.IsLocallySurjective J ((CategoryTheory.sheafToPresheaf J A).map φ)\nis not definitionally equal to the right-hand side\n  sorry\nC : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\nA : Type u'\ninst✝² : CategoryTheory.Category.{v', u'} A\nFA : A → A → Type u_1\nCA : A → Type w'\ninst✝¹ : (X Y : A) → FunLike (FA X Y) (CA X) (CA Y)\ninst✝ : CategoryTheory.ConcreteCategory A FA\nF₁ F₂ : CategoryTheory.Sheaf J A\nφ : F₁ ⟶ F₂\nx✝ : Sort u_2\nIsLocallySurjective : x✝\n⊢ CategoryTheory.Presheaf.IsLocallySurjective J ((CategoryTheory.sheafToPresheaf J A).map φ) ↔ sorry") - Line 2128
LeanError(message='Lean error:\ndsimp made no progress') - Line 2129
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2130
LeanError(message='Lean error:\ninternal exception #5') - Line 2136
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1908 Y') - Line 2145
LeanError(message='Lean error:\ninternal exception #5') - Line 2147
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2868 f S') - Line 2148
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1979 f Z S') - Line 2151
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  S ∈ sorry\nis not definitionally equal to the right-hand side\n  sorry ∈ sorry\nGrothendieckTopology : ?m.425\nJ : sorry\nC : Sort u_1\nx✝¹ : Sort u_2\nOver : x✝¹\nx✝ : Sort u_3\nSieve : x✝\nX : C\nY : sorry\nS : sorry\n⊢ S ∈ sorry ↔ sorry ∈ sorry") - Line 2152
LeanError(message='Lean error:\ntype mismatch, term\n  hS\nafter simplification has type\n  S ∈ sorry : Prop\nbut is expected to have type\n  sorry ∈ sorry : Prop') - Line 2153
LeanError(message='Lean error:\ninternal exception #5') - Line 2169
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = {f}\nf : sorry\nx✝ : Sort u_1\nofArrows : x✝\n⊢ sorry = {f}") - Line 2180
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\ncase refl\nC : Type ?u.2352\nSieve : ?m.2343\nX Y Z : C\nf : sorry\nS : sorry\nR : sorry\nR✝ : sorry\nS✝ : sorry\n⊢ R✝ = S✝") - Line 2188
LeanError(message='Lean error:\nfailed to synthesize\n  Nonempty (sorry ())\n(deterministic) timeout at `typeclass`, maximum number of heartbeats (20000) has been reached\nUse `set_option synthInstance.maxHeartbeats <num>` to set the limit.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2191
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC✝ : Type u_5\nSieve : ?m.7163\nofArrows : ?m.8171\nX✝¹ Y✝¹ Z : C✝\nf✝¹ : sorry\nS : sorry\nR : sorry\nI✝ : Type u_1\nX✝ : C✝\nY✝ : I✝ → C✝\nf✝ : I✝ → sorry\nW : C✝\ng : sorry\nhg : sorry\nC : Type u_5\nI : Type u_2\nY : I → C\nX : C\nf : I → sorry\n⊢ sorry ≤ sorry") - Line 2208
LeanError(message='Lean error:\nno goals to be solved') - Line 2209
LeanError(message='Lean error:\ninternal exception #5') - Line 2214
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.12532 Y g') - Line 2216
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = sorry\nC : Type ?u.11817\nSieve : ?m.10800\nofArrows : ?m.11808\nX✝ Y✝ Z : C\nf✝ : sorry\nS : sorry\nR✝ : sorry\nI : Type u_1\nX : C\nY : I → C\nf : I → sorry\nW : C\ng : sorry\nhg : sorry\nx✝¹ : Sort u_2\nPresieve : x✝¹\nx✝ : Sort u_3\ngenerate : x✝\nR : sorry\n⊢ sorry = sorry") - Line 2231
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC✝ : Type u_2\nSieve : ?m.10800\nofArrows : ?m.11808\nX✝¹ Y✝ Z : C✝\nf✝ : sorry\nS : sorry\nR : sorry\nI : Type u_1\nX✝ : C✝\nY : I → C✝\nf : I → sorry\nW : C✝\ng : sorry\nhg : sorry\nC : Type u_2\nX : C\n⊢ sorry") - Line 2234
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.14702 S e') - Line 2247
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 2251
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 2252
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2256
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 2257
LeanError(message='Lean error:\ninternal exception #5') - Line 2258
LeanError(message='Lean error:\ninternal exception #5') - Line 2264
LeanError(message='Lean error:\ninternal exception #5') - Line 2267
LeanError(message='Lean error:\ninternal exception #5') - Line 2276
LeanError(message='Lean error:\ninternal exception #5') - Line 2279
LeanError(message='Lean error:\nno goals to be solved') - Line 2284
LeanError(message="Lean error:\napplication type mismatch\n  S'.arrows i\nargument\n  i\nhas type\n  sorry : Sort ?u.5927\nbut is expected to have type\n  ?m.6341 V i ⟶ U : Type v") - Line 2285
LeanError(message='Lean error:\ninternal exception #5') - Line 2287
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  G.toPresheaf ⟶ F'") - Line 2289
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  (CategoryTheory.Subpresheaf.sheafify J G).toPresheaf ⟶ F'") - Line 2290
LeanError(message='Lean error:\nno goals to be solved') - Line 2291
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  F ⟶ F'") - Line 2292
LeanError(message='Lean error:\ninternal exception #5') - Line 2296
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = f\nx✝ : Sort u_1\neval : x✝\nS : ?m.39\nhs : ?m.40\nα : ?m.41\nf : ?m.42\n⊢ sorry = f") - Line 2298
LeanError(message='Lean error:\ninternal exception #5') - Line 2299
LeanError(message='Lean error:\nno goals to be solved') - Line 2311
LeanError(message='Lean error:\nno goals to be solved') - Line 2312
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a = ?b\nwith\n  sorry = sorry\nGrothendieckTopology : ?m.833\nJ₁ : sorry\nJ₂ : sorry\nC : Type u_1\nx✝ : Sort u_2\nSieve : x✝\nX Y : C\nf : sorry\nS : sorry\n⊢ sorry = sorry") - Line 2329
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nGrothendieckTopology : ?m.833\nJ₁ : sorry\nJ₂ : sorry\nC : Sort u_1\nx✝ : Sort u_2\nSieve : x✝\nX : C\nS : sorry\n⊢ sorry = ⊤ ↔ S ∈ sorry") - Line 2332
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nGrothendieckTopology : ?m.833\nJ₁ : sorry\nJ₂ : sorry\n⊢ sorry") - Line 2333
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nGrothendieckTopology : ?m.833\nJ₁✝ : sorry\nJ₂✝ : sorry\nJ₁ : sorry\nJ₂ : sorry\nh : sorry\n⊢ sorry") - Line 2334
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 2336
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5636 c pb X S') - Line 2337
LeanError(message="Lean error:\nunknown constant 'diagramCompIso'") - Line 2338
LeanError(message="Lean error:\nunknown constant 'diagramCompIso'") - Line 2339
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (J.plusObj P).comp F ⟶ J.plusObj (P.comp G)') - Line 2340
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  (J.plusObj P).comp F ⟶ J.plusObj (Q.comp F)') - Line 2341
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  P.comp F ⟶ J.plusObj (P.comp F)') - Line 2342
LeanError(message='Lean error:\nno goals to be solved') - Line 2344
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11521 is not an inductive datatype') - Line 2402
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} D\nK : CategoryTheory.GrothendieckTopology D\nG : CategoryTheory.Functor C D\ninst✝ : CategoryTheory.RepresentablyFlat G\n⊢ CategoryTheory.CompatiblePreserving K G") - Line 2403
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nK : CategoryTheory.GrothendieckTopology D\nF : CategoryTheory.Functor C D\ninst✝¹ : F.Full\ninst✝ : F.Faithful\nhF : {c : C} → {d : D} → (d ⟶ F.obj c) → (c' : C) × (F.obj c' ≅ d)\n⊢ CategoryTheory.CompatiblePreserving K F") - Line 2404
LeanError(message='Lean error:\n<input>:8:6: expected end of input') - Line 2405
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6648 ⟶ ?m.6649') - Line 2408
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.Presieve.FamilyOfElements.Compatible ?x\nx✝³ : Sort u_1\nFirstObj : x✝³\nx✝² : Sort u_2\nfirstObjEqFamily : x✝²\nx✝¹ : Sort u_3\nfirstMap : x✝¹\nx✝ : Sort u_4\nsecondMap : x✝\nx : sorry\n⊢ sorry ↔ sorry = sorry") - Line 2409
LeanError(message="Lean error:\nunknown free variable '_fvar.3576'") - Line 2410
LeanError(message='Lean error:\nno goals to be solved') - Line 2411
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.Presieve.FamilyOfElements.Compatible ?x\nx✝³ : Sort u_1\nFirstObj : x✝³\nx✝² : Sort u_2\nfirstObjEqFamily : x✝²\nx✝¹ : Sort u_3\nfirstMap : x✝¹\nx✝ : Sort u_4\nsecondMap : x✝\nx : sorry\n⊢ sorry ↔ sorry = sorry") - Line 2412
LeanError(message="Lean error:\nunknown free variable '_fvar.4201'") - Line 2413
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.12071 ⟶ ?m.12072') - Line 2416
LeanError(message="Lean error:\nunknown free variable '_fvar.7227'") - Line 2418
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.110') - Line 2422
LeanError(message='Lean error:\ninternal exception #5') - Line 2439
LeanError(message='Lean error:\nno goals to be solved') - Line 2441
LeanError(message='Lean error:\napplication type mismatch\n  ⟨?m.5156, hR⟩\nargument\n  hR\nhas type\n  sorry : Sort u_5\nbut is expected to have type\n  ?m.5144 : Prop') - Line 2442
LeanError(message='Lean error:\nno goals to be solved') - Line 2445
LeanError(message='Lean error:\ntype mismatch\n  IsGLB.of_image ?m.6500 ?m.6503\nhas type\n  IsGLB ?m.6501 ?m.6502 : Prop\nbut is expected to have type\n  sorry : Prop') - Line 2446
LeanError(message='Lean error:\ninternal exception #5') - Line 2451
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝ : Sort u_1\nFamilyOfElements : x✝\nx : sorry\nhx : sorry\n⊢ sorry") - Line 2465
LeanError(message='Lean error:\ninternal exception #5') - Line 2466
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = x\nx✝ : Sort u_1\nFamilyOfElements : x✝\nx : sorry\nt : sorry\n⊢ sorry = x") - Line 2467
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 2468
LeanError(message='Lean error:\ninternal exception #5') - Line 2470
LeanError(message='Lean error:\n<input>:1:15: expected token') - Line 2472
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.7338\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nP Q U : CategoryTheory.Functor Cᵒᵖ (Type w)\nX Y : C\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx : sorry\nh : sorry\n⊢ sorry") - Line 2473
LeanError(message='Lean error:\nsimp made no progress') - Line 2474
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.7338\nC✝ : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C✝\nP✝ Q✝ U : CategoryTheory.Functor C✝ᵒᵖ (Type w)\nX Y : C✝\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C✝\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx✝ : sorry\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nP Q : CategoryTheory.Functor Cᵒᵖ (Type w)\nf : P ⟶ Q\nx : sorry\nh : sorry\n⊢ sorry") - Line 2477
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.7338\nC✝ : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C✝\nP✝ Q✝ U : CategoryTheory.Functor C✝ᵒᵖ (Type w)\nX Y : C✝\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C✝\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx✝ : sorry\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nP Q : CategoryTheory.Functor Cᵒᵖ (Type w)\nx : sorry\nt : ?m.9770 _fvar.9617\nf : P ⟶ Q\nh : sorry\n⊢ sorry") - Line 2478
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ntactic 'induction' failed, recursor 'Exists.casesOn' can only eliminate into Prop\nFamilyOfElements : ?m.7338\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nP Q U : CategoryTheory.Functor Cᵒᵖ (Type w)\nX Y : C\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx✝ : sorry\nx : sorry\nh : ∃ t, sorry\n⊢ sorry") - Line 2479
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.7338\nC✝ : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C✝\nP✝ Q U : CategoryTheory.Functor C✝ᵒᵖ (Type w)\nX✝ Y : C✝\nS : CategoryTheory.Sieve X✝\nR✝ : CategoryTheory.Presieve X✝\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C✝\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx✝ : sorry\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nP : CategoryTheory.Functor Cᵒᵖ (Type w)\nX : C\nR : CategoryTheory.Presieve X\nx : sorry\nt : P.obj (Opposite.op X)\nht : sorry\n⊢ sorry") - Line 2481
LeanError(message='Lean error:\napplication type mismatch\n  ⟨sorry, h⟩\nargument\n  h\nhas type\n  S.arrows ?m.16310 : Prop\nbut is expected to have type\n  S.arrows sorry : Prop') - Line 2485
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nFamilyOfElements : ?m.7338\nC✝ : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C✝\nP✝ Q U : CategoryTheory.Functor C✝ᵒᵖ (Type w)\nX Y : C✝\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C✝\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx : sorry\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nx✝¹ : Sort u_1\nIsSheafFor : x✝¹\nx✝ : Sort u_2\nYonedaSheafCondition : x✝\nP : CategoryTheory.Functor Cᵒᵖ (Type v₁)\n⊢ sorry ↔ sorry") - Line 2486
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nFamilyOfElements : ?m.7338\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nP Q U : CategoryTheory.Functor Cᵒᵖ (Type w)\nX Y : C\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx : sorry\nx✝¹ : Sort u_1\nIsSeparatedFor : x✝¹\nx✝ : Sort u_2\nIsSheafFor : x✝\n⊢ (sorry ∧ ∀ (x : sorry), sorry → ∃ t, sorry) ↔ sorry") - Line 2490
LeanError(message='Lean error:\ninternal exception #5') - Line 2491
LeanError(message='Lean error:\ninternal exception #5') - Line 2495
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.7338\nC✝ : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C✝\nP✝ Q U : CategoryTheory.Functor C✝ᵒᵖ (Type w)\nX Y : C✝\nS : CategoryTheory.Sieve X\nR : CategoryTheory.Presieve X\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C✝\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx : sorry\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nx✝ : Sort u_1\nIsSheafFor : x✝\nP : CategoryTheory.Functor Cᵒᵖ (Type w)\n⊢ sorry") - Line 2496
LeanError(message='Lean error:\n<input>:1:40: expected token') - Line 2497
LeanError(message='Lean error:\ninternal exception #5') - Line 2500
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nFamilyOfElements : ?m.25101\nCompatible : ?m.27161\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nP Q U : CategoryTheory.Functor Cᵒᵖ (Type w)\nX✝ Y : C\nS : CategoryTheory.Sieve X✝\nR : CategoryTheory.Presieve X✝\nD : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor D C\nZ : D\nT : CategoryTheory.Presieve (F.obj Z)\nx✝ : sorry\nB : C\nI : Type u_1\nX : I → C\nπ : (i : I) → X i ⟶ B\nx : (i : I) → P.obj (Opposite.op (X i))\nhx : sorry\n⊢ sorry") - Line 2505
LeanError(message='Lean error:\nno goals to be solved') - Line 2506
LeanError(message='Lean error:\nno goals to be solved') - Line 2507
LeanError(message='Lean error:\nsimp made no progress') - Line 2508
LeanError(message='Lean error:\ndsimp made no progress') - Line 2510
LeanError(message='Lean error:\ninternal exception #5') - Line 2520
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.4143') - Line 2523
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  J.diagram P X ⟶ J.diagram P X') - Line 2525
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  J.diagram P X ⟶ J.diagram Q X') - Line 2526
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  J.diagram P X ⟶ J.diagram R X') - Line 2527
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.7868 _fvar.5130 _fvar.6362 P ⟶ ?m.7868 _fvar.5130 _fvar.6362 P') - Line 2528
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ℕ') - Line 2529
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  J.plusObj P ⟶ J.plusObj R') - Line 2530
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  P ⟶ J.plusObj Q') - Line 2531
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.9403') - Line 2532
LeanError(message='Lean error:\nfailed to synthesize\n  ∀ (X : C) (S : J.Cover X), CategoryTheory.Limits.HasMultiequalizer (S.index P)\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2533
LeanError(message="Lean error:\nunknown free variable '_fvar.7615'") - Line 2535
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.Iso.inv ?α) = ?g\n⊢ {C : Type u} →\n    [inst : CategoryTheory.Category.{v, u} C] →\n      (J : CategoryTheory.GrothendieckTopology C) →\n        (D : Type w) →\n          [inst_1 : CategoryTheory.Category.{max v u, w} D] →\n            [inst_2 :\n                ∀ (P : CategoryTheory.Functor Cᵒᵖ D) (X : C) (S : J.Cover X),\n                  CategoryTheory.Limits.HasMultiequalizer (S.index P)] →\n              (P : CategoryTheory.Functor Cᵒᵖ D) → CategoryTheory.Presheaf.IsSheaf J P → Sort u_1") - Line 2538
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.12017\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = sorry\nC : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\nD : Type w\ninst✝¹ : CategoryTheory.Category.{max v u, w} D\ninst✝ :\n  ∀ (P : CategoryTheory.Functor Cᵒᵖ D) (X : C) (S : J.Cover X), CategoryTheory.Limits.HasMultiequalizer (S.index P)\nP Q R : CategoryTheory.Functor Cᵒᵖ D\nη : P ⟶ Q\nγ : Q ⟶ R\nhR : CategoryTheory.Presheaf.IsSheaf J R\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = sorry") - Line 2539
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.6944') - Line 2543
LeanError(message='Lean error:\nno goals to be solved') - Line 2544
LeanError(message='Lean error:\nfailed to synthesize\n  Nonempty (sorry ())\n(deterministic) timeout at `typeclass`, maximum number of heartbeats (20000) has been reached\nUse `set_option synthInstance.maxHeartbeats <num>` to set the limit.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 2550
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2094 T') - Line 2551
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 2555
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2556
LeanError(message='Lean error:\nsimp made no progress') - Line 2560
LeanError(message='Lean error:\nno goals to be solved') - Line 2563
LeanError(message='Lean error:\n<input>:3:45: expected end of input') - Line 2570
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nA : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} A\nJ : CategoryTheory.GrothendieckTopology C\nP : CategoryTheory.Functor Cᵒᵖ A\nh : ∀ (X : C) (S : J.Cover X), Nonempty (CategoryTheory.Limits.IsLimit (S.multifork P))\nE : C\nX : CategoryTheory.Sieve E\nS : X ∈ J E\nhS : CategoryTheory.Presieve.FamilyOfElements sorry X.arrows\nx : hS.Compatible\n⊢ ∃! t, hS.IsAmalgamation t") - Line 2574
LeanError(message='Lean error:\ninternal exception #5') - Line 2575
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?f'\nwith\n  CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry\nx✝² : Sort u_2\nforkMap : x✝²\nx✝¹ : Sort u_3\nfirstMap : x✝¹\nx✝ : Sort u_4\nsecondMap : x✝\n⊢ CategoryTheory.CategoryStruct.comp sorry sorry = CategoryTheory.CategoryStruct.comp sorry sorry") - Line 2576
LeanError(message='Lean error:\n<input>:5:4: expected end of input') - Line 2577
LeanError(message='Lean error:\ninternal exception #5') - Line 2578
LeanError(message='Lean error:\ninternal exception #5') - Line 2579
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Sort ?u.1392\nSieve : ?m.1389\nF G : Cᵒᵖ\nX : C\nS : sorry\nx : sorry\nY : C\n⊢ sorry") - Line 2587
LeanError(message='Lean error:\ninternal exception #5') - Line 2588
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2597
LeanError(message='Lean error:\ninternal exception #5') - Line 2599
LeanError(message='Lean error:\n<input>:2:14: expected end of input') - Line 2600
LeanError(message='Lean error:\nno goals to be solved') - Line 2619
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2621
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2629
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u_1\nD : Type u_2\ninst✝² : CategoryTheory.Category.{u_4, u_1} C\ninst✝¹ : CategoryTheory.Category.{u_5, u_2} D\ninst✝ : CategoryTheory.Preregular C\nF G : CategoryTheory.Functor Cᵒᵖ D\nf : F ⟶ G\n⊢ sorry ↔ ∀ (X : C) (y : sorry), ∃ X' φ, ∃ (x : CategoryTheory.EffectiveEpi φ), ∃ x_1, sorry = sorry") - Line 2630
LeanError(message='Lean error:\ninternal exception #5') - Line 2631
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2635
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 2655
LeanError(message='Lean error:\ninternal exception #5') - Line 2656
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.Sheaf.IsLocallySurjective ?f\n⊢ sorry") - Line 2657
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 2659
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.453 sorry') - Line 2660
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 2662
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.483 sorry') - Line 2663
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  CategoryTheory.Presheaf.IsSheaf (CategoryTheory.extensiveTopology ?m.16994) ?F\nA : Type u_1\nC : Type u_2\nJ : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_1} A\ninst✝² : CategoryTheory.Category.{u_6, u_2} C\ninst✝¹ : CategoryTheory.Category.{u_5, u_3} J\ninst✝ : CategoryTheory.Limits.PreservesFiniteProducts sorry\nG : CategoryTheory.Functor J (CategoryTheory.Sheaf sorry A)\n⊢ CategoryTheory.Presheaf.IsSheaf sorry sorry") - Line 2673
LeanError(message='Lean error:\ninternal exception #5') - Line 2675
LeanError(message='Lean error:\n<input>:4:20: expected end of input') - Line 2681
LeanError(message='Lean error:\n<input>:2:34: expected token') - Line 2691
LeanError(message='Lean error:\nno goals to be solved') - Line 2696
LeanError(message='Lean error:\ninternal exception #5') - Line 2715
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nx✝¹ : Sort u_1\nIsCohomologous : x✝¹\nx✝ y✝ : ?m.477\nγ₁ : ?m.478 x✝ y✝\n⊢ ?m.478 y✝ x✝") - Line 2719
LeanError(message='Lean error:\nno goals to be solved') - Line 2724
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nJ : Type u\ninst✝² : LinearOrder J\ninst✝¹ : SuccOrder J\ninst✝ : OrderBot J\nj : J\ne : sorry\ne' : sorry\nh : sorry = sorry\n⊢ e = e'") - Line 2727
LeanError(message="Lean error:\nunknown free variable '_fvar.1411'") - Line 2728
LeanError(message='Lean error:\ninternal exception #5') - Line 2753
LeanError(message='Lean error:\ninternal exception #5') - Line 2754
LeanError(message='Lean error:\ninternal exception #5') - Line 2757
LeanError(message='Lean error:\nno goals to be solved') - Line 2763
LeanError(message='Lean error:\ntype mismatch\n  le_antisymm ?m.2194 sorry\nhas type\n  ?m.2192 = ?m.2193 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 2773
LeanError(message='Lean error:\ntype mismatch\n  le_antisymm ?m.1790 sorry\nhas type\n  ?m.1788 = ?m.1789 : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 2774
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3722 hij') - Line 2778
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3848 is not an inductive datatype') - Line 2779
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.9342 : Sort ?u.9341\nbut is expected to have type\n  sorry () ≤ sorry () : Prop') - Line 2782
LeanError(message='Lean error:\ninternal exception #5') - Line 2783
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSqStruct : ?m.3729\nMorphismProperty : ?m.3951\nJ : Type w\ninst✝¹ : LinearOrder J\ninst✝ : OrderBot J\nF : J\nc : ?m.4984\np : ?m.4985\nf : ?m.4986\ng : ?m.4987\nj : J\nsq' : sorry\nW : sorry\nx✝ : Sort u_1\ntransfiniteCompositions : x✝\n⊢ sorry ≤ sorry") - Line 2784
LeanError(message='Lean error:\ntype mismatch, term\n  sorry\nafter simplification has type\n  ?m.9056 : Sort ?u.9055\nbut is expected to have type\n  sorry () ≤ sorry () : Prop') - Line 2785
LeanError(message='Lean error:\ninternal exception #5') - Line 2786
LeanError(message="Lean error:\ntactic 'constructor' failed, no applicable constructor found\nC : Type u_1\nX Y : C\nf : sorry\n⊢ sorry ↔ sorry = sorry") - Line 2792
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nC : Type u_1\nX Y : C\nf : sorry\nhf : sorry\n⊢ sorry = Y") - Line 2793
LeanError(message='Lean error:\ninternal exception #5') - Line 2800
LeanError(message='Lean error:\nsimp made no progress') - Line 2806
LeanError(message='Lean error:\nno goals to be solved') - Line 2807
LeanError(message='Lean error:\ninternal exception #5') - Line 2808
LeanError(message='Lean error:\ninternal exception #5') - Line 2809
LeanError(message="Lean error:\nunknown free variable '_fvar.10764'") - Line 2811
LeanError(message="Lean error:\nunknown free variable '_fvar.10764'") - Line 2812
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nJ : Type u_1\nj : J\nx✝ : Sort u_2\narrowMap : x✝\ni : J\nhi : sorry\n⊢ sorry = sorry") - Line 2835
LeanError(message="Lean error:\nunknown free variable '_fvar.635'") - Line 2836
LeanError(message='Lean error:\n<input>:1:9: expected token') - Line 2845
LeanError(message='Lean error:\nsimp made no progress') - Line 2847
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.Subobject.underlying.obj P ⟶ CategoryTheory.Subobject.underlying.obj P') - Line 2849
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.8187 f') - Line 2850
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ CategoryTheory.Subobject.underlying.obj P') - Line 2851
LeanError(message='Lean error:\nno goals to be solved') - Line 2853
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Z ⟶ CategoryTheory.Subobject.underlying.obj Q') - Line 2855
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ CategoryTheory.Subobject.underlying.obj P') - Line 2857
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ CategoryTheory.Subobject.underlying.obj P') - Line 2859
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  X ⟶ CategoryTheory.Subobject.underlying.obj P') - Line 2861
LeanError(message="Lean error:\ntactic 'aesop' failed, failed to prove the goal after exhaustive search.\nInitial goal:\n  C : Type u\n  inst✝³ : CategoryTheory.Category.{v, u} C\n  X Y : C\n  inst✝² : CategoryTheory.Limits.HasZeroMorphisms C\n  f : X ⟶ Y\n  inst✝¹ : CategoryTheory.Limits.HasKernel f\n  X' Y' : C\n  f' : X' ⟶ Y'\n  inst✝ : CategoryTheory.Limits.HasKernel f'\n  sq : CategoryTheory.Arrow.mk f ⟶ CategoryTheory.Arrow.mk f'\n  ⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.kernel.map f f' sq.left sq.right ⋯)\n        (CategoryTheory.Limits.kernelSubobjectIso f').inv =\n      CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.kernelSubobjectIso f).inv\n        (CategoryTheory.Limits.kernelSubobjectMap sq)\nRemaining goals after safe rules:\n  C : Type u\n  inst : CategoryTheory.Category.{v, u} C\n  X Y : C\n  inst_1 : CategoryTheory.Limits.HasZeroMorphisms C\n  f : X ⟶ Y\n  inst_2 : CategoryTheory.Limits.HasKernel f\n  X' Y' : C\n  f' : X' ⟶ Y'\n  inst_3 : CategoryTheory.Limits.HasKernel f'\n  sq : CategoryTheory.Arrow.mk f ⟶ CategoryTheory.Arrow.mk f'\n  ⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.kernel.map f f' sq.left sq.right ⋯)\n        (CategoryTheory.Limits.kernelSubobjectIso f').inv =\n      CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.kernelSubobjectIso f).inv\n        (CategoryTheory.Limits.kernelSubobjectMap sq)") - Line 2878
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  W ⟶ CategoryTheory.Subobject.underlying.obj (CategoryTheory.Limits.imageSubobject f)') - Line 2891
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  W ⟶ CategoryTheory.Subobject.underlying.obj (CategoryTheory.Limits.imageSubobject f)') - Line 2892
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  CategoryTheory.Limits.image (CategoryTheory.Arrow.mk f).hom ⟶\n    CategoryTheory.Subobject.underlying.obj (CategoryTheory.Limits.imageSubobject (CategoryTheory.Arrow.mk g).hom)') - Line 2903
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.33253\nC : Type u\ninst✝⁸ : CategoryTheory.Category.{v, u} C\ninst✝⁷ inst✝⁶ : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝⁵ : CategoryTheory.Limits.HasZeroObject C\ninst✝⁴ inst✝³ : CategoryTheory.Limits.HasEqualizers C\nW X Y Z : C\nf : W ⟶ X\ninst✝² : CategoryTheory.Limits.HasImage f\ng : Y ⟶ Z\ninst✝¹ : CategoryTheory.Limits.HasImage g\nsq : CategoryTheory.Arrow.mk f ⟶ CategoryTheory.Arrow.mk g\ninst✝ : CategoryTheory.Limits.HasImageMap sq\n⊢ CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.imageSubobjectIso (CategoryTheory.Arrow.mk f).hom).hom\n      (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.image.map sq)\n        (CategoryTheory.Limits.imageSubobjectIso g).inv) =\n    CategoryTheory.Limits.imageSubobjectMap sq") - Line 2904
LeanError(message='Lean error:\ndsimp made no progress') - Line 2918
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  WellFoundedGT ?m.1616') - Line 2920
LeanError(message='Lean error:\ninternal exception #5') - Line 2924
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.5609 g w ⟶ ?m.5610 g w') - Line 2952
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2956
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2957
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2958
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2959
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2960
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2961
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2962
LeanError(message="Lean error:\nunknown free variable '_fvar.34'") - Line 2963
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.2419\nwith\n  sorry = CategoryTheory.CategoryStruct.id (?m.2062 X)\nC : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nx✝ : Sort u_1\nofLE : x✝\nB : C\nX : CategoryTheory.Subobject B\n⊢ sorry = CategoryTheory.CategoryStruct.id (?m.2062 X)") - Line 2964
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.2565\nwith\n  sorry = CategoryTheory.CategoryStruct.id (?m.2218 f)\nC : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nx✝ : Sort u_1\nofMkLEMk : x✝\nB A₁ : C\nf : A₁ ⟶ B\ninst✝ : CategoryTheory.Mono f\n⊢ sorry = CategoryTheory.CategoryStruct.id (?m.2218 f)") - Line 2965
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1601 is not an inductive datatype') - Line 2966
LeanError(message='Lean error:\ninternal exception #5') - Line 2970
LeanError(message="Lean error:\ntype mismatch\n  Quotient.sound sorry\nhas type\n  ⟦?m.4321⟧ = ⟦?m.4322⟧ : Prop\nbut is expected to have type\n  sorry = Quotient.mk'' f : Prop") - Line 2973
LeanError(message='Lean error:\ntype mismatch\n  Quotient.sound sorry\nhas type\n  ⟦?m.5056⟧ = ⟦?m.5057⟧ : Prop\nbut is expected to have type\n  sorry = sorry : Prop') - Line 2974
LeanError(message="Lean error:\nunknown free variable '_fvar.2412'") - Line 2976
LeanError(message='Lean error:\nsimp made no progress') - Line 2980
LeanError(message='Lean error:\n<input>:1:38: expected token') - Line 3000
LeanError(message='Lean error:\ninternal exception #5') - Line 3008
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3025
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3026
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  (∀ (a : ?α), ?p (Quotient.mk'' a)) → ∀ (q : Quotient ?s₁), ?p q\nwith\n  ∀ (f₁ : ?m.2750 C g) (f₂ : ?m.2751 C g f₁), sorry = sorry ⊓ sorry\nC : Type u₁\ninst✝¹³ : CategoryTheory.Category.{v₁, u₁} C\ninst✝¹² : CategoryTheory.Limits.HasPullbacks C\ninst✝¹¹ : CategoryTheory.Limits.HasInitial C\ninst✝¹⁰ : CategoryTheory.Limits.InitialMonoClass C\ninst✝⁹ : CategoryTheory.Limits.HasZeroObject C\ninst✝⁸ : CategoryTheory.Limits.HasPullbacks C\ninst✝⁷ : CategoryTheory.Limits.HasImages C\ninst✝⁶ : CategoryTheory.Limits.HasBinaryCoproducts C\ninst✝⁵ : CategoryTheory.Limits.HasPullbacks C\ninst✝⁴ : CategoryTheory.Limits.HasInitial C\ninst✝³ : CategoryTheory.Limits.InitialMonoClass C\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nX Y : C\ng : X ⟶ Y\n⊢ ∀ (f₁ : ?m.2750 C g) (f₂ : ?m.2751 C g f₁), sorry = sorry ⊓ sorry") - Line 3031
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3035
LeanError(message='Lean error:\n<input>:1:20: expected end of input') - Line 3040
LeanError(message='Lean error:\n<input>:1:30: expected end of input') - Line 3042
LeanError(message='Lean error:\n<input>:1:39: expected token') - Line 3043
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  G.toPresheaf ⟶ F') - Line 3055
LeanError(message='Lean error:\n<input>:1:36: expected token') - Line 3062
LeanError(message='Lean error:\ninternal exception #5') - Line 3070
LeanError(message='Lean error:\ninternal exception #5') - Line 3072
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Sort u_4 is not an inductive datatype') - Line 3075
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3940') - Line 3088
LeanError(message='Lean error:\ninternal exception #5') - Line 3100
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.904 x') - Line 3105
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.921 x') - Line 3107
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nC : Sort u_1\nU : Cᵒᵖ\ns : sorry\n⊢ sorry") - Line 3109
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nC : Type u_1\nD : Type u_2\nX : C\nY : D\nf : sorry\n⊢ False") - Line 3124
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nC : Type u_1\nD : Type u_2\nX : C\nY : D\nf : sorry\n⊢ False") - Line 3125
LeanError(message='Lean error:\ninternal exception #5') - Line 3170
LeanError(message='Lean error:\ninternal exception #5') - Line 3171
LeanError(message='Lean error:\ninternal exception #5') - Line 3172
LeanError(message='Lean error:\ninternal exception #5') - Line 3173
LeanError(message='Lean error:\ninternal exception #5') - Line 3174
LeanError(message='Lean error:\ninternal exception #5') - Line 3175
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3176
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3177
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3178
LeanError(message='Lean error:\ninternal exception #5') - Line 3179
LeanError(message='Lean error:\n<input>:2:88: expected token') - Line 3191
LeanError(message='Lean error:\napplication type mismatch\n  CategoryTheory.Pretriangulated.comp_distTriang_mor_zero₁₂ sorry H₂\nargument\n  H₂\nhas type\n  sorry.rotate ∈ CategoryTheory.Pretriangulated.distinguishedTriangles : Prop\nbut is expected to have type\n  sorry ∈ CategoryTheory.Pretriangulated.distinguishedTriangles : Prop') - Line 3193
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7888 is not an inductive datatype') - Line 3194
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.7888 is not an inductive datatype') - Line 3195
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.10763 is not an inductive datatype') - Line 3196
LeanError(message='Lean error:\n<input>:5:24: expected end of input') - Line 3197
LeanError(message='Lean error:\nno goals to be solved') - Line 3198
LeanError(message='Lean error:\nno goals to be solved') - Line 3199
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.10582 is not an inductive datatype') - Line 3200
LeanError(message='Lean error:\n<input>:4:20: expected end of input') - Line 3205
LeanError(message='Lean error:\ninternal exception #5') - Line 3206
LeanError(message='Lean error:\ninternal exception #5') - Line 3207
LeanError(message='Lean error:\n<input>:4:20: expected end of input') - Line 3214
LeanError(message='Lean error:\ninternal exception #5') - Line 3216
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 3223
LeanError(message='Lean error:\nno goals to be solved') - Line 3224
LeanError(message='Lean error:\nno goals to be solved') - Line 3225
LeanError(message='Lean error:\ninternal exception #5') - Line 3226
LeanError(message='Lean error:\ninternal exception #5') - Line 3227
LeanError(message='Lean error:\ninternal exception #5') - Line 3229
LeanError(message='Lean error:\nsimp made no progress') - Line 3231
LeanError(message="Lean error:\nunknown identifier 'hT'") - Line 3235
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3236
LeanError(message='Lean error:\n<input>:1:44: expected token') - Line 3239
LeanError(message='Lean error:\napplication type mismatch\n  CategoryTheory.Pretriangulated.distinguished_cocone_triangle₂ sorry\nargument\n  sorry\nhas type\n  sorry : Type ?u.10296\nbut is expected to have type\n  ?m.7669 ⟶ (CategoryTheory.shiftFunctor ?m.7662 1).obj ?m.7670 : Type ?u.7661') - Line 3240
LeanError(message='Lean error:\n<input>:5:26: unexpected end of input') - Line 3242
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3243
LeanError(message='Lean error:\ninternal exception #5') - Line 3247
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp ?f ?g) ?h =\n    CategoryTheory.CategoryStruct.comp ?f (CategoryTheory.CategoryStruct.comp ?g ?h)\nwith\n  1 + n₀ = n₁\nC : Type u_1\ninst✝⁴ : CategoryTheory.Category.{?u.203, u_1} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.HasShift C ℤ\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\ninst✝ : ∀ (n : ℤ), (CategoryTheory.shiftFunctor C n).Additive\nTriangle : ?m.350\nT : sorry\nn₀ n₁ : ℤ\nh : n₀ + 1 = n₁\nA : Cᵒᵖ\nx : Opposite.unop A ⟶ (CategoryTheory.shiftFunctor C n₀).obj sorry\n⊢ 1 + n₀ = n₁") - Line 3250
LeanError(message='Lean error:\nfailed to synthesize\n  CategoryTheory.HasShift C ℤ\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 3251
LeanError(message='Lean error:\nno goals to be solved') - Line 3268
LeanError(message='Lean error:\nno goals to be solved') - Line 3269
LeanError(message='Lean error:\nno goals to be solved') - Line 3270
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 3275
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2603') - Line 3283
LeanError(message='Lean error:\ninternal exception #5') - Line 3321
LeanError(message='Lean error:\nsimp made no progress') - Line 3322
LeanError(message='Lean error:\ninternal exception #5') - Line 3323
LeanError(message='Lean error:\nsimp made no progress') - Line 3324
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  T ∈ sorry\nis not definitionally equal to the right-hand side\n  sorry ∈ sorry\nC : Type u_4\nx✝¹ : Sort u_1\nTriangle : x✝¹\nx✝ : Sort u_2\ntriangleOpEquivalence : x✝\nT : sorry\n⊢ T ∈ sorry ↔ sorry ∈ sorry") - Line 3327
LeanError(message='Lean error:\ninternal exception #5') - Line 3329
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.937 a n n' hn'") - Line 3333
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  ?m.937 a n n' hn'") - Line 3334
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  ?m.5775.1 sorry m\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nx✝ : Sort u_1\nFP : x✝\nM : Type u_2\ninst✝ : Semigroup M\na : Stream' M\nm : M\nhm : m ∈ sorry\n⊢ ∃ n, ∀ m' ∈ ?m.489, m * m' ∈ ?m.753") - Line 3345
LeanError(message='Lean error:\n<input>:1:97: unterminated comment') - Line 3347
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3350
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3351
LeanError(message='Lean error:\nno goals to be solved') - Line 3352
LeanError(message='Lean error:\nno goals to be solved') - Line 3353
LeanError(message='Lean error:\nsimp made no progress') - Line 3355
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3357
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3362
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3380
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  a = b ∨ a ≠ b → ({ ofColex := sorry } ≤ { ofColex := sorry } ↔ b ≤ a)\nγ✝ : Type u_3\ns : γ✝\nα✝ : Type u_4\na b : α✝\nha : a ∈ s\nhb : b ∈ s\n⊢ { ofColex := sorry } ≤ { ofColex := sorry } ↔ b ≤ a") - Line 3388
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 3396
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3406
LeanError(message='Lean error:\nsimp made no progress') - Line 3416
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  ∀ (x : ?m.982 L p q), x = x\nP : Type u_1\nL : Type u_2\ninst✝² : Membership P L\nx✝ : Sort u_3\nlineCount : x✝\ninst✝¹ : Finite P\ninst✝ : Finite L\np q : P\n⊢ sorry = sorry") - Line 3425
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2258 (Classical.choose ⋯) is not an inductive datatype') - Line 3429
LeanError(message='Lean error:\ninternal exception #5') - Line 3431
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2360 is not an inductive datatype') - Line 3434
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ![a]\nK : Type u_3\ninst✝ : Field K\na b c d : Fin 3 → K\nhac : a ⬝ᵥ c = 0\nhbc : b ⬝ᵥ c = 0\nhad : a ⬝ᵥ d = 0\nhbd : b ⬝ᵥ d = 0\nh : LinearIndependent K ![a, b] ∧ LinearIndependent K ![c, d]\n⊢ False") - Line 3437
LeanError(message="Lean error:\n<input>:1:28: unexpected end of input; expected '?', '_' or '{'") - Line 3438
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3440
LeanError(message='Lean error:\n<input>:1:42: expected end of input') - Line 3444
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  sorry') - Line 3445
LeanError(message='Lean error:\nsimp made no progress') - Line 3447
LeanError(message='Lean error:\nsimp made no progress') - Line 3449
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = Sum.elim v sorry\nLine : ?m.2640\nη✝ : Type u_1\nα✝¹ : Type u_2\nι✝¹ : Type u_3\nκ✝ : Type u_4\nη : Type u_5\nα✝ : Type u_6\nι✝ : Type u_7\nκ : Type u_8\nl✝¹ : sorry\nx✝¹ : η → α✝\ni✝ : ι✝\na✝ : α✝\ne : η\nη' : Type u_9\nα' : Type u_10\nι'✝ : Type u_11\nl✝ : sorry\ni : ι✝\na x✝ : α✝\nα : Sort u_12\nι : Type u_13\nι' : ?m.3617\nv : ι → α\nl : sorry\nx : α\n⊢ sorry = Sum.elim v sorry") - Line 3450
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = Sum.elim sorry v\nLine : ?m.2640\nη✝ : Type u_1\nα✝¹ : Type u_2\nι✝¹ : Type u_3\nκ✝ : Type u_4\nη : Type u_5\nα✝ : Type u_6\nι✝ : Type u_7\nκ : Type u_8\nl✝¹ : sorry\nx✝¹ : η → α✝\ni✝ : ι✝\na✝ : α✝\ne : η\nη' : Type u_9\nα' : Type u_10\nι'✝ : Type u_11\nl✝ : sorry\ni : ι✝\na x✝ : α✝\nα : Sort u_12\nι : ?m.3617\nι' : Type u_13\nl : sorry\nv : ι' → α\nx : α\n⊢ sorry = Sum.elim sorry v") - Line 3451
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?f = ?g\nwith\n  sorry = Sum.elim sorry sorry\nLine : ?m.2640\nη✝ : Type u_1\nα✝¹ : Type u_2\nι✝¹ : Type u_3\nκ✝ : Type u_4\nη : Type u_5\nα✝ : Type u_6\nι✝ : Type u_7\nκ : Type u_8\nl✝¹ : sorry\nx✝¹ : η → α✝\ni✝ : ι✝\na✝ : α✝\ne : η\nη' : Type u_9\nα' : Type u_10\nι'✝ : Type u_11\nl✝ : sorry\ni : ι✝\na x✝ : α✝\nα : Sort u_12\nι : ?m.3684\nι' : ?m.3685\nl : sorry\nl' : sorry\nx : α\n⊢ sorry = Sum.elim sorry sorry") - Line 3452
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3453
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3456
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  Sort u_15\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nLine : ?m.2640\nη✝¹ : Type u_1\nα✝¹ : Type u_2\nι✝ : Type u_3\nκ✝¹ : Type u_4\nη✝ : Type u_5\nα✝ : Type u_6\nι : Type u_7\nκ✝ : Type u_8\nl✝ : sorry\nx✝¹ : η✝ → α✝\ni✝ : ι\na✝ : α✝\ne : η✝\nη' : Type u_9\nα' : Type u_10\nι' : Type u_11\nl : sorry\ni : ι\na x : α✝\nα : Type u_12\nκ : Sort u_13\nη : Type u_14\ninst✝² : Finite α\ninst✝¹ : Finite κ\ninst✝ : Finite η\nx✝ : Sort u_15\n⊢ ∃ ι x, ((ι → α) → κ) → ∃ l, sorry") - Line 3457
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Sort u_15 is not an inductive datatype') - Line 3458
LeanError(message='Lean error:\ntype mismatch\n  LE.le.trans_eq (Finset.card_le_card this)\n    (Eq.mpr\n      (id (congrArg (fun x => x = ?m.11902) (Eq.trans (Nat.card_Ioo 0 k) (congrArg (fun x => x - 1) (tsub_zero k)))))\n      sorry)\nhas type\n  sorry.card ≤ ?m.11902 : Prop\nbut is expected to have type\n  {a ∈ Finset.Ioc 0 k | a ∈ A}.card ≤ k - 1 : Prop') - Line 3493
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3496
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 3497
LeanError(message='Lean error:\n<input>:1:13: expected end of input') - Line 3499
LeanError(message='Lean error:\n<input>:1:14: expected term') - Line 3505
LeanError(message='Lean error:\ntype mismatch, term\n  schnirelmannDensity_finset hA.toFinset\nafter simplification has type\n  schnirelmannDensity ↑hA.toFinset = 0 : Prop\nbut is expected to have type\n  schnirelmannDensity A = 0 : Prop') - Line 3506
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3509
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.324 is not an inductive datatype') - Line 3512
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 3514
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 3516
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3519
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 3521
LeanError(message='Lean error:\nno goals to be solved') - Line 3522
LeanError(message='Lean error:\ninternal exception #5') - Line 3523
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.884') - Line 3524
LeanError(message="Lean error:\nunknown free variable '_fvar.81'") - Line 3525
LeanError(message='Lean error:\nno goals to be solved') - Line 3528
LeanError(message='Lean error:\nno goals to be solved') - Line 3529
LeanError(message='Lean error:\ninternal exception #5') - Line 3532
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3535
LeanError(message="Lean error:\n<input>:9:21: expected ':', ']' or ']''") - Line 3536
LeanError(message='Lean error:\nsimp made no progress') - Line 3537
LeanError(message='Lean error:\ninternal exception #5') - Line 3538
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3540
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3542
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  true : Bool\nbut previous right-hand side is\n  ∑ t, sorry : ?m.21672") - Line 3546
LeanError(message='Lean error:\ninternal exception #5') - Line 3556
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  WellFoundedLT ?m.674') - Line 3568
LeanError(message="Lean error:\n<input>:2:23: expected ')', '↑', '↥', '⇑' or term") - Line 3569
LeanError(message='Lean error:\ninternal exception #5') - Line 3572
LeanError(message='Lean error:\n<input>:1:28: expected end of input') - Line 3581
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3582
LeanError(message="Lean error:\nunknown free variable '_fvar.102'") - Line 3583
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3586
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a * ?b⁻¹\nG : Type u_1\ninst✝¹ : Group G\ninst✝ : DecidableEq G\nA B : Finset G\n⊢ ↑(A * B⁻¹).card / ↑A.card = ↑(A / B).card / ↑A.card") - Line 3595
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?a / ?b⁻¹\nG : Type u_1\ninst✝¹ : Group G\ninst✝ : DecidableEq G\nA B : Finset G\n⊢ ↑(A / B⁻¹).card / ↑A.card = ↑(A * B).card / ↑A.card") - Line 3596
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3597
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3598
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3603
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3604
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3605
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3606
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3607
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3608
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3609
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3610
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?s⁻¹.card\nG : Type u_4\ninst✝¹ : CommGroup G\ninst✝ : DecidableEq G\nA B : Finset G\n⊢ ↑(A⁻¹ * B).card / ↑A⁻¹.card = ↑(A / B).card / ↑A.card") - Line 3611
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?s⁻¹.card\nG : Type u_4\ninst✝¹ : CommGroup G\ninst✝ : DecidableEq G\nA B : Finset G\n⊢ ↑(A⁻¹ / B).card / ↑A⁻¹.card = ↑(A * B).card / ↑A.card") - Line 3612
LeanError(message='Lean error:\n<input>:1:62: expected term') - Line 3613
LeanError(message='Lean error:\n<input>:1:62: expected term') - Line 3614
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 3630
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 3631
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (Multiset.map (fun i => (?m.1485 i)⁻¹) ?m.1484).prod\nα : Type u_2\nβ : Type u_3\ninst✝⁷ : CommMonoid α\ninst✝⁶ : CommMonoid β\ninst✝⁵ : CommMonoid α\ninst✝⁴ : CancelCommMonoid β\ninst✝³ : CancelCommMonoid α\ninst✝² : CancelCommMonoid β\ninst✝¹ : CommMonoid α\ninst✝ : DivisionCommMonoid β\nA : Set α\nB : Set β\nf : α → β\nn : ℕ\nhf : IsMulFreimanHom n A B f\ns t : Multiset α\nhsA : ∀ ⦃x : α⦄, x ∈ s → x ∈ A\nhtA : ∀ ⦃x : α⦄, x ∈ t → x ∈ A\nhs : s.card = n\nht : t.card = n\nh : s.prod = t.prod\n⊢ (Multiset.map (fun i => (f i)⁻¹) s).prod = (Multiset.map (fun i => (f i)⁻¹) t).prod") - Line 3632
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 3636
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 3637
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3659
LeanError(message="Lean error:\ntactic 'subst' failed, invalid equality proof, it is not of the form (x = t) or (t = x)\n  sorry\n𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : Field 𝕜\ninst✝⁴ : LinearOrder 𝕜\ninst✝³ : IsStrictOrderedRing 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs₀ : IsClosed s\nhs₁ : StrictConvex 𝕜 s\na : E\nha : a ∈ frontier s\nb : E\nhb : b ∈ frontier s\nc : E\nhc : c ∈ frontier s\nhabc : a + c = b + b\nx✝ : sorry\n⊢ a = b") - Line 3669
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3670
LeanError(message='Lean error:\nsimp made no progress') - Line 3671
LeanError(message="Lean error:\nunknown free variable '_fvar.24'") - Line 3672
LeanError(message='Lean error:\nsimp made no progress') - Line 3677
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ↑(Finset.image ?m.416 ?m.417)\n⊢ ThreeAPFree sorry") - Line 3687
LeanError(message='Lean error:\ninternal exception #5') - Line 3688
LeanError(message='Lean error:\nno goals to be solved') - Line 3695
LeanError(message='Lean error:\ninternal exception #5') - Line 3697
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3698
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3700
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nN : ℕ\nx✝ : Sort u_1\nnValue : x✝\nhN : 64 ≤ N\n⊢ 3 ≤ sorry") - Line 3703
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nN : ℕ\nx✝ : Sort u_1\ndValue : x✝\nhN₃ : 8 ≤ N\nhN₀ : 0 < ↑N\n⊢ 0 < sorry") - Line 3704
LeanError(message='Lean error:\nno goals to be solved') - Line 3706
LeanError(message='Lean error:\ninternal exception #5') - Line 3707
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3712
LeanError(message='Lean error:\ninternal exception #5') - Line 3720
LeanError(message='Lean error:\ninternal exception #5') - Line 3722
LeanError(message='Lean error:\ntype mismatch\n  Finset.mul_mem_mul ?m.6204 ?m.6618\nhas type\n  ?m.5775 * ?m.5776 ∈ ?m.5773 * ?m.5774 : Prop\nbut is expected to have type\n  b * b ∈ s * s : Prop') - Line 3723
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  IsCancelMul ?m.3533') - Line 3725
LeanError(message='Lean error:\n<input>:2:32: expected end of input') - Line 3728
LeanError(message='Lean error:\nno goals to be solved') - Line 3734
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3735
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.9754 is not an inductive datatype') - Line 3736
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.8939 is not an inductive datatype') - Line 3737
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11286 is not an inductive datatype') - Line 3738
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.12216 is not an inductive datatype') - Line 3739
LeanError(message='Lean error:\n<input>:2:24: expected end of input') - Line 3740
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  mulRightEmbedding ?g\nα : Type u_2\ninst✝¹² : Monoid α\ninst✝¹¹ inst✝¹⁰ : CommMonoid α\ninst✝⁹ : IsCancelMul α\ninst✝⁸ : CommMonoid α\ninst✝⁷ : PartialOrder α\ninst✝⁶ : IsOrderedCancelMonoid α\ninst✝⁵ : CancelCommMonoidWithZero α\ninst✝⁴ : NoZeroDivisors α\ninst✝³ : DecidableEq α\ninst✝² : Monoid α\ninst✝¹ : CommMonoid α\ninst✝ : CancelCommMonoid α\ns : Finset α\n⊢ mulRothNumber (Finset.map sorry s) = mulRothNumber s") - Line 3741
LeanError(message='Lean error:\nsimp made no progress') - Line 3750
LeanError(message='Lean error:\ninternal exception #5') - Line 3758
LeanError(message='Lean error:\ninternal exception #5') - Line 3759
LeanError(message='Lean error:\nsimp made no progress') - Line 3760
LeanError(message='Lean error:\ninternal exception #5') - Line 3761
LeanError(message='Lean error:\nno goals to be solved') - Line 3762
LeanError(message='Lean error:\ninternal exception #5') - Line 3763
LeanError(message='Lean error:\n<input>:5:8: expected term') - Line 3764
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 3765
LeanError(message='Lean error:\n<input>:5:8: expected term') - Line 3766
LeanError(message="Lean error:\n<input>:3:75: expected ',' or 'in'") - Line 3768
LeanError(message="Lean error:\n<input>:1:98: unexpected end of input; expected ']'") - Line 3770
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3774
LeanError(message='Lean error:\ninternal exception #5') - Line 3775
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3777
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.544 = ∅\n⊢ sorry = ∅") - Line 3780
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3781
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3794
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3795
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3796
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 3797
LeanError(message='Lean error:\nsimp made no progress') - Line 3802
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3803
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3804
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_1\ntreesOfNumNodesEq : x✝\nα✝ : Type u_2\nnil : α✝\n⊢ sorry = {nil}") - Line 3808
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝¹\nx✝¹ : Sort u_1\ntreesOfNumNodesEq : x✝¹\nx✝ : Sort u_2\npairwiseNode : x✝\nn : ℕ\n⊢ sorry = (Finset.antidiagonal n).biUnion fun ij => ?m.78") - Line 3809
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3813
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3814
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3820
LeanError(message="Lean error:\n<input>:1:46: expected ',' or 'in'") - Line 3821
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3822
LeanError(message='Lean error:\nsimp made no progress') - Line 3828
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3829
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.726\nn : ℕ\nc : Composition n\n| c.blocks.sum") - Line 3833
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3842
LeanError(message='Lean error:\ndsimp made no progress') - Line 3846
LeanError(message='Lean error:\nsimp made no progress') - Line 3849
LeanError(message='Lean error:\nsimp made no progress') - Line 3855
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 3858
LeanError(message='Lean error:\n<input>:2:29: expected end of input') - Line 3863
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3866
LeanError(message='Lean error:\ninternal exception #5') - Line 3867
LeanError(message='Lean error:\nsimp made no progress') - Line 3868
LeanError(message='Lean error:\nsimp made no progress') - Line 3873
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2197 i h') - Line 3875
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3876
LeanError(message='Lean error:\ninternal exception #5') - Line 3877
LeanError(message='Lean error:\n<input>:2:10: expected end of input') - Line 3878
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 3884
LeanError(message="Lean error:\n<input>:2:12: expected '⟩'") - Line 3885
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 3887
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 3895
LeanError(message='Lean error:\n<input>:1:4: expected end of input') - Line 3896
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3903
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3907
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3910
LeanError(message='Lean error:\nsimp made no progress') - Line 3912
LeanError(message='Lean error:\ninternal exception #5') - Line 3920
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3924
LeanError(message='Lean error:\n<input>:2:63: expected end of input') - Line 3925
LeanError(message='Lean error:\n<input>:1:14: expected end of input') - Line 3929
LeanError(message="Lean error:\n<input>:2:13: expected '⟩'") - Line 3931
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3942
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 3944
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 3945
LeanError(message="Lean error:\n<input>:2:18: expected ']'") - Line 3951
LeanError(message='Lean error:\n<input>:1:21: expected end of input') - Line 3956
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 3958
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 3959
LeanError(message='Lean error:\ninternal exception #5') - Line 3960
LeanError(message='Lean error:\n<input>:1:57: expected end of input') - Line 3963
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 3964
LeanError(message='Lean error:\ninternal exception #5') - Line 3965
LeanError(message='Lean error:\ninternal exception #5') - Line 3966
LeanError(message='Lean error:\ninternal exception #5') - Line 3967
LeanError(message='Lean error:\ninternal exception #5') - Line 3968
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 3970
LeanError(message='Lean error:\ninternal exception #5') - Line 3971
LeanError(message='Lean error:\nsimp made no progress') - Line 3972
LeanError(message='Lean error:\nsimp made no progress') - Line 3973
LeanError(message='Lean error:\nsimp made no progress') - Line 3974
LeanError(message='Lean error:\nsimp made no progress') - Line 3975
LeanError(message='Lean error:\nsimp made no progress') - Line 3976
LeanError(message='Lean error:\ninternal exception #5') - Line 3977
LeanError(message='Lean error:\ninternal exception #5') - Line 3978
LeanError(message='Lean error:\ninternal exception #5') - Line 3979
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 3981
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 3982
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  ?m.534 : Sort u_2') - Line 3986
LeanError(message='Lean error:\ntype mismatch\n  0\nhas type\n  ℕ : Type\nbut is expected to have type\n  ?m.554 : Sort ?u.120') - Line 3988
LeanError(message='Lean error:\ninternal exception #5') - Line 3989
LeanError(message='Lean error:\ninternal exception #5') - Line 4002
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_5\ninst✝¹⁴ inst✝¹³ inst✝¹² inst✝¹¹ : LE α\ninst✝¹⁰ : Preorder α\ninst✝⁹ : DecidableEq α\ninst✝⁸ : Preorder α\ninst✝⁷ : LocallyFiniteOrder α\ninst✝⁶ : Preorder α\ninst✝⁵ : LocallyFiniteOrder α\ninst✝⁴ : Preorder α\ninst✝³ : DecidableRel fun x1 x2 => x1 ⩿ x2\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\nx✝ : Sort u_8\nmuFun : x✝\na b : α\n⊢ sorry = if a = b then 1 else -∑ x ∈ (Finset.Ico a b).attach, sorry") - Line 4003
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_5\ninst✝¹⁴ inst✝¹³ inst✝¹² inst✝¹¹ : LE α\ninst✝¹⁰ : Preorder α\ninst✝⁹ : DecidableEq α\ninst✝⁸ : Preorder α\ninst✝⁷ : LocallyFiniteOrder α\ninst✝⁶ : Preorder α\ninst✝⁵ : LocallyFiniteOrder α\ninst✝⁴ : Preorder α\ninst✝³ : DecidableRel fun x1 x2 => x1 ⩿ x2\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\nx✝ : Sort u_8\nmu : x✝\na b : α\n⊢ sorry = if a = b then 1 else -∑ x ∈ Finset.Ico a b, sorry") - Line 4004
LeanError(message='Lean error:\ninternal exception #5') - Line 4005
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_5\ninst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ : LE α\ninst✝¹³ : Preorder α\ninst✝¹² : DecidableEq α\ninst✝¹¹ : Preorder α\ninst✝¹⁰ : LocallyFiniteOrder α\ninst✝⁹ : Preorder α\ninst✝⁸ : LocallyFiniteOrder α\ninst✝⁷ : Preorder α\ninst✝⁶ : DecidableRel fun x1 x2 => x1 ⩿ x2\ninst✝⁵ : Preorder α\ninst✝⁴ : LocallyFiniteOrder α\ninst✝³ : DecidableEq α\ninst✝² : PartialOrder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\nx✝ : Sort u_8\nmuFun' : x✝\na b : α\n⊢ sorry = if a = b then 1 else -∑ x ∈ (Finset.Ioc a b).attach, sorry") - Line 4007
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_5\ninst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ : LE α\ninst✝¹³ : Preorder α\ninst✝¹² : DecidableEq α\ninst✝¹¹ : Preorder α\ninst✝¹⁰ : LocallyFiniteOrder α\ninst✝⁹ : Preorder α\ninst✝⁸ : LocallyFiniteOrder α\ninst✝⁷ : Preorder α\ninst✝⁶ : DecidableRel fun x1 x2 => x1 ⩿ x2\ninst✝⁵ : Preorder α\ninst✝⁴ : LocallyFiniteOrder α\ninst✝³ : DecidableEq α\ninst✝² : PartialOrder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\nx✝ : Sort u_8\nmu' : x✝\na b : α\n⊢ sorry = if a = b then 1 else -∑ x ∈ Finset.Ioc a b, sorry") - Line 4008
LeanError(message='Lean error:\ninternal exception #5') - Line 4009
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  IncidenceAlgebra 𝕜 α') - Line 4011
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  IncidenceAlgebra 𝕜 α') - Line 4012
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4013
LeanError(message='Lean error:\ninternal exception #5') - Line 4014
LeanError(message='Lean error:\ninternal exception #5') - Line 4015
LeanError(message='Lean error:\ninternal exception #5') - Line 4016
LeanError(message='Lean error:\ninternal exception #5') - Line 4017
LeanError(message="Lean error:\nunknown free variable '_fvar.2565'") - Line 4018
LeanError(message='Lean error:\ninternal exception #5') - Line 4019
LeanError(message='Lean error:\n<input>:1:16: expected end of input') - Line 4020
LeanError(message="Lean error:\nunknown free variable '_fvar.3866'") - Line 4021
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4025
LeanError(message='Lean error:\nno goals to be solved') - Line 4028
LeanError(message="Lean error:\nunknown free variable '_fvar.5949'") - Line 4029
LeanError(message='Lean error:\nrcases tactic failed: b✝ : ?m.428 is not an inductive datatype') - Line 4030
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4034
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4035
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4036
LeanError(message="Lean error:\nunknown free variable '_fvar.271'") - Line 4041
LeanError(message="Lean error:\nunknown free variable '_fvar.271'") - Line 4042
LeanError(message='Lean error:\nsimp made no progress') - Line 4043
LeanError(message='Lean error:\ninternal exception #5') - Line 4045
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.8309 is not an inductive datatype') - Line 4046
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4047
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4050
LeanError(message='Lean error:\n<input>:9:21: expected end of input') - Line 4052
LeanError(message='Lean error:\n<input>:1:56: expected term') - Line 4053
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4054
LeanError(message='Lean error:\n<input>:1:13: expected term') - Line 4055
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.11069 is not an inductive datatype') - Line 4056
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4058
LeanError(message='Lean error:\n<input>:1:18: expected end of input') - Line 4059
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.916\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u\nα : Type v\ninst✝² : DecidableEq α\nt : ι → Finset α\ninst✝¹ : Fintype ι\ninst✝ : Finite ι\nht : ∀ (s : Finset ι), s.card ≤ (s.biUnion t).card\nx✝ : ?m.916\n⊢ ∃ f, Function.Injective f ∧ ∀ (x : ι), f x ∈ t x") - Line 4060
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 4061
LeanError(message='Lean error:\ninternal exception #5') - Line 4063
LeanError(message='Lean error:\ninternal exception #5') - Line 4064
LeanError(message='Lean error:\ninternal exception #5') - Line 4070
LeanError(message='Lean error:\ninternal exception #5') - Line 4071
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  cast ⋯ p\nU : Type u_1\ninst✝ : Quiver U\nu' v' : U\np : sorry\n⊢ sorry = cast ⋯ p") - Line 4072
LeanError(message='Lean error:\ninternal exception #5') - Line 4076
LeanError(message='Lean error:\ninternal exception #5') - Line 4077
LeanError(message='Lean error:\ninternal exception #5') - Line 4080
LeanError(message='Lean error:\ninternal exception #5') - Line 4081
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nU : Type u_1\ninst✝ : Quiver U\nu v : U\np : sorry\nhzero : sorry = 0\n⊢ sorry = sorry") - Line 4082
LeanError(message='Lean error:\ninternal exception #5') - Line 4087
LeanError(message='Lean error:\ninternal exception #5') - Line 4091
LeanError(message='Lean error:\ninternal exception #5') - Line 4092
LeanError(message="Lean error:\n<input>:1:37: unexpected end of input; expected '['") - Line 4093
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4095
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4096
LeanError(message='Lean error:\ninternal exception #5') - Line 4102
LeanError(message='Lean error:\nsimp made no progress') - Line 4108
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4113
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4115
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?F = ?G\nwith\n  sorry ⋙q sorry = φ\nV : Type u_1\ninst✝¹ : Quiver V\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nx✝¹ : Sort u_4\nof : x✝¹\nx✝ : Sort u_5\nlift : x✝\n⊢ sorry ⋙q sorry = φ") - Line 4118
LeanError(message="Lean error:\ntactic 'injection' failed, equality of constructor applications expected\nV : Type u\ninst✝ : Quiver V\nb c d : V\np : sorry\np' : sorry\ne : b ⟶ d\ne' : c ⟶ d\nh : sorry = sorry\n⊢ b = c") - Line 4151
LeanError(message="Lean error:\ntactic 'injection' failed, equality of constructor applications expected\nV : Type u\ninst✝ : Quiver V\nb c d : V\np : sorry\np' : sorry\ne : b ⟶ d\ne' : c ⟶ d\nh : sorry = sorry\n⊢ HEq p p'") - Line 4152
LeanError(message="Lean error:\ntactic 'injection' failed, equality of constructor applications expected\nV : Type u\ninst✝ : Quiver V\nb c d : V\np : sorry\np' : sorry\ne : b ⟶ d\ne' : c ⟶ d\nh : sorry = sorry\n⊢ HEq e e'") - Line 4153
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nV : Type u\ninst✝ : Quiver V\na b : V\np : sorry\nhzero : sorry = 0\n⊢ a = b") - Line 4156
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nnil p : sorry\nhzero : sorry = 0\n⊢ p = nil") - Line 4157
LeanError(message='Lean error:\ntype mismatch\n  { mp := fun h => ?m.1262, mpr := fun a => sorry a }\nhas type\n  ?m.1255 ↔ sorry : Prop\nbut is expected to have type\n  sorry = sorry ↔ p₁ = p₂ ∧ q₁ = q₂ : Prop') - Line 4163
LeanError(message="Lean error:\ntactic 'induction' failed, major premise type is not an inductive type\n  sorry\n\nExplanation: the 'induction' tactic is for constructor-based reasoning as well as for applying custom induction principles with a 'using' clause or a registered '@[induction_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nV : Type u\ninst✝ : Quiver V\na b : V\np : sorry\nn : ℕ\nhp : sorry = n + 1\n⊢ ∃ c f q, ∃ (_ : q.length = n), sorry") - Line 4169
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4179
LeanError(message='Lean error:\nsimp made no progress') - Line 4184
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4186
LeanError(message='Lean error:\n<input>:2:25: expected term') - Line 4192
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4198
LeanError(message='Lean error:\nno goals to be solved') - Line 4199
LeanError(message="Lean error:\ntype mismatch, term\n  Finset.sup'_union ?m.5969 ?m.5970 ?m.5971\nafter simplification has type\n  (?m.5967 ∪ ?m.5968).sup' ⋯ ?m.5971 = Finset.sup' ?m.5967 ?m.5969 ?m.5971 ⊔ Finset.sup' ?m.5968 ?m.5970 ?m.5971 : Prop\nbut is expected to have type\n  (s ∪ t).truncatedSup a = {b ∈ s | a ≤ b}.sup' ⋯ id ⊔ {b ∈ t | a ≤ b}.sup' ⋯ id : Prop") - Line 4200
LeanError(message='Lean error:\ninternal exception #5') - Line 4202
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4209
LeanError(message='Lean error:\nno goals to be solved') - Line 4210
LeanError(message="Lean error:\ntype mismatch, term\n  Finset.inf'_union ?m.8891 ?m.8892 ?m.8893\nafter simplification has type\n  (?m.8889 ∪ ?m.8890).inf' ⋯ ?m.8893 = Finset.inf' ?m.8889 ?m.8891 ?m.8893 ⊓ Finset.inf' ?m.8890 ?m.8892 ?m.8893 : Prop\nbut is expected to have type\n  (s ∪ t).truncatedInf a = {b ∈ s | b ≤ a}.inf' ⋯ id ⊓ {b ∈ t | b ≤ a}.inf' ⋯ id : Prop") - Line 4211
LeanError(message='Lean error:\nsimp made no progress') - Line 4212
LeanError(message='Lean error:\ninternal exception #5') - Line 4213
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  upperClosure (?s ⊻ ?t)\nα : Type u_2\ninst✝⁹ : SemilatticeSup α\ninst✝⁸ : DecidableLE α\ninst✝⁷ : OrderTop α\ninst✝⁶ : DecidableEq α\ninst✝⁵ : SemilatticeInf α\ninst✝⁴ : DecidableLE α\ninst✝³ : BoundedOrder α\ninst✝² : DecidableEq α\ninst✝¹ : DistribLattice α\ninst✝ : DecidableEq α\ns t : Finset α\na : α\n⊢ a ∈ upperClosure (↑s ⊻ ↑t) ↔ a ∈ upperClosure ↑s ∧ a ∈ upperClosure ↑t") - Line 4216
LeanError(message='Lean error:\nsimp made no progress') - Line 4217
LeanError(message='Lean error:\nsimp made no progress') - Line 4218
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4221
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4222
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'supSum' has no definition") - Line 4223
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'infSum' has no definition") - Line 4224
LeanError(message='Lean error:\n<input>:2:17: expected term') - Line 4225
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'infSum' has no definition") - Line 4226
LeanError(message='Lean error:\n<input>:2:20: expected end of input') - Line 4227
LeanError(message='Lean error:\ninternal exception #5') - Line 4228
LeanError(message="Lean error:\ninvalid 'calc' step, left-hand side is\n  true : Bool\nbut previous right-hand side is\n  Function.const Lean.Name () `0.0.0.0.0.0._sorry._@._hyg.70 : Unit") - Line 4229
LeanError(message="Lean error:\n<input>:1:23: unexpected end of input; expected '['") - Line 4230
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 4231
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_1\nβ : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : CommSemiring β\ninst✝¹ : LinearOrder β\ninst✝ : IsStrictOrderedRing β\ns : Finset α\na : α\nx✝ : Sort u_3\ncollapse : x✝\nha : a ∉ s\n𝒜 : Finset (Finset α)\nf : Finset α → β\n⊢ sorry = (if s ∈ 𝒜 then f s else 0) + if insert a s ∈ 𝒜 then f (insert a s) else 0") - Line 4232
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 4233
LeanError(message='Lean error:\ninternal exception #5') - Line 4234
LeanError(message='Lean error:\ninternal exception #5') - Line 4235
LeanError(message='Lean error:\napplication type mismatch\n  HasSubset.Subset.trans hsu\nargument\n  hsu\nhas type\n  s ⊆ u : Prop\nbut is expected to have type\n  ?m.45518 ⊆ ?m.46803 : Prop') - Line 4237
LeanError(message="Lean error:\n'calc' expression has type\n  ?m.31724 = ∑ s ∈ 𝒜, sorry : Prop\nbut is expected to have type\n  ∑ s ∈ sorry, ?m.2116 = ∑ s ∈ 𝒜, ?m.2623 : Prop") - Line 4238
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4239
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  ExistsAddOfLE ?m.46527') - Line 4240
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4241
LeanError(message='Lean error:\napplication type mismatch\n  four_functions_theorem ?m.84686 ?m.84827 ?m.84968 ?m.85109 ?m.85163 ?m.85182 ?m.85201 h₄\nargument\n  h₄\nhas type\n  (0 : ℕ) ≤ f₄ : Prop\nbut is expected to have type\n  (0 : ?m.86357 → ?m.84530) ≤ ?m.85109 : Prop') - Line 4243
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4244
LeanError(message='Lean error:\napplication type mismatch\n  four_functions_theorem_univ sorry sorry ?m.70318 ?m.70319 ?m.72938 ?m.75352 ?m.76646\n    (mul_nonneg hμ₀ (mul_nonneg sorry sorry))\nargument\n  mul_nonneg hμ₀ (mul_nonneg sorry sorry)\nhas type\n  (0 : ℕ) ≤ μ * (?m.78880 * ?m.78881) : Prop\nbut is expected to have type\n  (0 : ?m.67856 → ?m.67857) ≤ ?m.70319 : Prop') - Line 4245
LeanError(message='Lean error:\n<input>:1:29: expected term') - Line 4246
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4251
LeanError(message='Lean error:\ninternal exception #5') - Line 4253
LeanError(message="Lean error:\n<input>:1:13: expected ']'") - Line 4254
LeanError(message='Lean error:\ninternal exception #5') - Line 4255
LeanError(message='Lean error:\n<input>:2:32: expected end of input') - Line 4263
LeanError(message='Lean error:\nno goals to be solved') - Line 4265
LeanError(message='Lean error:\napplication type mismatch\n  h (insert b s) ?m.651 (Finset.subset_insert ?m.655 ?m.656)\nargument\n  Finset.subset_insert ?m.655 ?m.656\nhas type\n  ?m.656 ⊆ insert ?m.655 ?m.656 : Prop\nbut is expected to have type\n  s ⊆ insert b s : Prop') - Line 4266
LeanError(message='Lean error:\napplication type mismatch\n  @Set.Intersecting.not_compl_mem α inst✝ (Membership.mem s.val) hs\nargument\n  hs\nhas type\n  @Set.Intersecting α inst✝² inst✝¹ ↑s : Prop\nbut is expected to have type\n  @Set.Intersecting α Lattice.toSemilatticeInf HeytingAlgebra.toOrderBot (Membership.mem s.val) : Prop') - Line 4272
LeanError(message='Lean error:\napplication type mismatch\n  Set.Intersecting.disjoint_map_compl hs\nargument\n  hs\nhas type\n  @Set.Intersecting α inst✝³ inst✝² ↑s : Prop\nbut is expected to have type\n  @Set.Intersecting α Lattice.toSemilatticeInf HeytingAlgebra.toOrderBot ↑s : Prop') - Line 4273
LeanError(message='Lean error:\napplication type mismatch\n  Set.Intersecting.card_le ht\nargument\n  ht\nhas type\n  @Set.Intersecting α inst✝⁴ inst✝³ ↑t : Prop\nbut is expected to have type\n  @Set.Intersecting α Lattice.toSemilatticeInf HeytingAlgebra.toOrderBot ↑t : Prop') - Line 4274
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  Fintype ?m.1032') - Line 4275
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 4276
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Finset (Finset (?m.3017 hs))') - Line 4277
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  Sort u_4\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nα : Type u_1\ninst✝¹ : LinearOrder α\nx✝¹ : Sort u_2\nIsInitSeg : x✝¹\ninst✝ : Finite α\nh₁ : sorry\nx✝ : Sort u_4\n⊢ x✝") - Line 4278
LeanError(message='Lean error:\nsimp made no progress') - Line 4279
LeanError(message='Lean error:\nrcases tactic failed: h₁ : sorry is not an inductive datatype') - Line 4280
LeanError(message='Lean error:\n<input>:1:12: expected term') - Line 4281
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'UV.compression'.") - Line 4282
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4283
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.951 is not an inductive datatype') - Line 4284
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4285
LeanError(message='Lean error:\n<input>:3:8: expected term') - Line 4286
LeanError(message="Lean error:\n<input>:1:19: expected ')', '↑', '↥', '⇑' or term") - Line 4287
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4288
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4289
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4294
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4296
LeanError(message='Lean error:\nno goals to be solved') - Line 4297
LeanError(message='Lean error:\n<input>:3:21: expected term') - Line 4298
LeanError(message='Lean error:\ntype mismatch\n  Nat.cast_pos.mpr (Nat.choose_pos (Nat.div_le_self ?m.4892 ?m.4893))\nhas type\n  0 < ↑(Nat.choose ?m.4892 (?m.4892 / ?m.4893)) : Prop\nbut is expected to have type\n  0 < sorry : Prop') - Line 4299
LeanError(message='Lean error:\nsimp made no progress') - Line 4306
LeanError(message='Lean error:\nsimp made no progress') - Line 4307
LeanError(message='Lean error:\ninternal exception #5') - Line 4308
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4309
LeanError(message='Lean error:\n<input>:2:39: expected rcasesPat') - Line 4310
LeanError(message='Lean error:\ninternal exception #5') - Line 4311
LeanError(message='Lean error:\ninternal exception #5') - Line 4312
LeanError(message='Lean error:\ninternal exception #5') - Line 4313
LeanError(message='Lean error:\ninternal exception #5') - Line 4314
LeanError(message='Lean error:\nsimp made no progress') - Line 4320
LeanError(message='Lean error:\nsimp made no progress') - Line 4321
LeanError(message='Lean error:\ninternal exception #5') - Line 4322
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4323
LeanError(message='Lean error:\n<input>:2:33: expected rcasesPat') - Line 4324
LeanError(message='Lean error:\ninternal exception #5') - Line 4325
LeanError(message='Lean error:\ninternal exception #5') - Line 4326
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4328
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 4339
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 4341
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 4342
LeanError(message='Lean error:\nsimp made no progress') - Line 4347
LeanError(message="Lean error:\nunknown identifier 'memberSubfamily'") - Line 4349
LeanError(message='Lean error:\nsimp made no progress') - Line 4351
LeanError(message='Lean error:\nsimp made no progress') - Line 4353
LeanError(message='Lean error:\nsimp made no progress') - Line 4358
LeanError(message='Lean error:\nsimp made no progress') - Line 4359
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4360
LeanError(message='Lean error:\nsimp made no progress') - Line 4362
LeanError(message='Lean error:\nsimp made no progress') - Line 4363
LeanError(message='Lean error:\nsimp made no progress') - Line 4364
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4365
LeanError(message='Lean error:\nno goals to be solved') - Line 4366
LeanError(message='Lean error:\ninternal exception #5') - Line 4367
LeanError(message='Lean error:\ninternal exception #5') - Line 4368
LeanError(message="Lean error:\n<input>:1:102: expected '⟩'") - Line 4370
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'compress' has no definition") - Line 4371
LeanError(message='Lean error:\nno goals to be solved') - Line 4372
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'compress' has no definition") - Line 4373
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.3965 ∈ ↑?m.3966\nx✝ : Sort u_2\ncompress : x✝\nγ✝ : Type u_3\ns : γ✝\na : ?m.3925\nha : a ∈ {a | a ∈ s ∧ ?m.1736 ∉ s}\nb : ?m.3925\nhb : b ∈ {a | a ∈ s ∧ ?m.1736 ∉ s}\nhab : sorry a = sorry b\n⊢ a = b") - Line 4374
LeanError(message='Lean error:\nsimp made no progress') - Line 4375
LeanError(message="Lean error:\nunknown identifier 'compression'") - Line 4377
LeanError(message='Lean error:\ninternal exception #5') - Line 4380
LeanError(message='Lean error:\ninternal exception #5') - Line 4381
LeanError(message='Lean error:\ninternal exception #5') - Line 4382
LeanError(message='Lean error:\ninternal exception #5') - Line 4383
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'compress' has no definition") - Line 4389
LeanError(message='Lean error:\nsimp made no progress') - Line 4390
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4391
LeanError(message='Lean error:\n<input>:1:19: expected term') - Line 4392
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.844') - Line 4394
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.844') - Line 4395
LeanError(message='Lean error:\nsimp made no progress') - Line 4403
LeanError(message='Lean error:\ninternal exception #5') - Line 4404
LeanError(message='Lean error:\nsimp made no progress') - Line 4405
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 4406
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1767') - Line 4407
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'SimpleGraph.degree'.") - Line 4409
LeanError(message='Lean error:\ninternal exception #5') - Line 4410
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 4411
LeanError(message="Lean error:\ntactic 'unfold' failed, local variable 'cycleGraph_EulerianCircuit' has no definition") - Line 4415
LeanError(message='Lean error:\ninternal exception #5') - Line 4422
LeanError(message='Lean error:\ninternal exception #5') - Line 4423
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.549\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nV : Type u\nW : Type v\nG : SimpleGraph V\nF : SimpleGraph W\ninst✝¹ : Finite V\ninst✝ : Finite W\nh : (G' : G.Subgraph) → G'.verts.Finite → G'.coe →g F\nx✝ : ?m.549\n⊢ Nonempty (G →g F)") - Line 4426
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  SimpleGraph (?m.1302 × ?m.1303)') - Line 4446
LeanError(message='Lean error:\nsimp made no progress') - Line 4449
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.1563') - Line 4452
LeanError(message='Lean error:\nsimp made no progress') - Line 4461
LeanError(message='Lean error:\ninternal exception #5') - Line 4465
LeanError(message='Lean error:\n<input>:1:6: expected end of input') - Line 4466
LeanError(message='Lean error:\nsimp made no progress') - Line 4467
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4468
LeanError(message='Lean error:\ninternal exception #5') - Line 4469
LeanError(message='Lean error:\ninternal exception #5') - Line 4487
LeanError(message='Lean error:\ninternal exception #5') - Line 4488
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Dist.dist'.") - Line 4489
LeanError(message='Lean error:\ninternal exception #5') - Line 4490
LeanError(message="Lean error:\nfailed to rewrite using equation theorems for 'Dist.dist'.") - Line 4493
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4494
LeanError(message='Lean error:\ninternal exception #5') - Line 4500
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4502
LeanError(message='Lean error:\ninternal exception #5') - Line 4503
LeanError(message='Lean error:\ninternal exception #5') - Line 4508
LeanError(message='Lean error:\nsimp made no progress') - Line 4509
LeanError(message='Lean error:\nno goals to be solved') - Line 4510
LeanError(message="Lean error:\ntactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information") - Line 4514
LeanError(message='Lean error:\nsimp made no progress') - Line 4515
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4517
LeanError(message='Lean error:\nsimp made no progress') - Line 4518
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4520
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4522
LeanError(message='Lean error:\ninternal exception #5') - Line 4523
LeanError(message='Lean error:\nrcases tactic failed: x✝ : Prop is not an inductive datatype') - Line 4524
LeanError(message='Lean error:\ninternal exception #5') - Line 4525
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4526
LeanError(message='Lean error:\nsimp made no progress') - Line 4527
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3010 is not an inductive datatype') - Line 4528
LeanError(message='Lean error:\ninternal exception #5') - Line 4529
LeanError(message='Lean error:\nambiguous term, use fully qualified name, possible interpretations [@Matrix.compl, @compl]') - Line 4531
LeanError(message='Lean error:\n<input>:1:9: expected end of input') - Line 4533
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2728 is not an inductive datatype') - Line 4535
LeanError(message='Lean error:\nsimp made no progress') - Line 4540
LeanError(message='Lean error:\n<input>:1:19: expected end of input') - Line 4545
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4552
LeanError(message='Lean error:\nsimp made no progress') - Line 4553
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.5210 is not an inductive datatype') - Line 4554
LeanError(message='Lean error:\ninternal exception #5') - Line 4577
LeanError(message='Lean error:\nno goals to be solved') - Line 4597
LeanError(message='Lean error:\ninternal exception #5') - Line 4598
LeanError(message='Lean error:\nsimp made no progress') - Line 4599
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2128') - Line 4604
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2138') - Line 4605
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.3275 V _fvar.588 _fvar.606 _fvar.659 _fvar.662 _fvar.666 s t') - Line 4606
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2915 V _fvar.588 _fvar.606 _fvar.659 _fvar.662 _fvar.666 s t') - Line 4607
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.2305 V _fvar.588 _fvar.606 _fvar.659 _fvar.662 _fvar.666 s t') - Line 4608
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nV : Type u\ninst✝ : DecidableEq V\nx✝ : Sort u_2\nfromEdgeSet : x✝\ns t : Set (Sym2 V)\nh : s ⊆ t\n⊢ sorry ≤ sorry") - Line 4609
LeanError(message='Lean error:\ninternal exception #5') - Line 4617
LeanError(message='Lean error:\nsimp made no progress') - Line 4622
LeanError(message='Lean error:\nsimp made no progress') - Line 4623
LeanError(message='Lean error:\ninternal exception #5') - Line 4624
LeanError(message='Lean error:\ninternal exception #5') - Line 4625
LeanError(message='Lean error:\nsimp made no progress') - Line 4626
LeanError(message='Lean error:\nsimp made no progress') - Line 4636
LeanError(message='Lean error:\ninternal exception #5') - Line 4637
LeanError(message='Lean error:\ninternal exception #5') - Line 4642
LeanError(message='Lean error:\ninternal exception #5') - Line 4643
LeanError(message='Lean error:\ninternal exception #5') - Line 4646
LeanError(message='Lean error:\ninternal exception #5') - Line 4647
LeanError(message='Lean error:\ninternal exception #5') - Line 4650
LeanError(message='Lean error:\ninternal exception #5') - Line 4651
LeanError(message='Lean error:\ninternal exception #5') - Line 4652
LeanError(message='Lean error:\ninternal exception #5') - Line 4653
LeanError(message='Lean error:\ninternal exception #5') - Line 4654
LeanError(message='Lean error:\ninternal exception #5') - Line 4655
LeanError(message='Lean error:\ninternal exception #5') - Line 4656
LeanError(message='Lean error:\ninternal exception #5') - Line 4657
LeanError(message='Lean error:\ninternal exception #5') - Line 4658
LeanError(message='Lean error:\ninternal exception #5') - Line 4659
LeanError(message='Lean error:\nsimp made no progress') - Line 4660
LeanError(message='Lean error:\ninternal exception #5') - Line 4661
LeanError(message='Lean error:\ninternal exception #5') - Line 4662
LeanError(message='Lean error:\ninternal exception #5') - Line 4665
LeanError(message='Lean error:\n<input>:2:32: expected end of input') - Line 4677
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4679
LeanError(message='Lean error:\n<input>:1:29: expected end of input') - Line 4680
LeanError(message='Lean error:\nsimp made no progress') - Line 4688
LeanError(message='Lean error:\ninternal exception #5') - Line 4690
LeanError(message='Lean error:\ninternal exception #5') - Line 4691
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 4692
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 4693
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4694
LeanError(message='Lean error:\ninternal exception #5') - Line 4695
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4696
LeanError(message='Lean error:\nsimp made no progress') - Line 4697
LeanError(message='Lean error:\n<input>:2:30: expected end of input') - Line 4698
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4699
LeanError(message='Lean error:\ninternal exception #5') - Line 4700
LeanError(message='Lean error:\nsimp made no progress') - Line 4703
LeanError(message='Lean error:\ninternal exception #5') - Line 4705
LeanError(message='Lean error:\ninternal exception #5') - Line 4706
LeanError(message='Lean error:\ninternal exception #5') - Line 4707
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 4710
LeanError(message='Lean error:\ninternal exception #5') - Line 4711
LeanError(message='Lean error:\ninternal exception #5') - Line 4712
LeanError(message='Lean error:\n<input>:2:39: expected end of input') - Line 4715
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.410 is not an inductive datatype') - Line 4716
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4718
LeanError(message='Lean error:\napplication type mismatch\n  SimpleGraph.IsClique.sdiff_of_sup_edge hc.isClique\nargument\n  hc.isClique\nhas type\n  (G ⊔ sorry).IsClique ↑t : Prop\nbut is expected to have type\n  (G ⊔ SimpleGraph.edge x ?m.4539).IsClique ↑t : Prop') - Line 4719
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nm n : ℕ\nhmn : m ≤ n\nhG : sorry\n⊢ sorry") - Line 4722
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4729
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4730
LeanError(message='Lean error:\nsimp made no progress') - Line 4732
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4738
LeanError(message='Lean error:\n<input>:2:9: expected end of input') - Line 4739
LeanError(message='Lean error:\ninternal exception #5') - Line 4740
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.1442\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nα : Type u_3\nG : SimpleGraph α\ninst✝ : Finite α\nt : Finset α\ntc : G.IsClique ↑t\nx✝ : ?m.1442\n⊢ t.card ≤ G.cliqueNum") - Line 4741
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.1216\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nα : Type u_3\nG : SimpleGraph α\ninst✝ : Finite α\nx✝ : ?m.1216\n⊢ ∃ s, G.IsNClique G.cliqueNum s") - Line 4742
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1279 is not an inductive datatype') - Line 4746
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.1229 is not an inductive datatype') - Line 4747
LeanError(message='Lean error:\nsimp made no progress') - Line 4750
LeanError(message='Lean error:\ninternal exception #5') - Line 4756
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4757
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.3082\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\ninst✝¹ : DecidableRel sorry\nα : Type u_4\nG : SimpleGraph α\ninst✝ : Finite α\nt : Finset α\ntc : G.IsIndepSet ↑t\nx✝ : ?m.3082\n⊢ t.card ≤ G.indepNum") - Line 4761
LeanError(message='Lean error:\nsimp made no progress') - Line 4762
LeanError(message='Lean error:\ninternal exception #5') - Line 4764
LeanError(message='Lean error:\ninternal exception #5') - Line 4765
LeanError(message='Lean error:\nsimp made no progress') - Line 4766
LeanError(message='Lean error:\nsimp made no progress') - Line 4773
LeanError(message='Lean error:\ninternal exception #5') - Line 4780
LeanError(message='Lean error:\ninternal exception #5') - Line 4781
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4786
LeanError(message='Lean error:\ninternal exception #5') - Line 4790
LeanError(message='Lean error:\ninternal exception #5') - Line 4791
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4792
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  ?m.582\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nV : Type u\nG : SimpleGraph V\ninst✝ : Finite V\nx✝ : ?m.582\n⊢ G.Colorable G.chromaticNumber.toNat") - Line 4793
LeanError(message='Lean error:\ninternal exception #5') - Line 4794
LeanError(message='Lean error:\ninternal exception #5') - Line 4795
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?m.1733 ≤ sInf ?m.1732\nwith\n  0 < sInf {n' | G.Colorable n'}\nV : Type u\nG : SimpleGraph V\ninst✝ : Nonempty V\nn : ℕ\nhc : G.Colorable n\n⊢ 0 < sInf {n' | G.Colorable n'}") - Line 4797
LeanError(message='Lean error:\ninternal exception #5') - Line 4798
LeanError(message='Lean error:\ninternal exception #5') - Line 4800
LeanError(message='Lean error:\nsimp made no progress') - Line 4804
LeanError(message='Lean error:\ninternal exception #5') - Line 4805
LeanError(message='Lean error:\ninternal exception #5') - Line 4806
LeanError(message='Lean error:\ninternal exception #5') - Line 4808
LeanError(message='Lean error:\ninternal exception #5') - Line 4809
LeanError(message='Lean error:\ninternal exception #5') - Line 4810
LeanError(message='Lean error:\ninternal exception #5') - Line 4811
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4813
LeanError(message='Lean error:\nsimp made no progress') - Line 4814
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.513 is not an inductive datatype') - Line 4815
LeanError(message="Lean error:\ntactic 'cases' failed, major premise type is not an inductive type\n  Sort u_7\n\nExplanation: the 'cases' tactic is for constructor-based reasoning as well as for applying custom cases principles with a 'using' clause or a registered '@[cases_eliminator]' theorem. The above type neither is an inductive type nor has a registered theorem.\nι : Type u_3\nV : ι → Type u_4\nx✝¹ : Sort u_5\ncompleteMultipartiteGraph : x✝¹\nf : (i : ι) → V i\nhc : sorry\nx✝ : Sort u_7\n⊢ x✝") - Line 4818
LeanError(message='Lean error:\ninternal exception #5') - Line 4820
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 4821
LeanError(message='Lean error:\ninternal exception #5') - Line 4824
LeanError(message='Lean error:\ninternal exception #5') - Line 4825
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 4829
LeanError(message='Lean error:\ninternal exception #5') - Line 4848
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nV : Type u_1\nW : Type u_2\nG : SimpleGraph V\nH : SimpleGraph W\ninst✝⁴ : Fintype V\ninst✝³ : Fintype W\ninst✝² : Fintype V\nx✝ : Sort u_7\ncopyCount : x✝\ninst✝¹ : Fintype { f // Function.Injective ⇑f }\ninst✝ : DecidableEq G.Subgraph\n⊢ sorry = (Finset.image sorry Finset.univ).card") - Line 4856
LeanError(message='Lean error:\ninternal exception #5') - Line 4857
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.352 is not an inductive datatype') - Line 4858
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 4859
LeanError(message='Lean error:\n<input>:1:15: expected end of input') - Line 4860
LeanError(message='Lean error:\nsimp made no progress') - Line 4861
LeanError(message='Lean error:\ninternal exception #5') - Line 4863
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4864
LeanError(message='Lean error:\n<input>:1:8: expected end of input') - Line 4866
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nV : Type u_1\nG : SimpleGraph V\nd✝ : G.Dart\np✝ : V × V\n⊢ d✝.edge = Sym2.mk p✝ ↔ d✝.toProd = p✝ ∨ d✝.toProd = p✝.swap") - Line 4880
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nV : Type u_1\nG : SimpleGraph V\nd✝ : G.Dart\nu✝ v✝ : V\n⊢ d✝.edge = s(u✝, v✝) ↔ d✝.toProd.1 = u✝ ∧ d✝.toProd.2 = v✝ ∨ d✝.toProd.1 = v✝ ∧ d✝.toProd.2 = u✝") - Line 4881
LeanError(message='Lean error:\nsimp made no progress') - Line 4883
LeanError(message='Lean error:\nsimp made no progress') - Line 4885
LeanError(message='Lean error:\n(deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)') - Line 4887
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4888
LeanError(message='Lean error:\ninternal exception #5') - Line 4890
LeanError(message='Lean error:\nsimp made no progress') - Line 4891
LeanError(message='Lean error:\nsimp made no progress') - Line 4892
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.3482 is not an inductive datatype') - Line 4893
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.782 is not an inductive datatype') - Line 4894
LeanError(message='Lean error:\ninternal exception #5') - Line 4900
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4903
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_4\nβ : Type u_5\nx✝ : Sort u_6\ninteredges : x✝\nγ✝¹ : Type u_7\ns : γ✝¹\nγ✝ : Type u_8\nt : γ✝\nx : α × β\n⊢ x ∈ sorry ↔ x.1 ∈ s ∧ x.2 ∈ t ∧ sorry") - Line 4905
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nβ : Type u_5\nx✝ : Sort u_6\ninteredges : x✝\nt : Finset β\n⊢ sorry = ∅") - Line 4907
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4909
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Disjoint ?m.6351 ?m.6352\nα : Type u_4\nβ : Type u_5\nx✝ : Sort u_6\ninteredges : x✝\ns s' : Finset α\nhs✝ : Disjoint s s'\nhs : ∀ ⦃a : α⦄, a ∈ s → a ∉ s'\nt : Finset β\n⊢ Disjoint sorry sorry") - Line 4910
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  Disjoint ?m.6347 ?m.6348\nα : Type u_4\nβ : Type u_5\nx✝ : Sort u_6\ninteredges : x✝\ns : Finset α\nt t' : Finset β\nht✝ : Disjoint t t'\nht : ∀ ⦃a : β⦄, a ∈ t → a ∉ t'\n⊢ Disjoint sorry sorry") - Line 4911
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 4912
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Finset (?m.4209 _fvar.1570 s t f)') - Line 4913
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Finset (?m.4209 _fvar.1570 s t f)') - Line 4914
LeanError(message="Lean error:\nunknown free variable '_fvar.1570'") - Line 4915
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  @OfNat.ofNat ?G₀ 0 Zero.toOfNat0 ≤ ?a / ?b\nwith\n  @OfNat.ofNat ℕ 0 (instOfNatNat 0) ≤ sorry\nα : Type u_4\nβ : Type u_5\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\nx✝ : Sort u_6\nedgeDensity : x✝\ns : Finset α\nt : Finset β\n⊢ 0 ≤ sorry") - Line 4917
LeanError(message="Lean error:\ntactic 'apply' failed, failed to unify\n  ?a / ?b ≤ 1\nwith\n  sorry ≤ 1\nα : Type u_4\nβ : Type u_5\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\nx✝ : Sort u_6\nedgeDensity : x✝\ns : Finset α\nt : Finset β\n⊢ sorry ≤ 1") - Line 4918
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_6\nedgeDensity : x✝\nhs : sorry\nht : sorry\n⊢ sorry + sorry = 1") - Line 4919
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nβ : Type u_5\ninst✝ : DecidableEq β\nx✝ : Sort u_6\nedgeDensity : x✝\nt : Finset β\n⊢ sorry = 0") - Line 4920
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_4\ninst✝ : DecidableEq α\nx✝ : Sort u_6\nedgeDensity : x✝\ns : Finset α\n⊢ sorry = 0") - Line 4921
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4922
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 4923
LeanError(message='Lean error:\ninternal exception #5') - Line 4924
LeanError(message="Lean error:\n<input>:1:12: expected ')', '_', '↑', '↥', '⇑', identifier or term") - Line 4925
LeanError(message='Lean error:\ntype mismatch\n  LE.le.trans (sub_le_sub_left sorry ?m.3006) ?m.3322\nhas type\n  @HSub.hSub ?m.3312 ?m.3312 ?m.3312 (@instHSub ?m.3312 SubNegMonoid.toSub) ?m.3006 ?m.3004 ≤ ?m.3316 : Prop\nbut is expected to have type\n  @HSub.hSub ℕ ℕ ℕ (@instHSub ℕ instSubNat) sorry sorry ≤ 1 - s₂.card / s₁.card * (t₂.card / t₁.card) : Prop') - Line 4926
LeanError(message='Lean error:\ntype mismatch\n  abs_sub_le_iff.mpr ⟨sorry, ?m.5754⟩\nhas type\n  |@HSub.hSub ?m.4389 ?m.4389 ?m.4389 (@instHSub ?m.4389 SubNegMonoid.toSub) ?m.4893 ?m.4894| ≤ ?m.4895 : Prop\nbut is expected to have type\n  |@HSub.hSub ℕ ℕ ℕ (@instHSub ℕ instSubNat) sorry sorry| ≤ 1 - s₂.card / s₁.card * (t₂.card / t₁.card) : Prop') - Line 4927
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 4928
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  2 * ?n\ncase inr\n𝕜 : Type u_1\ninst✝² : Field 𝕜\ninst✝¹ : LinearOrder 𝕜\ninst✝ : IsStrictOrderedRing 𝕜\nα✝¹ : Type u_6\ns₂ s₁ : Finset α✝¹\nα✝ : Type u_7\nt₂ t₁ : Finset α✝\nδ : ℕ\nx✝ : Sort u_8\nedgeDensity : x✝\nhs : s₂ ⊆ s₁\nht : t₂ ⊆ t₁\nhδ : 0 ≤ δ\nhscard : (1 - δ) * s₁.card ≤ s₂.card\nhtcard : (1 - δ) * t₁.card ≤ t₂.card\nh : 1 ≤ δ\n⊢ |sorry - sorry| ≤ 2 * ↑δ") - Line 4929
LeanError(message='Lean error:\ninternal exception #5') - Line 4930
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_4\ninst✝¹ : DecidableEq α\nr : α → α → Prop\ninst✝ : DecidableRel r\nx✝ : Sort u_6\nedgeDensity : x✝\nhr : Symmetric r\ns t : Finset α\n⊢ sorry = sorry") - Line 4933
LeanError(message='Lean error:\ninternal exception #5') - Line 4946
LeanError(message='Lean error:\ninternal exception #5') - Line 4947
LeanError(message='Lean error:\ninternal exception #5') - Line 4959
LeanError(message='Lean error:\ntype mismatch, term\n  subsingleton_iff.mp inst✝ u\nafter simplification has type\n  ∀ (y : α), u = y : Prop\nbut is expected to have type\n  G.eccent u = 0 : Prop') - Line 4960
LeanError(message='Lean error:\nsimp made no progress') - Line 4961
LeanError(message='Lean error:\ninternal exception #5') - Line 4963
LeanError(message='Lean error:\ninternal exception #5') - Line 4965
LeanError(message='Lean error:\ninternal exception #5') - Line 4966
LeanError(message='Lean error:\ninternal exception #5') - Line 4968
LeanError(message='Lean error:\nsimp made no progress') - Line 4973
LeanError(message='Lean error:\ninternal exception #5') - Line 4974
LeanError(message='Lean error:\nsimp made no progress') - Line 4976
LeanError(message='Lean error:\ninternal exception #5') - Line 4980
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 4981
LeanError(message='Lean error:\nsimp made no progress') - Line 4991
LeanError(message='Lean error:\ninternal exception #5') - Line 4992
LeanError(message='Lean error:\ninternal exception #5') - Line 4993
LeanError(message='Lean error:\ninternal exception #5') - Line 4997
LeanError(message='Lean error:\ninternal exception #5') - Line 5003
LeanError(message='Lean error:\ninternal exception #5') - Line 5004
LeanError(message='Lean error:\ninternal exception #5') - Line 5005
LeanError(message='Lean error:\ninternal exception #5') - Line 5007
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2188 is not an inductive datatype') - Line 5011
LeanError(message='Lean error:\nsimp made no progress') - Line 5012
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.2313 is not an inductive datatype') - Line 5014
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5016
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5018
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5019
LeanError(message='Lean error:\nsimp made no progress') - Line 5021
LeanError(message='Lean error:\ninternal exception #5') - Line 5024
LeanError(message='Lean error:\ninternal exception #5') - Line 5025
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5026
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5027
LeanError(message='Lean error:\nsimp made no progress') - Line 5035
LeanError(message='Lean error:\nsimp made no progress') - Line 5038
LeanError(message='Lean error:\ninternal exception #5') - Line 5039
LeanError(message='Lean error:\ninternal exception #5') - Line 5040
LeanError(message='Lean error:\nsimp made no progress') - Line 5044
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5045
LeanError(message='Lean error:\nsimp made no progress') - Line 5053
LeanError(message='Lean error:\ninternal exception #5') - Line 5054
LeanError(message='Lean error:\ninternal exception #5') - Line 5055
LeanError(message='Lean error:\ninternal exception #5') - Line 5056
LeanError(message='Lean error:\ninternal exception #5') - Line 5057
LeanError(message='Lean error:\nfailed to synthesize\n  DecidableEq V\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5058
LeanError(message='Lean error:\nsimp made no progress') - Line 5061
LeanError(message='Lean error:\ninternal exception #5') - Line 5063
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5064
LeanError(message='Lean error:\nsimp made no progress') - Line 5065
LeanError(message='Lean error:\nsimp made no progress') - Line 5066
LeanError(message='Lean error:\nsimp made no progress') - Line 5067
LeanError(message='Lean error:\ninternal exception #5') - Line 5070
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6533 is not an inductive datatype') - Line 5071
LeanError(message='Lean error:\ninternal exception #5') - Line 5072
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5073
LeanError(message='Lean error:\nsimp made no progress') - Line 5074
LeanError(message='Lean error:\ninternal exception #5') - Line 5075
LeanError(message='Lean error:\n<input>:2:19: expected end of input') - Line 5076
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5077
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.6459 is not an inductive datatype') - Line 5078
LeanError(message='Lean error:\ninternal exception #5') - Line 5079
LeanError(message='Lean error:\nsimp made no progress') - Line 5080
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5082
LeanError(message='Lean error:\nsimp made no progress') - Line 5083
LeanError(message='Lean error:\nsimp made no progress') - Line 5084
LeanError(message='Lean error:\nsimp made no progress') - Line 5085
LeanError(message='Lean error:\ninternal exception #5') - Line 5087
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5097
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5098
LeanError(message='Lean error:\nsimp made no progress') - Line 5109
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5112
LeanError(message='Lean error:\nsimp made no progress') - Line 5115
LeanError(message='Lean error:\nsimp made no progress') - Line 5116
LeanError(message="Lean error:\n<input>:2:42: expected ')', ',' or ':'") - Line 5117
LeanError(message="Lean error:\nunknown identifier 'degree'") - Line 5118
LeanError(message='Lean error:\ninternal exception #5') - Line 5121
LeanError(message='Lean error:\nsimp made no progress') - Line 5122
LeanError(message='Lean error:\ninternal exception #5') - Line 5123
LeanError(message='Lean error:\nsimp made no progress') - Line 5124
LeanError(message='Lean error:\nsimp made no progress') - Line 5125
LeanError(message='Lean error:\nsimp made no progress') - Line 5127
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5814\nV : Type u_1\ninst✝² : Fintype V\nG : SimpleGraph V\ninst✝¹ : DecidableRel G.Adj\ninst✝ : DecidableEq V\nx : V → ℝ\n⊢ (Matrix.toLin' (SimpleGraph.lapMatrix ℝ G)) x = 0 ↔ ∀ (i j : V), G.Adj i j → x i = x j") - Line 5128
LeanError(message='Lean error:\ninternal exception #5') - Line 5129
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.5818\nV : Type u_1\ninst✝² : Fintype V\nG : SimpleGraph V\ninst✝¹ : DecidableRel G.Adj\ninst✝ : DecidableEq V\nx : V → ℝ\n⊢ (Matrix.toLin' (SimpleGraph.lapMatrix ℝ G)) x = 0 ↔ ∀ (i j : V), G.Reachable i j → x i = x j") - Line 5130
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.56508 ∈ LinearMap.ker ?m.56507\nV : Type u_1\ninst✝³ : Fintype V\ninst✝² : DecidableEq V\nx✝¹ : Sort u_3\nlapMatrix : x✝¹\nx✝ : Sort u_4\nconnectedComponentMk : x✝\nG : SimpleGraph V\ninst✝¹ : DecidableRel G.Adj\ninst✝ : DecidableEq G.ConnectedComponent\nc : G.ConnectedComponent\n⊢ (fun i => if sorry = c then 1 else 0) ∈ LinearMap.ker (Matrix.toLin' sorry)") - Line 5131
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  LinearIndependent ?m.7361 ?m.7363\nx✝ : Sort u_3\nlapMatrix_ker_basis_aux : x✝\n⊢ LinearIndependent ℝ sorry") - Line 5132
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?x ∈ Submodule.span ?R (Set.range ?v)\nx✝ : Sort u_3\nlapMatrix_ker_basis_aux : x✝\nx : ?m.10422\na✝ : x ∈ ⊤\n⊢ x ∈ Submodule.span ℝ (Set.range sorry)") - Line 5133
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5134
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5138
LeanError(message='Lean error:\ninternal exception #5') - Line 5139
LeanError(message='Lean error:\ninternal exception #5') - Line 5146
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 5147
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 5148
LeanError(message="Lean error:\nunknown free variable '_fvar.69'") - Line 5157
LeanError(message='Lean error:\ndsimp made no progress') - Line 5159
LeanError(message="Lean error:\ntactic 'assumption' failed\nα✝ : Type u_4\nβ✝ : Type u_5\nφ : α✝ → β✝\ns : Set α✝\nx✝ : Sort u_6\ninduceHom : x✝\nhi : Set.InjOn φ s\n⊢ Function.Injective (sorry ())") - Line 5167
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.281') - Line 5171
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  ?m.281') - Line 5172
LeanError(message='Lean error:\ninternal exception #5') - Line 5173
LeanError(message="Lean error:\nunknown free variable '_fvar.1705'") - Line 5180
LeanError(message='Lean error:\nrcases tactic failed: b✝ : ?m.1723 h is not an inductive datatype') - Line 5181
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV✝ : Type u_1\nW : Type u_2\nG✝ G'✝ : SimpleGraph V✝\nM : sorry\nM' : sorry\nu v w : V✝\nV : Type u_1\nG G' : SimpleGraph V\nh : sorry\nhGG' : G ≤ G'\n⊢ sorry") - Line 5183
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV : Type u_1\nW : Type u_2\nG G' : SimpleGraph V\nM : sorry\nM' : sorry\nu v w : V\nι : Type u_3\nf : ι → sorry\nhM : ι → sorry\nhd : Pairwise fun i j => Disjoint sorry sorry\n⊢ sorry") - Line 5189
LeanError(message='Lean error:\ninternal exception #5') - Line 5190
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV : Type u_1\nW : Type u_2\nG G'✝ : SimpleGraph V\nM✝ : sorry\nM' : sorry\nu v w : V\nG' : sorry\nM : sorry\nhM : sorry\n⊢ sorry") - Line 5191
LeanError(message='Lean error:\nsimp made no progress') - Line 5192
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV✝ : Type u_1\nW✝ : Type u_2\nG✝ G'✝ : SimpleGraph V✝\nM✝ : sorry\nM' : sorry\nu v w : V✝\nV : Type u_1\nW : Type u_2\nG : SimpleGraph V\nG' : SimpleGraph W\nM : sorry\nf : G →g G'\nhf : Function.Injective ⇑f\nhM : sorry\n⊢ sorry") - Line 5193
LeanError(message='Lean error:\n<input>:2:7: expected end of input') - Line 5194
LeanError(message='Lean error:\nno goals to be solved') - Line 5195
LeanError(message='Lean error:\ntype mismatch\n  { mp := ?m.1736, mpr := fun hm => ?m.1742 }\nhas type\n  ?m.1734 ↔ ?m.1735 : Prop\nbut is expected to have type\n  sorry ↔ ∀ (v : ?m.1715), ∃! w, sorry : Prop') - Line 5198
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5200
LeanError(message='Lean error:\nsimp made no progress') - Line 5203
LeanError(message='Lean error:\n<input>:1:66: unterminated comment') - Line 5205
LeanError(message='Lean error:\ntype mismatch\n  Classical.byContradiction fun h => ?m.5877\nhas type\n  ?m.5873 : Prop\nbut is expected to have type\n  ∃ w ∈ u, ∃ v, sorry ∧ v ∈ ?m.1923 : Prop') - Line 5206
LeanError(message='Lean error:\nsimp made no progress') - Line 5207
LeanError(message='Lean error:\nsimp made no progress') - Line 5208
LeanError(message='Lean error:\ninternal exception #5') - Line 5211
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV : Type u_1\nW : Type u_2\nG G' : SimpleGraph V\nM✝ : sorry\nM'✝ : sorry\nu v w : V\nM : sorry\nM' : sorry\nhM : sorry\nhM' : sorry\n⊢ sorry") - Line 5215
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5216
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5217
LeanError(message="Lean error:\n<input>:1:27: expected ','") - Line 5219
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5220
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV✝ : Type u_1\nW : Type u_2\nG✝ G'✝ : SimpleGraph V✝\nM : sorry\nM' : sorry\nu v w : V✝\nV : Type u_1\nG G' : SimpleGraph V\nhalt : G.IsAlternating G'\nH : sorry\n⊢ sorry") - Line 5222
LeanError(message='Lean error:\nsimp made no progress') - Line 5223
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.2146\nSubgraph : ?m.865\nV✝ : Type u_1\nW : Type u_2\nG G'✝ : SimpleGraph V✝\nM : sorry\nM' : sorry\nu v w : V✝\nV : Type u_1\nG' : SimpleGraph V\nhM : sorry\nhG' : G'.IsAlternating sorry\nhG'cyc : G'.IsCycles\n⊢ sorry") - Line 5224
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nSubgraph : ?m.865\nV : Type u_1\nW : Type u_2\nG G' : SimpleGraph V\nM : sorry\nM'✝ : sorry\nu v w : V\nM' : sorry\nhM : sorry\nhM' : sorry\n⊢ sorry") - Line 5225
LeanError(message='Lean error:\nsimp made no progress') - Line 5228
LeanError(message='Lean error:\nsimp made no progress') - Line 5229
LeanError(message='Lean error:\nsimp made no progress') - Line 5230
LeanError(message='Lean error:\nsimp made no progress') - Line 5231
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 5232
LeanError(message='Lean error:\n<input>:1:5: expected end of input') - Line 5233
LeanError(message='Lean error:\nsimp made no progress') - Line 5234
LeanError(message='Lean error:\nsimp made no progress') - Line 5235
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5236
LeanError(message='Lean error:\ninternal exception #5') - Line 5237
LeanError(message='Lean error:\n<input>:1:41: expected end of input') - Line 5238
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nV : Type u_1\ns t : V\ninst✝¹ : DecidableEq V\ninst✝ : Fintype V\nx✝ : Sort u_3\nedge : x✝\nv w : V\n⊢ sorry ↔ (v = s ∧ w = t ∨ v = t ∧ w = s) ∧ v ≠ w") - Line 5239
LeanError(message='Lean error:\nsimp made no progress') - Line 5240
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝ : Sort u_3\nedge : x✝\n⊢ sorry = sorry") - Line 5241
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5242
LeanError(message='Lean error:\ninternal exception #5') - Line 5243
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nV : Type u_1\ns t : V\ninst✝¹ : DecidableEq V\ninst✝ : Fintype V\nx✝ : Sort u_3\nedge : x✝\nh : s ≠ t\n⊢ sorry = {s(s, t)}") - Line 5245
LeanError(message='Lean error:\ninternal exception #5') - Line 5246
LeanError(message='Lean error:\ninternal exception #5') - Line 5249
LeanError(message='Lean error:\ninternal exception #5') - Line 5250
LeanError(message='Lean error:\ninternal exception #5') - Line 5251
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5256
LeanError(message='Lean error:\ninternal exception #5') - Line 5274
LeanError(message='Lean error:\ninternal exception #5') - Line 5275
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5278
LeanError(message='Lean error:\n<input>:1:45: expected end of input') - Line 5285
LeanError(message='Lean error:\nsimp made no progress') - Line 5286
LeanError(message='Lean error:\ninternal exception #5') - Line 5287
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5291
LeanError(message='Lean error:\ninternal exception #5') - Line 5292
LeanError(message='Lean error:\nsimp made no progress') - Line 5293
LeanError(message='Lean error:\nsimp made no progress') - Line 5294
LeanError(message='Lean error:\n<input>:2:6: expected end of input') - Line 5295
LeanError(message='Lean error:\ninternal exception #5') - Line 5296
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5298
LeanError(message='Lean error:\ninternal exception #5') - Line 5299
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5300
LeanError(message='Lean error:\nsimp made no progress') - Line 5302
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5303
LeanError(message='Lean error:\ninternal exception #5') - Line 5304
LeanError(message='Lean error:\nsimp made no progress') - Line 5305
LeanError(message='Lean error:\n<input>:2:62: expected end of input') - Line 5308
LeanError(message='Lean error:\ninternal exception #5') - Line 5313
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5314
LeanError(message='Lean error:\ninternal exception #5') - Line 5315
LeanError(message='Lean error:\ninternal exception #5') - Line 5316
LeanError(message='Lean error:\ninternal exception #5') - Line 5317
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5328
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5329
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5330
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5331
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5333
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5337
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5338
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5340
LeanError(message='Lean error:\ninternal exception #5') - Line 5341
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5347
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5348
LeanError(message='Lean error:\n<input>:2:16: expected end of input') - Line 5363
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5366
LeanError(message='Lean error:\ninternal exception #5') - Line 5368
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5369
LeanError(message='Lean error:\nsimp made no progress') - Line 5374
LeanError(message='Lean error:\ninternal exception #5') - Line 5380
LeanError(message='Lean error:\nsimp made no progress') - Line 5384
LeanError(message='Lean error:\nno goals to be solved') - Line 5398
LeanError(message='Lean error:\nsimp made no progress') - Line 5400
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  x✝ ∈ (sorry.connectedComponentEquiv (Quot.mk G.Reachable v)).supp\nis not definitionally equal to the right-hand side\n  x✝ ∈ ((Equiv.refl G.ConnectedComponent) (Quot.mk G.Reachable v)).supp\ncase H.mk.a.h\nV : Type u\nG : SimpleGraph V\ninst✝ : DecidableEq V\nx✝¹ : G.ConnectedComponent\nv x✝ : V\n⊢ x✝ ∈ (sorry.connectedComponentEquiv (Quot.mk G.Reachable v)).supp ↔\n    x✝ ∈ ((Equiv.refl G.ConnectedComponent) (Quot.mk G.Reachable v)).supp") - Line 5402
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  x✝ ∈ (sorry (Quot.mk G.Reachable a✝)).supp\nis not definitionally equal to the right-hand side\n  x✝ ∈ ((φ.connectedComponentEquiv.trans φ'.connectedComponentEquiv) (Quot.mk G.Reachable a✝)).supp\ncase H.mk.a.h\nV : Type u\nV' : Type v\nV'' : Type w\nG : SimpleGraph V\nG' : SimpleGraph V'\nG'' : SimpleGraph V''\ninst✝ : DecidableEq V\nx✝² : Sort u_1\nconnectedComponentEquiv : x✝²\nφ : G ≃g G'\nφ' : G' ≃g G''\nx✝¹ : G.ConnectedComponent\na✝ : V\nx✝ : V''\n⊢ x✝ ∈ (sorry (Quot.mk G.Reachable a✝)).supp ↔\n    x✝ ∈ ((φ.connectedComponentEquiv.trans φ'.connectedComponentEquiv) (Quot.mk G.Reachable a✝)).supp") - Line 5404
LeanError(message='Lean error:\nno goals to be solved') - Line 5405
LeanError(message='Lean error:\nsimp made no progress') - Line 5408
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5409
LeanError(message="Lean error:\nunknown free variable '_fvar.513'") - Line 5413
LeanError(message='Lean error:\nsimp made no progress') - Line 5414
LeanError(message="Lean error:\nno applicable extensionality theorem found for\n  Set (?m.1627 h c')") - Line 5415
LeanError(message='Lean error:\nno goals to be solved') - Line 5416
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5417
LeanError(message='Lean error:\ninternal exception #5') - Line 5418
LeanError(message="Lean error:\nunknown free variable '_fvar.513'") - Line 5419
LeanError(message='Lean error:\n<input>:2:15: expected rcasesPat') - Line 5424
LeanError(message='Lean error:\ninternal exception #5') - Line 5425
LeanError(message='Lean error:\ninternal exception #5') - Line 5426
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5427
LeanError(message='Lean error:\ninternal exception #5') - Line 5428
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5430
LeanError(message='Lean error:\nsimp made no progress') - Line 5432
LeanError(message='Lean error:\nsimp made no progress') - Line 5433
LeanError(message='Lean error:\nsimp made no progress') - Line 5434
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5437
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5439
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5440
LeanError(message='Lean error:\ninternal exception #5') - Line 5446
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5447
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5448
LeanError(message='Lean error:\nsimp made no progress') - Line 5449
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.1646 - ?m.1647 + ?m.1647\nV : Type u\ninst✝² : Fintype V\nG : SimpleGraph V\ninst✝¹ : DecidableRel G.Adj\nn k ℓ μ : ℕ\ninst✝ : DecidableEq V\nv w : V\nh : G.IsSRGWith n k ℓ μ\n⊢ (G.neighborFinset v ∪ G.neighborFinset w).card + sorry = 2 * k - Fintype.card ↑(G.commonNeighbors v w) + sorry") - Line 5451
LeanError(message='Lean error:\ninternal exception #5') - Line 5452
LeanError(message='Lean error:\ninternal exception #5') - Line 5453
LeanError(message='Lean error:\nsimp made no progress') - Line 5455
LeanError(message='Lean error:\ninternal exception #5') - Line 5456
LeanError(message='Lean error:\nsimp made no progress') - Line 5457
LeanError(message='Lean error:\nsimp made no progress') - Line 5458
LeanError(message='Lean error:\ninternal exception #5') - Line 5460
LeanError(message='Lean error:\nsimp made no progress') - Line 5461
LeanError(message='Lean error:\nsimp made no progress') - Line 5476
LeanError(message='Lean error:\ninternal exception #5') - Line 5486
LeanError(message="Lean error:\ntactic 'generalize' failed, result is not type correct\n  v = x✝ ∨ v = y✝ → v ∈ sorry\ncase h\nV : Type u\nx✝¹ : Sort u_2\nSubgraph : x✝¹\nG' : sorry\nv x✝ y✝ : V\nhe : s(x✝, y✝) ∈ sorry\nhv : v ∈ s(x✝, y✝)\n⊢ v ∈ sorry") - Line 5487
LeanError(message='Lean error:\ninternal exception #5') - Line 5504
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  ?m.535 = ?m.536\nx✝ : Sort u_2\nSubgraph : x✝\nG₁ G₂ : sorry\nh : (fun G' => (?m.75, ?m.76)) G₁ = (fun G' => (?m.75, ?m.76)) G₂\n⊢ G₁ = G₂") - Line 5509
LeanError(message="Lean error:\ntactic 'constructor' failed, target is not an inductive datatype\nV : Type u\nW : Type v\nG : SimpleGraph V\nG' : SimpleGraph W\nf : G →g G'\nH H' : ?m.1209 f\nh : H ≤ H'\n⊢ sorry H ≤ sorry H'") - Line 5538
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5539
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nx✝¹ : Sort u_2\nSubgraph : x✝¹\nx✝ : Sort u_3\ninclusion : x✝\nx : sorry\ny : sorry\nh✝ : x ≤ y\nv w : ?m.2439 h✝\nh : sorry v = sorry w\n⊢ v = w") - Line 5540
LeanError(message='Lean error:\nsimp made no progress') - Line 5544
LeanError(message='Lean error:\ninternal exception #5') - Line 5545
LeanError(message='Lean error:\ninternal exception #5') - Line 5546
LeanError(message='Lean error:\ninternal exception #5') - Line 5548
LeanError(message='Lean error:\ninternal exception #5') - Line 5549
LeanError(message='Lean error:\ninternal exception #5') - Line 5550
LeanError(message='Lean error:\nfailed to synthesize\n  CanLift ?m.791 (Finset V) ?m.795 ?m.796\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command.') - Line 5551
LeanError(message='Lean error:\ninternal exception #5') - Line 5554
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5557
LeanError(message='Lean error:\nsimp made no progress') - Line 5558
LeanError(message="Lean error:\n<input>:2:16: expected ')', ',' or ':'") - Line 5559
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5561
LeanError(message='Lean error:\ninternal exception #5') - Line 5564
LeanError(message='Lean error:\ninternal exception #5') - Line 5569
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5573
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5576
LeanError(message='Lean error:\nsimp made no progress') - Line 5582
LeanError(message='Lean error:\ninternal exception #5') - Line 5585
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5591
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5595
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5597
LeanError(message='Lean error:\ninternal exception #5') - Line 5598
LeanError(message='Lean error:\ninternal exception #5') - Line 5599
LeanError(message="Lean error:\ntactic 'introN' failed, insufficient number of binders\nV : Type u\nG : SimpleGraph V\nx✝ : Sort u_2\nSubgraph : x✝\nG' : SimpleGraph V\nu : Set V\nh : G ≤ G'\n⊢ sorry ≤ sorry") - Line 5608
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5621
LeanError(message='Lean error:\n<input>:1:7: expected end of input') - Line 5623
LeanError(message='Lean error:\nsimp made no progress') - Line 5624
LeanError(message='Lean error:\ninternal exception #5') - Line 5625
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5627
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 5628
LeanError(message='Lean error:\n<input>:1:24: expected end of input') - Line 5629
LeanError(message='Lean error:\n<input>:2:2: expected end of input') - Line 5630
LeanError(message="Lean error:\n'change' tactic failed, pattern\n  sorry ↔ ?m.810\nis not definitionally equal to target\n  ¬G.Adj s t ↔ h.finpartition.part s = h.finpartition.part t") - Line 5631
LeanError(message='Lean error:\nsimp made no progress') - Line 5632
LeanError(message="Lean error:\nunknown identifier 'hn'") - Line 5633
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.4196 is not an inductive datatype') - Line 5634
LeanError(message="Lean error:\nunknown identifier 'l'") - Line 5635
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5636
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.822 is not an inductive datatype') - Line 5637
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5641
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5642
LeanError(message='Lean error:\ninternal exception #5') - Line 5643
LeanError(message='Lean error:\nexpected a term of the shape `∀xs, ∃a, p xs a` or `∀xs, p xs ∧ q xs`') - Line 5644
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5654
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5656
LeanError(message='Lean error:\ninternal exception #5') - Line 5658
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5663
LeanError(message='Lean error:\ninternal exception #5') - Line 5668
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5669
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5681
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5688
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5695
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5697
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5698
LeanError(message='Lean error:\nsimp made no progress') - Line 5700
LeanError(message='Lean error:\ninternal exception #5') - Line 5712
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5718
LeanError(message='Lean error:\ninternal exception #5') - Line 5720
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.306 is not an inductive datatype') - Line 5721
LeanError(message='Lean error:\nsimp made no progress') - Line 5722
LeanError(message='Lean error:\nsimp made no progress') - Line 5723
LeanError(message='Lean error:\nsimp made no progress') - Line 5724
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5725
LeanError(message='Lean error:\ninternal exception #5') - Line 5727
LeanError(message='Lean error:\ninternal exception #5') - Line 5728
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5731
LeanError(message='Lean error:\ntype mismatch, term\n  congr_arg List.tail sorry\nafter simplification has type\n  List.tail ?m.350 = List.tail ?m.351 : Prop\nbut is expected to have type\n  List.map (fun x => x.toProd.2) p.darts = p.support.tail : Prop') - Line 5743
LeanError(message='Lean error:\ntype mismatch, term\n  congr_arg List.dropLast sorry\nafter simplification has type\n  List.dropLast ?m.379 = List.dropLast ?m.380 : Prop\nbut is expected to have type\n  List.map (fun x => x.toProd.1) p.darts = p.support.dropLast : Prop') - Line 5745
LeanError(message='Lean error:\ninternal exception #5') - Line 5759
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5761
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5762
LeanError(message='Lean error:\ninternal exception #5') - Line 5763
LeanError(message='Lean error:\n<input>:1:10: expected end of input') - Line 5764
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5768
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5769
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5770
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5771
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5772
LeanError(message="Lean error:\ntactic 'rfl' failed, the left-hand side\n  sorry\nis not definitionally equal to the right-hand side\n  cons h' q'\nV : Type u\nG : SimpleGraph V\nu v w : V\nmotive : {u w : V} → (p : G.Walk u w) → ¬p.Nil → Sort u_1\ncons : {u v w : V} → (h : G.Adj u v) → (q : G.Walk v w) → motive (SimpleGraph.Walk.cons h q) ⋯\nh' : G.Adj u v\nq' : G.Walk v w\n⊢ sorry = cons h' q'") - Line 5784
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.246\nV : Type u\nG : SimpleGraph V\nv w : V\np : G.Walk v w\nhp : ¬p.Nil\n| w") - Line 5792
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5797
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5805
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5806
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5809
LeanError(message="Lean error:\n<input>:1:12: unexpected end of input; expected '.' or '|'") - Line 5810
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5811
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5816
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5824
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5825
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5826
LeanError(message='Lean error:\n<input>:1:3: expected end of input') - Line 5830
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5833
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5834
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5835
LeanError(message='Lean error:\ninternal exception #5') - Line 5838
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.641 is not an inductive datatype') - Line 5840
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.828 is not an inductive datatype') - Line 5841
LeanError(message='Lean error:\nsimp made no progress') - Line 5842
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.690 is not an inductive datatype') - Line 5845
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.537\nV : Type u\nG : SimpleGraph V\nC : Set G.ConnectedComponent\ns : Set V\nc : G.ConnectedComponent\nx✝ : Sort u_1\nRepresents : x✝\nhrep : sorry\nh : c ∉ C\n⊢ (c.supp \\ s).ncard = c.supp.ncard") - Line 5846
LeanError(message='Lean error:\n<input>:4:25: expected end of input') - Line 5847
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 5851
LeanError(message='Lean error:\n<input>:1:25: expected end of input') - Line 5852
LeanError(message='Lean error:\nsimp made no progress') - Line 5853
LeanError(message='Lean error:\nsimp made no progress') - Line 5854
LeanError(message='Lean error:\ninternal exception #5') - Line 5855
LeanError(message='Lean error:\ninternal exception #5') - Line 5856
LeanError(message='Lean error:\ninternal exception #5') - Line 5858
LeanError(message='Lean error:\nrcases tactic failed: x✝ : V → Prop is not an inductive datatype') - Line 5859
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5861
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5869
LeanError(message='Lean error:\ninternal exception #5') - Line 5870
LeanError(message='Lean error:\nsimp made no progress') - Line 5872
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5873
LeanError(message='Lean error:\nno goals to be solved') - Line 5874
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5875
LeanError(message='Lean error:\ntype mismatch, term\n  SimpleGraph.Walk.toSubgraph_adj_getVert w sorry\nafter simplification has type\n  w.toSubgraph.Adj (w.getVert ?m.180) (w.getVert (?m.180 + 1)) : Prop\nbut is expected to have type\n  w.toSubgraph.Adj u w.snd : Prop') - Line 5876
LeanError(message='Lean error:\ninternal exception #5') - Line 5877
LeanError(message='Lean error:\n<input>:2:27: expected end of input') - Line 5878
LeanError(message='Lean error:\nrcases tactic failed: a✝ : p.toSubgraph.2 u v is not an inductive datatype') - Line 5880
LeanError(message='Lean error:\nrcases tactic failed: a✝ : p.toSubgraph.2 (p.getVert i) v is not an inductive datatype') - Line 5882
LeanError(message='Lean error:\n<input>:1:7: expected term') - Line 5883
LeanError(message="Lean error:\ntactic 'cases' failed, nested error:\ndependent elimination failed, failed to solve equation\n  u = p.getVert (i + 1)") - Line 5884
LeanError(message='Lean error:\nrcases tactic failed: a✝ : p.toSubgraph.2 u v is not an inductive datatype') - Line 5885
LeanError(message='Lean error:\nrcases tactic failed: a✝ : p.toSubgraph.2 (p.getVert i) v is not an inductive datatype') - Line 5886
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5887
LeanError(message='Lean error:\n<input>:2:21: expected end of input') - Line 5888
LeanError(message='Lean error:\n<input>:1:27: expected term') - Line 5889
LeanError(message='Lean error:\nrcases tactic failed: x✝ : ?m.991 is not an inductive datatype') - Line 5890
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5891
LeanError(message='Lean error:\nno goals to be solved') - Line 5893
LeanError(message='Lean error:\n<input>:3:4: expected end of input') - Line 5894
LeanError(message='Lean error:\ninternal exception #5') - Line 5895
LeanError(message='Lean error:\ninternal exception #5') - Line 5896
LeanError(message='Lean error:\ninternal exception #5') - Line 5897
LeanError(message='Lean error:\ninternal exception #5') - Line 5898
LeanError(message='Lean error:\ninternal exception #5') - Line 5899
LeanError(message='Lean error:\ninternal exception #5') - Line 5902
LeanError(message='Lean error:\nsimp made no progress') - Line 5903
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5904
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5907
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5908
LeanError(message='Lean error:\nno applicable extensionality theorem found for\n  Finset sorry') - Line 5912
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5916
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5917
LeanError(message='Lean error:\nsimp made no progress') - Line 5919
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5921
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5922
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5923
LeanError(message='Lean error:\n<input>:2:4: expected end of input') - Line 5924
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5925
LeanError(message='Lean error:\ninternal exception #5') - Line 5934
LeanError(message='Lean error:\ninternal exception #5') - Line 5935
LeanError(message='Lean error:\n<input>:1:0: expected tactic') - Line 5936
LeanError(message='Lean error:\nno goals to be solved') - Line 5937
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  ?m.537\nV : Type u\nG : SimpleGraph V\ninst✝ : DecidableEq V\nu v w : V\np : G.Walk v w\nh : u ∈ p.support\nhuw : u ≠ w\n⊢ (p.takeUntil u h).length < p.length") - Line 5938
LeanError(message="Lean error:\nunknown identifier 'takeUntil.induct'") - Line 5939
LeanError(message='Lean error:\ninternal exception #5') - Line 5940
LeanError(message='Lean error:\nsimp made no progress') - Line 5941
LeanError(message='Lean error:\nsimp made no progress') - Line 5942
LeanError(message="Lean error:\n<input>:1:9: unexpected end of input; expected '{'") - Line 5944
LeanError(message='Lean error:\nno goals to be solved') - Line 5947
LeanError(message='Lean error:\ninternal exception #5') - Line 5951
LeanError(message='Lean error:\nno goals to be solved') - Line 5960
LeanError(message='Lean error:\n<input>:2:17: expected end of input') - Line 5964
LeanError(message='Lean error:\ninternal exception #5') - Line 5965
LeanError(message='Lean error:\ninternal exception #5') - Line 5966
LeanError(message='Lean error:\nsimp made no progress') - Line 5971
LeanError(message='Lean error:\ninternal exception #5') - Line 5973
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nn : ℕ\nV : Type u_1\nx✝ : Sort u_3\nextremalNumber : x✝\ninst✝ : Fintype V\nhc : Fintype.card V = n\ne : V ≃ Fin n := sorry\n⊢ sorry = sorry.sup fun x => sorry.card") - Line 5975
LeanError(message='Lean error:\ninternal exception #5') - Line 5976
LeanError(message='Lean error:\nsimp made no progress') - Line 5978
LeanError(message='Lean error:\nsimp made no progress') - Line 5979
LeanError(message='Lean error:\nsimp made no progress') - Line 5980
LeanError(message='Lean error:\nsimp made no progress') - Line 5981
LeanError(message="Lean error:\ntactic 'rewrite' failed, motive is not type correct:\n  fun _a => sorry = sorry\nError: application type mismatch\n  @?m.1562 extremalNumber\nargument\n  extremalNumber\nhas type\n  x✝ : Sort u_6\nbut is expected to have type\n  ?m.712 : Sort u_6\n\nExplanation: The rewrite tactic rewrites an expression 'e' using an equality 'a = b' by the following process. First, it looks for all 'a' in 'e'. Second, it tries to abstract these occurrences of 'a' to create a function 'm := fun _a => ...', called the *motive*, with the property that 'm a' is definitionally equal to 'e'. Third, we observe that 'congrArg' implies that 'm a = m b', which can be used with lemmas such as 'Eq.mpr' to change the goal. However, if 'e' depends on specific properties of 'a', then the motive 'm' might not typecheck.\n\nPossible solutions: use rewrite's 'occs' configuration option to limit which occurrences are rewritten, or use 'simp' or 'conv' mode, which have strategies for certain kinds of dependencies (these tactics can handle proofs and 'Decidable' instances whose types depend on the rewritten term, and 'simp' can apply user-defined '@[congr]' theorems as well).\nx✝ : Sort u_6\nextremalNumber : x✝\nn₁ n₂ : ℕ\nW₁ : Type u_4\nW₂ : Type u_5\nH₁ : SimpleGraph W₁\nH₂ : SimpleGraph W₂\nh : n₁ = n₂\ne : H₁ ≃g H₂\n⊢ sorry = sorry") - Line 5983
LeanError(message='Lean error:\ninternal exception #5') - Line 5985
LeanError(message='Lean error:\ntypeclass instance problem is stuck, it is often due to metavariables\n  PosMulReflectLT ?m.1167') - Line 5987
LeanError(message="Lean error:\ntactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  (Finset.offDiag ?s).card\n⊢ ↑sorry.card ≤ 1 * ?m.2075 ^ 2") - Line 5988
LeanError(message='Lean error:\n<input>:1:11: expected end of input') - Line 5989
LeanError(message='Lean error:\n<input>:1:22: expected end of input') - Line 5990
LeanError(message='Lean error:\nsimp made no progress') - Line 5991
LeanError(message='Lean error:\nrcases tactic failed: a✝ : ?m.10174 is not an inductive datatype') - Line 5992
LeanError(message="Lean error:\nunknown free variable '_fvar.3130'") - Line 5993
LeanError(message="Lean error:\ntactic 'rewrite' failed, equality or iff proof expected\n  x✝\nα : Type u_1\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\nP : Finpartition Finset.univ\nε : ℝ\ninst✝ : Nonempty α\nx✝ : Sort u_2\ndistinctPairs : x✝\nx : { i // i ∈ P.parts.offDiag }\nhε₁ : ε ≤ 1\nhPα : P.parts.card * 16 ^ P.parts.card ≤ Fintype.card α\nhPε : 100 ≤ 4 ^ P.parts.card * ε ^ 5\n⊢ sorry ^ 2 + ((if sorry then 0 else ε ^ 4 / 3) - ε ^ 5 / 25) ≤ (∑ i ∈ sorry, sorry ^ 2) / 16 ^ P.parts.card") - Line 5994
LeanError(message='Lean error:\n<input>:3:10: expected term') - Line 5995
